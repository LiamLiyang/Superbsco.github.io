<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Superb&#39;s blog</title>
  <subtitle>给时间以生命，而不是给生命以时间。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-10T14:48:59.216Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄少鹏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2017-02-10 打印如图三角形</title>
    <link href="http://yoursite.com/2017/02/10/sf12/"/>
    <id>http://yoursite.com/2017/02/10/sf12/</id>
    <published>2017-02-10T14:36:52.000Z</published>
    <updated>2017-02-10T14:48:59.216Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">在不安的人生里，优雅前行</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>编写一个Java Application程序，循环打印如下图所示图案：<br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/tuan.png"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public class Main&#123;</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		<span class="keyword">for</span>(int i=1;i&lt;10;i++)&#123;//打印1-9的数字</div><div class="line">			<span class="keyword">for</span>(int j=0;j&lt;9-i;j++)&#123;//打印空格</div><div class="line">				System.out.print(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;2*i-1;k++)&#123;//打印多少个数字</div><div class="line">				System.out.print(i);</div><div class="line">			&#125;</div><div class="line">		System.out.println();//换行</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(int l=8;l&gt;0;l--)&#123;</div><div class="line">			<span class="keyword">for</span>(int m=0;m&lt;9<span class="_">-l</span>;m++)&#123;</div><div class="line">				System.out.print(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">for</span>(int k=0;k&lt;2*l-1;k++)&#123;</div><div class="line">				System.out.print((char)(64+l));</div><div class="line">			&#125;</div><div class="line">			System.out.println();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;在不安的人生里，优雅前行&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;编写一个Java Application程序，循环打印如下图所示图案：&lt;br&gt; &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-container&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot;  style=&quot;width: 100%;&quot;&gt;&lt;img src=&quot;/uploads/tuan.png&quot;/&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="打印三角形" scheme="http://yoursite.com/tags/%E6%89%93%E5%8D%B0%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-09 Algorithm Gossip字符核对</title>
    <link href="http://yoursite.com/2017/02/09/sf11/"/>
    <id>http://yoursite.com/2017/02/09/sf11/</id>
    <published>2017-02-09T14:39:33.000Z</published>
    <updated>2017-02-09T15:20:59.050Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我的人生像在白夜行里走路。</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今日的一些高阶程式语言对于字符的处理支援越来越强大，不过字串搜寻本身仍是个值得导论的课题，这边以Boyer-Moore法来说明如何进行字串说明，这个方法快且原理简洁易懂。<a id="more"></a></p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>字串搜寻本身不难，使用暴力法也可以求解，但如何快速搜寻字串就不简单了，传统的字串搜寻是从关键字与字串的开头开始比对，例如Knuth-Morris-Pratt演算法字串搜寻，这个方法也不错，不过要花时间在公式计算上；Boyer-Moore字串核对改由关键字的后面开始核对字串，并制作前进表，如果比对不符合则依前进表中的值前进至下一个核对处，假设是p好了，然后比对字串中p-n+1至p的值是否与关键字相同。如果关键字中由重复出现的字元，则前进值就会有两个以上的值，此时则取前进值较小的值，如此就不会跳过可能的位置，加入texture这个关键字，t的前进值应该取后面的3而不是取前面的7。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line">void table(char*); // 建立前进表</div><div class="line">int search(int, char *, char*); // 搜寻关键字</div><div class="line">void substring(char *, char *, int, int); // 取出子字串</div><div class="line">int skip[256];</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">	char str_input[80];</div><div class="line">	char str_key[80];</div><div class="line">	char tmp[80] =</div><div class="line">	&#123;</div><div class="line">		<span class="string">'\0'</span></div><div class="line">	&#125;;</div><div class="line">	int m, n, p;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"请输入字串："</span>);</div><div class="line">	gets_s(str_input);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"请输入搜寻关键字："</span>);</div><div class="line">	gets_s(str_key);</div><div class="line">	m = strlen(str_input); // 计算字串长度</div><div class="line">	n = strlen(str_key);</div><div class="line">	table(str_key);</div><div class="line">	p = search(n - 1, str_input, str_key);</div><div class="line">	<span class="keyword">while</span> (p != -1)</div><div class="line">	&#123;</div><div class="line">		substring(str_input, tmp, p, m);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, tmp);</div><div class="line">		p = search(p + n + 1, str_input, str_key);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void table(char *key)</div><div class="line">&#123;</div><div class="line">	int k, n;</div><div class="line">	n = strlen(key);</div><div class="line">	<span class="keyword">for</span> (k = 0; k &lt;= 255; k++)</div><div class="line">		skip[k] = n;</div><div class="line">	<span class="keyword">for</span> (k = 0; k &lt; n - 1; k++)</div><div class="line">		skip[key[k]] = n - k - 1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int search(int p, char *input, char *key)</div><div class="line">&#123;</div><div class="line">	int i, m, n;</div><div class="line">	char tmp[80] =</div><div class="line">	&#123;</div><div class="line">		<span class="string">'\0'</span></div><div class="line">	&#125;;</div><div class="line">	m = strlen(input);</div><div class="line">	n = strlen(key);</div><div class="line">	<span class="keyword">while</span> (p &lt; m)</div><div class="line">	&#123;</div><div class="line">		substring(input, tmp, p - n + 1, p);</div><div class="line">		<span class="keyword">if</span> (!strcmp(tmp, key))</div><div class="line">			// 比较两字串是否相同</div><div class="line">			<span class="built_in">return</span> p - n + 1;</div><div class="line">		p += skip[input[p]];</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> -1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void substring(char *text, char *tmp, int s, int e)</div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	<span class="keyword">for</span> (i = s, j = 0; i &lt;= e; i++, j++)</div><div class="line">	tmp[j] = text[i];</div><div class="line">	tmp[j] = <span class="string">'\0'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/zchd.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我的人生像在白夜行里走路。&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今日的一些高阶程式语言对于字符的处理支援越来越强大，不过字串搜寻本身仍是个值得导论的课题，这边以Boyer-Moore法来说明如何进行字串说明，这个方法快且原理简洁易懂。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符核对" scheme="http://yoursite.com/tags/%E5%AD%97%E7%AC%A6%E6%A0%B8%E5%AF%B9/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-08 Algorithm Gossip生命游戏</title>
    <link href="http://yoursite.com/2017/02/08/sf10/"/>
    <id>http://yoursite.com/2017/02/08/sf10/</id>
    <published>2017-02-08T14:31:41.000Z</published>
    <updated>2017-02-08T15:46:46.528Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">零落成泥碾作尘，只有香如故。</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>生命游戏（game of life）为1970年由英国数学家J.H.Conway所提出，某一细胞的邻居包括上，下，左，右，左上，左下，右上与右下相邻之细胞，游戏规则如下：<br>孤单死亡：如果细胞的邻居小于一个，则该细胞在下一次状态将死亡。<br>拥挤死亡：如果细胞的邻居在四个以上，则该细胞在下一次状态将死亡。<br>稳点：如果细胞的邻居为二个或三个，则下一次状态为稳定存活。<br>复活：如果某位置原无细胞存活，而该位置的邻居为三个，则该位置将复活一细胞。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>生命游戏的规则可简化为以下，并使用CASE比对即可使用程式实作：<br>邻居个数为0，1，4，5，6，7，8时，则该细胞下次状态为死亡。<br>邻居个数为2时，则该细胞下次状态为复活。<br>邻居个数为3时，则该细胞下次状态为稳定。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;ctype.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define MAXROW 10</span></div><div class="line"><span class="comment">#define MAXCOL 25</span></div><div class="line"><span class="comment">#define DEAD 0</span></div><div class="line"><span class="comment">#define ALIVE 1</span></div><div class="line"></div><div class="line">int map[MAXROW][MAXCOL], newmap[MAXROW][MAXCOL];</div><div class="line">void init();</div><div class="line">int neighbors(int, int);</div><div class="line">void outputMap();</div><div class="line">void copyMap();</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int row, col;</div><div class="line">	char ans;</div><div class="line">	init();</div><div class="line">	<span class="keyword">while</span> (1)</div><div class="line">	&#123;</div><div class="line">		outputMap();</div><div class="line">		<span class="keyword">for</span> ( row = 0; row &lt; MAXROW; row++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> ( col = 0; col &lt; MAXCOL; col++)</div><div class="line">			&#123;</div><div class="line">				switch (neighbors(row, col)) </div><div class="line">				&#123;</div><div class="line">				<span class="keyword">case</span> 0:</div><div class="line">				<span class="keyword">case</span> 1:</div><div class="line">				<span class="keyword">case</span> 4:</div><div class="line">				<span class="keyword">case</span> 5:</div><div class="line">				<span class="keyword">case</span> 6:</div><div class="line">				<span class="keyword">case</span> 7:</div><div class="line">				<span class="keyword">case</span> 8:</div><div class="line">					newmap[row][col] = DEAD;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				<span class="keyword">case</span> 2:</div><div class="line">					newmap[row][col] = map[row][col];</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				<span class="keyword">case</span> 3:</div><div class="line">					newmap[row][col] = ALIVE;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		copyMap();</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\nContinue next Generation ?\n"</span>);</div><div class="line">		getchar();</div><div class="line">		ans = toupper(getchar());</div><div class="line">		<span class="keyword">if</span> (ans !=<span class="string">'Y'</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">init</span></span>()</div><div class="line">&#123;</div><div class="line">	int row, col;</div><div class="line">	<span class="keyword">for</span> ( row= 0; row &lt; MAXROW; row++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( col = 0; col &lt; MAXCOL; col++)</div><div class="line">		&#123;</div><div class="line">			map[row][col] = DEAD;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	puts(<span class="string">"Game of life Program"</span>);</div><div class="line">	puts(<span class="string">"Enter x,y where x,y is living cell"</span>);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"0&lt;=x&lt;=%d,0&lt;=y&lt;=%d\n"</span>, MAXROW - 1, MAXCOL - 1);</div><div class="line">	puts(<span class="string">"Terminate with x,y=-1,-1"</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">while</span> (1)</div><div class="line">	&#123;</div><div class="line">		scanf(<span class="string">"%d%d"</span>, &amp;row, &amp;col);</div><div class="line">		<span class="keyword">if</span> (0&lt;=row &amp;&amp; row &lt;MAXROW &amp;&amp; 0&lt;=col &amp;&amp; col&lt;MAXCOL)</div><div class="line">		&#123;</div><div class="line">			map[row][col] = ALIVE;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(row==-1||col==-1)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"(x,y)exceeds map ranage!"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int neighbors(int row, int col)</div><div class="line">&#123;</div><div class="line">	int count = 0, c, r;</div><div class="line">	<span class="keyword">for</span> ( r = row-1; r &lt;= row+1; r++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (c = col - 1; c &lt;= col + 1; c++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (r&lt;0||r&gt;=MAXROW||c&lt;0||c&gt;=MAXCOL)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (map[r][c]==ALIVE)</div><div class="line">			&#123;</div><div class="line">				count++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (map[row][col] == ALIVE)count--;</div><div class="line">	<span class="built_in">return</span> count;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">outputMap</span></span>()</div><div class="line">&#123;</div><div class="line">	int row, col;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n\n%20cGame of life cell status\n"</span>,<span class="string">' '</span>);</div><div class="line">	<span class="keyword">for</span> ( row = 0; row &lt; MAXROW; row++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n%20c"</span>,<span class="string">' '</span>);</div><div class="line">		<span class="keyword">for</span> ( col = 0; col &lt; MAXCOL; col++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (map[row][col] == ALIVE)putchar(<span class="string">'#'</span>);</div><div class="line">			<span class="keyword">else</span> putchar(<span class="string">'-'</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">copyMap</span></span>()</div><div class="line">&#123;</div><div class="line">	int row, col;</div><div class="line">	<span class="keyword">for</span> ( row = 0; row &lt; MAXROW; row++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( col = 0; col &lt; MAXCOL; col++)</div><div class="line">		&#123;</div><div class="line">			map[row][col] = newmap[row][col];</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/smyx.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;零落成泥碾作尘，只有香如故。&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;生命游戏（game of life）为1970年由英国数学家J.H.Conway所提出，某一细胞的邻居包括上，下，左，右，左上，左下，右上与右下相邻之细胞，游戏规则如下：&lt;br&gt;孤单死亡：如果细胞的邻居小于一个，则该细胞在下一次状态将死亡。&lt;br&gt;拥挤死亡：如果细胞的邻居在四个以上，则该细胞在下一次状态将死亡。&lt;br&gt;稳点：如果细胞的邻居为二个或三个，则下一次状态为稳定存活。&lt;br&gt;复活：如果某位置原无细胞存活，而该位置的邻居为三个，则该位置将复活一细胞。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="生命游戏" scheme="http://yoursite.com/tags/%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-07 Algorithm Gossip八枚银币</title>
    <link href="http://yoursite.com/2017/02/07/sf9/"/>
    <id>http://yoursite.com/2017/02/07/sf9/</id>
    <published>2017-02-07T14:12:38.000Z</published>
    <updated>2017-02-07T15:31:46.085Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我们生而残缺，却无往不在寻找完整；<br>我们生而孤独，却无往不在寻找羁绊。</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>现有八枚银币abcdefgh，已知其中一枚是假币，其重量不同于真币，但不知是较轻或较重，如何使用天平以最少的比较次数，决定出哪枚是假币，并得知假币比真比较轻或较重。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>单求假币的问题是不难，但问题限制使用最少的比较次数，所以我们不能单以单纯的回圈比较来求解，我们可以使用决策树（decision tree），使用分析与树状图来协助求解。一个简单的状况是这样的，我们比较a+b+c与d+e+f，如果相等，则假币必是g或h，我们先比较g或h哪个较重，如果g较重，再与a比较（a是真币），如果g等于a，则g为真币，则h为假币，由于h比g轻而g是真币，则h假币的重量比真币轻。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;time.h&gt;</span></div><div class="line"></div><div class="line">void compare(int[], int, int, int);</div><div class="line">void eightcoins(int[]);</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int coins[8] = &#123; 0 &#125;;</div><div class="line">	int i;</div><div class="line">	srand(time(NULL));</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 8; i++)</div><div class="line">	&#123;</div><div class="line">		coins[i] = 10;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n输入假币重量（比10大或小）："</span>);</div><div class="line">	scanf(<span class="string">"%d"</span>, &amp;i);</div><div class="line">	coins[rand() % 8] = i;</div><div class="line">	eightcoins(coins);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n\n列出所有钱币重量："</span>);</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 8; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%d  "</span>, coins[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void compare(int coins[], int i, int j, int k)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (coins[i]&gt;coins[k])</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n假币 %d 较重"</span>, i + 1);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n假币 %d 较轻"</span>, j + 1);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void eightcoins(int coins[])</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (coins[0]+coins[1]+coins[2]==coins[3]+coins[4]+coins[5])</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (coins[6]&gt;coins[7])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 6, 7, 0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			compare(coins, 7, 6, 0);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (coins[0] + coins[1] + coins[2] &gt; coins[3] + coins[4] + coins[5])</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (coins[0]+coins[3]==coins[1]+coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 2, 5, 0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(coins[0] + coins[3] &gt; coins[1] + coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 0, 4, 1);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (coins[0] + coins[3] &lt; coins[1] + coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 1, 3, 0);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(coins[0] + coins[1] + coins[2] &lt; coins[3] + coins[4] + coins[5])</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (coins[0] + coins[3] == coins[1] + coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 5, 2, 0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (coins[0] + coins[3] &gt; coins[1] + coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 3, 1, 0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (coins[0]+coins[3]&lt;coins[1]+coins[4])</div><div class="line">		&#123;</div><div class="line">			compare(coins, 4, 0, 1);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/bqb.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我们生而残缺，却无往不在寻找完整；&lt;br&gt;我们生而孤独，却无往不在寻找羁绊。&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;现有八枚银币abcdefgh，已知其中一枚是假币，其重量不同于真币，但不知是较轻或较重，如何使用天平以最少的比较次数，决定出哪枚是假币，并得知假币比真比较轻或较重。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="八枚银币" scheme="http://yoursite.com/tags/%E5%85%AB%E6%9E%9A%E9%93%B6%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio创建计算器Demo</title>
    <link href="http://yoursite.com/2017/02/07/calculatordemo/"/>
    <id>http://yoursite.com/2017/02/07/calculatordemo/</id>
    <published>2017-02-07T13:59:22.000Z</published>
    <updated>2017-02-07T14:11:54.542Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">如果所有人都能理解你，那你得多平凡啊！</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用Android Studio创建计算器。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code style="color: #FF0033">activity_main.xml处写界面代码</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</div><div class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    android:id=<span class="string">"@+id/activity_main"</span></div><div class="line">    android:layout_width=<span class="string">"fill_parent"</span></div><div class="line">    android:layout_height=<span class="string">"fill_parent"</span></div><div class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></div><div class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></div><div class="line">    tools:context=<span class="string">"com.example.superseppol.calculatordemo.MainActivity"</span></div><div class="line">    android:weightSum=<span class="string">"1"</span></div><div class="line">    android:orientation=<span class="string">"vertical"</span></div><div class="line">    android:gravity=<span class="string">"center_vertical"</span></div><div class="line">    android:baselineAligned=<span class="string">"false"</span>&gt;</div><div class="line"></div><div class="line">    &lt;EditText</div><div class="line">    android:layout_width=<span class="string">"290dp"</span></div><div class="line">    android:layout_height=<span class="string">"60dip"</span></div><div class="line">    android:id=<span class="string">"@+id/et_input"</span></div><div class="line">        android:editable=<span class="string">"false"</span></div><div class="line">        android:layout_gravity=<span class="string">"center"</span></div><div class="line">        android:gravity=<span class="string">"right|bottom"</span></div><div class="line">        android:textSize=<span class="string">"35sp"</span></div><div class="line">        android:background=<span class="string">"@drawable/white_bg"</span></div><div class="line">    /&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=<span class="string">"fill_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        android:layout_marginTop=<span class="string">"20dp"</span></div><div class="line">        android:orientation=<span class="string">"horizontal"</span></div><div class="line">        android:gravity=<span class="string">"center_horizontal"</span>&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"C"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_clear"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"DEL"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_del"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"÷"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_multiply"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"×"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_divide"</span>/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=<span class="string">"fill_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        android:layout_marginTop=<span class="string">"10dp"</span></div><div class="line">        android:orientation=<span class="string">"horizontal"</span></div><div class="line">        android:gravity=<span class="string">"center_horizontal"</span>&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"7"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_7"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"8"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_8"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"9"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_9"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"-"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_minus"</span>/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=<span class="string">"fill_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        android:layout_marginTop=<span class="string">"10dp"</span></div><div class="line">        android:orientation=<span class="string">"horizontal"</span></div><div class="line">        android:gravity=<span class="string">"center_horizontal"</span>&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"4"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_4"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"5"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_5"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"6"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_6"</span>/&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"65dp"</span></div><div class="line">            android:text=<span class="string">"+"</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_plus"</span>/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=<span class="string">"fill_parent"</span></div><div class="line">        android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">        android:orientation=<span class="string">"horizontal"</span></div><div class="line">        android:gravity=<span class="string">"center_horizontal"</span></div><div class="line">        android:layout_marginTop=<span class="string">"10dp"</span>&gt;</div><div class="line">        &lt;LinearLayout</div><div class="line">            android:layout_width=<span class="string">"wrap_content"</span></div><div class="line">            android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">            android:orientation=<span class="string">"vertical"</span>&gt;</div><div class="line">            &lt;LinearLayout</div><div class="line">                android:layout_width=<span class="string">"wrap_content"</span></div><div class="line">                android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">                android:orientation=<span class="string">"horizontal"</span>&gt;</div><div class="line">                &lt;Button</div><div class="line">                    android:layout_width=<span class="string">"65dp"</span></div><div class="line">                    android:layout_height=<span class="string">"65dp"</span></div><div class="line">                    android:text=<span class="string">"1"</span></div><div class="line">                    android:gravity=<span class="string">"right|bottom"</span></div><div class="line">                    android:paddingRight=<span class="string">"10dp"</span></div><div class="line">                    android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">                    android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">                    android:textSize=<span class="string">"30sp"</span></div><div class="line">                    android:id=<span class="string">"@+id/btn_1"</span></div><div class="line">                    /&gt;</div><div class="line">                &lt;Button</div><div class="line">                    android:layout_width=<span class="string">"65dp"</span></div><div class="line">                    android:layout_height=<span class="string">"65dp"</span></div><div class="line">                    android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">                    android:text=<span class="string">"2"</span></div><div class="line">                    android:gravity=<span class="string">"right|bottom"</span></div><div class="line">                    android:paddingRight=<span class="string">"10dp"</span></div><div class="line">                    android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">                    android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">                    android:textSize=<span class="string">"30sp"</span></div><div class="line">                    android:id=<span class="string">"@+id/btn_2"</span></div><div class="line">                    /&gt;</div><div class="line">                &lt;Button</div><div class="line">                    android:layout_width=<span class="string">"65dp"</span></div><div class="line">                    android:layout_height=<span class="string">"65dp"</span></div><div class="line">                    android:text=<span class="string">"3"</span></div><div class="line">                    android:gravity=<span class="string">"right|bottom"</span></div><div class="line">                    android:paddingRight=<span class="string">"10dp"</span></div><div class="line">                    android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">                    android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">                    android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">                    android:textSize=<span class="string">"30sp"</span></div><div class="line">                    android:id=<span class="string">"@+id/btn_3"</span></div><div class="line">                    /&gt;</div><div class="line">            &lt;/LinearLayout&gt;</div><div class="line">        &lt;LinearLayout</div><div class="line">            android:layout_width=<span class="string">"wrap_content"</span></div><div class="line">            android:layout_height=<span class="string">"wrap_content"</span></div><div class="line">            android:layout_marginTop=<span class="string">"10dp"</span></div><div class="line">            android:orientation=<span class="string">"horizontal"</span></div><div class="line">            android:gravity=<span class="string">"center_horizontal"</span>&gt;</div><div class="line">            &lt;Button</div><div class="line">                android:layout_width=<span class="string">"140dp"</span></div><div class="line">                android:layout_height=<span class="string">"65dp"</span></div><div class="line">                android:text=<span class="string">"0"</span></div><div class="line">                android:gravity=<span class="string">"right|bottom"</span></div><div class="line">                android:paddingRight=<span class="string">"10dp"</span></div><div class="line">                android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">                android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">                android:textSize=<span class="string">"30sp"</span></div><div class="line">                android:id=<span class="string">"@+id/btn_0"</span></div><div class="line">                /&gt;</div><div class="line">            &lt;Button</div><div class="line">                android:layout_width=<span class="string">"65dp"</span></div><div class="line">                android:layout_height=<span class="string">"65dp"</span></div><div class="line">                android:text=<span class="string">"."</span></div><div class="line">                android:gravity=<span class="string">"right|bottom"</span></div><div class="line">                android:paddingRight=<span class="string">"10dp"</span></div><div class="line">                android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">                android:background=<span class="string">"@drawable/white_selector"</span></div><div class="line">                android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">                android:textSize=<span class="string">"30sp"</span></div><div class="line">                android:id=<span class="string">"@+id/btn_point"</span></div><div class="line">                /&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=<span class="string">"65dp"</span></div><div class="line">            android:layout_height=<span class="string">"140dp"</span></div><div class="line">            android:text=<span class="string">"="</span></div><div class="line">            android:gravity=<span class="string">"right|bottom"</span></div><div class="line">            android:layout_marginLeft=<span class="string">"10dp"</span></div><div class="line">            android:paddingRight=<span class="string">"10dp"</span></div><div class="line">            android:paddingBottom=<span class="string">"10dp"</span></div><div class="line">            android:background=<span class="string">"@drawable/orange_select"</span></div><div class="line">            android:textSize=<span class="string">"30sp"</span></div><div class="line">            android:id=<span class="string">"@+id/btn_equal"</span>/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">在AndroidManifest.xml处添加去TitleBar主题</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:theme=<span class="string">"@android:style/Theme.Black.NoTitleBar"</span></div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">MainActivity.java处写逻辑运算代码</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div></pre></td><td class="code"><pre><div class="line">package com.example.superseppol.calculatordemo;</div><div class="line"></div><div class="line">import android.app.Activity;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.View;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line"></div><div class="line">public class MainActivity extends Activity implements View.OnClickListener &#123;</div><div class="line">    Button btn_0;//0数字按钮</div><div class="line">    Button btn_1;//1数字按钮</div><div class="line">    Button btn_2;//2数字按钮</div><div class="line">    Button btn_3;//3数字按钮</div><div class="line">    Button btn_4;//4数字按钮</div><div class="line">    Button btn_5;//5数字按钮</div><div class="line">    Button btn_6;//6数字按钮</div><div class="line">    Button btn_7;//7数字按钮</div><div class="line">    Button btn_8;//8数字按钮</div><div class="line">    Button btn_9;//9数字按钮</div><div class="line">    Button btn_point;//小数点按钮</div><div class="line">    Button btn_clear;//清除按钮</div><div class="line">    Button btn_del;//删除按钮</div><div class="line">    Button btn_plus;//加号按钮</div><div class="line">    Button btn_minus;//减号按钮</div><div class="line">    Button btn_multiply;//乘号按钮</div><div class="line">    Button btn_divide;//除号按钮</div><div class="line">    Button btn_equal;//等于号按钮</div><div class="line">    EditText et_input;//显示输入内容的按钮</div><div class="line">    boolean clear_flag;//清空标识</div><div class="line">    @Override</div><div class="line">    public void onClick(View v) &#123;</div><div class="line">        String str=et_input.getText().toString();</div><div class="line">        switch (v.getId())&#123;</div><div class="line">            <span class="keyword">case</span> R.id.btn_0:</div><div class="line">            <span class="keyword">case</span> R.id.btn_1:</div><div class="line">            <span class="keyword">case</span> R.id.btn_2:</div><div class="line">            <span class="keyword">case</span> R.id.btn_3:</div><div class="line">            <span class="keyword">case</span> R.id.btn_4:</div><div class="line">            <span class="keyword">case</span> R.id.btn_5:</div><div class="line">            <span class="keyword">case</span> R.id.btn_6:</div><div class="line">            <span class="keyword">case</span> R.id.btn_7:</div><div class="line">            <span class="keyword">case</span> R.id.btn_8:</div><div class="line">            <span class="keyword">case</span> R.id.btn_9:</div><div class="line">            <span class="keyword">case</span> R.id.btn_point:</div><div class="line">                <span class="keyword">if</span> (clear_flag)&#123;</div><div class="line">                    clear_flag=<span class="literal">false</span>;</div><div class="line">                    str=<span class="string">""</span>;</div><div class="line">                    et_input.setText(<span class="string">""</span>);</div><div class="line">                &#125;</div><div class="line">                et_input.setText(str+((Button)v).getText());</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.btn_plus:</div><div class="line">            <span class="keyword">case</span> R.id.btn_minus:</div><div class="line">            <span class="keyword">case</span> R.id.btn_multiply:</div><div class="line">            <span class="keyword">case</span> R.id.btn_divide:</div><div class="line">                <span class="keyword">if</span> (clear_flag)&#123;</div><div class="line">                    clear_flag=<span class="literal">false</span>;</div><div class="line">                    str=<span class="string">""</span>;</div><div class="line">                    et_input.setText(<span class="string">""</span>);</div><div class="line">                &#125;</div><div class="line">                et_input.setText(str+<span class="string">" "</span>+((Button)v).getText()+<span class="string">" "</span>);</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.btn_clear:</div><div class="line">                clear_flag=<span class="literal">false</span>;</div><div class="line">                str=<span class="string">""</span>;</div><div class="line">                et_input.setText(<span class="string">""</span>);</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.btn_del:</div><div class="line">                <span class="keyword">if</span> (clear_flag)&#123;</div><div class="line">                    clear_flag=<span class="literal">false</span>;</div><div class="line">                    str=<span class="string">""</span>;</div><div class="line">                    et_input.setText(<span class="string">""</span>);</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span> (str!=null&amp;&amp;!str.equals(<span class="string">""</span>))&#123;</div><div class="line">                    et_input.setText(str.substring(0,str.length()-1));</div><div class="line">                &#125;</div><div class="line">                <span class="built_in">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.btn_equal:</div><div class="line">                getResult();</div><div class="line">                <span class="built_in">break</span>;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    /*</div><div class="line">    * 运算结果</div><div class="line">    * */</div><div class="line">    private void <span class="function"><span class="title">getResult</span></span>()&#123;</div><div class="line">          String exp=et_input.getText().toString();</div><div class="line">        <span class="keyword">if</span> (exp==null||exp.equals(<span class="string">""</span>))&#123;</div><div class="line">            <span class="built_in">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (!exp.contains(<span class="string">" "</span>)) &#123;</div><div class="line">            <span class="built_in">return</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (clear_flag)&#123;</div><div class="line">            clear_flag=<span class="literal">false</span>;</div><div class="line">            <span class="built_in">return</span>;</div><div class="line">        &#125;</div><div class="line">        clear_flag=<span class="literal">true</span>;</div><div class="line">        double result=0;</div><div class="line">        String s1=exp.substring(0,exp.indexOf(<span class="string">" "</span>));</div><div class="line">        String op=exp.substring(exp.indexOf(<span class="string">" "</span>)+1,exp.indexOf(<span class="string">" "</span>)+2);</div><div class="line">        String s2=exp.substring(exp.indexOf(<span class="string">" "</span>)+3);</div><div class="line">        <span class="keyword">if</span> (!s1.equals(<span class="string">""</span>)&amp;&amp;!s2.equals(<span class="string">""</span>))&#123;</div><div class="line">            double d1=Double.parseDouble(s1);</div><div class="line">            double d2=Double.parseDouble(s2);</div><div class="line">            <span class="keyword">if</span> (op.equals(<span class="string">"+"</span>))&#123;</div><div class="line">                result=d1+d2;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"-"</span>))&#123;</div><div class="line">                result=d1<span class="_">-d</span>2;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"×"</span>))&#123;</div><div class="line">                result=d1*d2;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"÷"</span>))&#123;</div><div class="line">                <span class="keyword">if</span> (d2==0)&#123;</div><div class="line">                    result=0;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span>&#123;</div><div class="line">                    result=d1/d2;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(!s1.contains(<span class="string">"."</span>)&amp;&amp;!s2.contains(<span class="string">"."</span>)&amp;&amp;!op.equals(<span class="string">"÷"</span>))&#123;</div><div class="line">                int r=(int)result;</div><div class="line">                et_input.setText(r+<span class="string">""</span>);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                et_input.setText(result+<span class="string">""</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (!s1.equals(<span class="string">""</span>)&amp;&amp;s2.equals(<span class="string">""</span>))&#123;</div><div class="line">            et_input.setText(exp);</div><div class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (s1.equals(<span class="string">""</span>)&amp;&amp;!s2.equals(<span class="string">""</span>))&#123;</div><div class="line">            double d2=Double.parseDouble(s2);</div><div class="line">            <span class="keyword">if</span> (op.equals(<span class="string">"+"</span>))&#123;</div><div class="line">                result=0+d2;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"-"</span>))&#123;</div><div class="line">                result=0<span class="_">-d</span>2;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"×"</span>))&#123;</div><div class="line">                result=0;</div><div class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (op.equals(<span class="string">"÷"</span>))&#123;</div><div class="line">                result=0;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(!s2.contains(<span class="string">"."</span>))&#123;</div><div class="line">                int r=(int)result;</div><div class="line">                et_input.setText(r+<span class="string">""</span>);</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                et_input.setText(result+<span class="string">""</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            et_input.setText(<span class="string">""</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        <span class="built_in">set</span>ContentView(R.layout.activity_main);</div><div class="line">        btn_0=(Button) findViewById(R.id.btn_0);</div><div class="line">        btn_1=(Button) findViewById(R.id.btn_1);</div><div class="line">        btn_2=(Button) findViewById(R.id.btn_2);</div><div class="line">        btn_3=(Button) findViewById(R.id.btn_3);</div><div class="line">        btn_4=(Button) findViewById(R.id.btn_4);</div><div class="line">        btn_5=(Button) findViewById(R.id.btn_5);</div><div class="line">        btn_6=(Button) findViewById(R.id.btn_6);</div><div class="line">        btn_7=(Button) findViewById(R.id.btn_7);</div><div class="line">        btn_8=(Button) findViewById(R.id.btn_8);</div><div class="line">        btn_9=(Button) findViewById(R.id.btn_9);</div><div class="line">        btn_point=(Button) findViewById(R.id.btn_point);</div><div class="line">        btn_plus=(Button) findViewById(R.id.btn_plus);</div><div class="line">        btn_clear=(Button) findViewById(R.id.btn_clear);</div><div class="line">        btn_del=(Button) findViewById(R.id.btn_del);</div><div class="line">        btn_divide=(Button) findViewById(R.id.btn_divide);</div><div class="line">        btn_minus=(Button) findViewById(R.id.btn_minus);</div><div class="line">        btn_multiply=(Button) findViewById(R.id.btn_multiply);</div><div class="line">        btn_equal=(Button) findViewById(R.id.btn_equal);</div><div class="line">        //以上是实例化按钮</div><div class="line">        et_input =(EditText)findViewById(R.id.et_input);//实例化显示屏</div><div class="line">        btn_0.setOnClickListener(this);</div><div class="line">        btn_1.setOnClickListener(this);</div><div class="line">        btn_2.setOnClickListener(this);</div><div class="line">        btn_3.setOnClickListener(this);</div><div class="line">        btn_4.setOnClickListener(this);</div><div class="line">        btn_5.setOnClickListener(this);</div><div class="line">        btn_6.setOnClickListener(this);</div><div class="line">        btn_7.setOnClickListener(this);</div><div class="line">        btn_8.setOnClickListener(this);</div><div class="line">        btn_9.setOnClickListener(this);</div><div class="line">        btn_plus.setOnClickListener(this);</div><div class="line">        btn_point.setOnClickListener(this);</div><div class="line">        btn_divide.setOnClickListener(this);</div><div class="line">        btn_del.setOnClickListener(this);</div><div class="line">        btn_multiply.setOnClickListener(this);</div><div class="line">        btn_minus.setOnClickListener(this);</div><div class="line">        btn_clear.setOnClickListener(this);</div><div class="line">        btn_equal.setOnClickListener(this);</div><div class="line">        //设置按钮的点击事件</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">展示图：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/tile.gif"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;如果所有人都能理解你，那你得多平凡啊！&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;利用Android Studio创建计算器。
    
    </summary>
    
      <category term="Demo" scheme="http://yoursite.com/categories/Demo/"/>
    
    
      <category term="Android Studio" scheme="http://yoursite.com/tags/Android-Studio/"/>
    
      <category term="计算器" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>知是行之始，行是知之成--《把时间当作朋友》</title>
    <link href="http://yoursite.com/2017/02/07/sjpy/"/>
    <id>http://yoursite.com/2017/02/07/sjpy/</id>
    <published>2017-02-07T03:36:06.000Z</published>
    <updated>2017-02-07T03:43:40.836Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">如果自己都不想积极认真地生活，不管得到什么样的回答都没有用。</blockquote>

<blockquote>
<p>人生是马拉松，胜者不一定是跑的最快的。</p>
</blockquote>
<p>逝者如斯夫，不舍昼夜。故自打小便从课文中获知，人的一生要与时间赛跑；然而人对于时间的感知是以自身经验为基础的，八九岁的年龄不过是一生的七八分之一，哪里能对韶光流逝感到惋惜。随着年龄的增长，生命阅历的延长，才越来越感到对流逝时间的无奈。<br>就在我以为人生要与时间赛跑之际，读到了《把时间当作朋友》，原来除了赛跑，还可以与之做朋友。这倒是一个新鲜事。细细品来，从中获益良多，写下此文，纪念读过这本书，与君共勉。<a id="more"></a></p>
<blockquote>
<p>“没有时间了”，其可怕程度几乎不异于死亡。</p>
</blockquote>
<p>相信我们很多人包括我自己都有这样的尝试或者是经历：哎呀，距离六级考试还有还有半个月了，不够时间了。基于“时间不够的感受和恐惧，使得我们超乎寻常的努力”哪怕是虚假的勤奋，也恨不得废寝忘食。最好是能找到一条捷径，美其名曰“提高效率”，实际上是希望能不费吹灰之力。以上是我们大多数人存在的一个困境。</p>
<blockquote>
<p>无论我讲的多么有趣，多么有用或多么有道理，暂时还跟你一点关系都没有—-当且只当按我说的做了之后，对于你来说，才算是真的有趣，真的有用。</p>
</blockquote>
<p>因为存在困境，所以我们要想办法去解决。而这时，“心智”这个名词诞生，除了看的见的相貌，身材，出身，财富之外，还有看不见摸不着的心智力量的差异。心智是不同的人面对同一件事做出不同反应。每个人从出生开始心智都是从零开始。<br>心智包括三个方面：a.获取知识。b.应用知识。c.抽象推理。<br>开启心智的第一步：了解到“我们甚至可以思考思考方式和思考结果是否确实是合理的思考方式和思考结果。”<br>开启心智的第二步：控制自己的大脑。很多时候我们因为懒惰不去看书，这只是你大脑的想法，而不是你自己的想法。所以你让你大脑控制你，还是你来控制你的大脑？<br>开启心智的第三步：推迟满足感。人们总习惯于一件事情上，如果有收获的话，那最好马上有收获；如果没有收获的话，那最好马上有结果。这就是赌鬼和赌王的区别。赌鬼总是希望马上有结果，所以特别喜欢玩老虎机，因为5秒钟之内，就可以知道结果。而真正能忍住欲望，就是我们说的有耐心。往往可以得到意外的收获，比如说，不为了新潮的电子产品浪费时间和金钱。等到下一个产品推出之前，用相对较低的价格买到。不仅可以避免很多兼容性问题，真正做到那个曾经时髦的产品在你手中变成性价比最高的实用品。</p>
<blockquote>
<p>得按你想得去生活，否则，你迟早会按你生活的去想。</p>
</blockquote>
<p>开启心智之后，就需要与时间这个朋友搭上关系。<br>而首先要做的，就是感知时间。用柳比歇夫的“事件-时间日志”法记录自己的时间。比如：“珠海。2017年2月7日。写《把时间当作朋友》读后感—–1小时”<br>记录的最好工具就是纸和笔。之后再从这个时间表中为自己的人生制造时间预算，比如：约朋友出去玩大概是需要6个小时。<br>使用列表的方式为自己减少失误。比如：朋友肯定会按照预定的时间迟到一个小时，先在网上搜一搜那个地方附近有没有什么特色或者书店之类。按时去到之后发现朋友果真迟到了，就去之前网上搜到的地方转转。</p>
<blockquote>
<p>生活本身充满了意外，并且，总是意外到无以复加的地步。</p>
</blockquote>
<p>开启心智之后，就要为之升级。<br>了解获取知识的基本途径。除了图书馆，还有谷歌，花点时间学会谷歌通配符就可以以更快的速度搜到自己所需要的知识。<br>摆脱经验的束缚。除了“试错”，“观察，“阅读”之外，“正确是思考”是真正意义上的获取知识的主要手段。比如，我们不说一个人的优点和缺点。把优点和缺点通通说成是特点。直接用一个中性词代替了褒义词和贬义词。<br>提高自学能力。“大学本库毕业后，应当有能力自学自己所需要学的所有知识。”<br>正确对待老师。老师只是你成长路上的旁观者。不要因为不喜欢一个老师而不学这门课，这就是拿别人的错误惩罚自己最典型的例子。<br>通过改变自己的态度改变自己的世界。比如某个考试很愚蠢，如果你连愚蠢的考试都不能通过，那么愚蠢的不仅仅是考试本身。<br>耐心培养记忆力。最强大脑李威和王昱珩等人有一个记忆养成计划在喜马拉雅fm开课，讲述了各种记忆方法，有如记忆单词的字母编码法，还有记忆其它事物的身体定桩法，当然建立自己记忆宫殿就可以晋升为大神了。目前，笔者仍在学习中，就不多说了。</p>
<blockquote>
<p>这是一个努力就必然可以获得的能力—-放心</p>
</blockquote>
<p>小心所谓的“成功学”。成功的人的演讲，总是会遗忘自己的经历。因为大脑就是这么的“优秀”，如果你太痛苦，随着时间的流逝，大脑就会选择遗忘掉这部分记忆。所以很多人都说痛苦的时候不要立下誓言或者计划。<br>努力是应当的，不要相信运气。如果好运发生的自己身上，当然会相当开心，就算是坏运气，也应该平静的接受，毕竟你还要继续生活，当然就要面对你不能控制的事物。</p>
<blockquote>
<p>而我也始终相信，上帝会给每个人与困难的不同邂逅。</p>
</blockquote>
<p>更多的思考。<br>最节省时间的方法就是学习。乔布斯也说过“你现在所学的东西，在未来会连成一条线。”<br>效率低下的原因就是因为你回避了困难，选择做简单的事。结果困难的事情总是没时间做。<br>做一个不迟到的人，谨记准时就是迟到。<br>时间并不是匀速的，而是加速的。越早醒悟越好。</p>
<p>先知后行，行乃知成。</p>
<p>“草木本无意，枯荣自有时”，即便听过很多道理，却还是过不好一生。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;如果自己都不想积极认真地生活，不管得到什么样的回答都没有用。&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;人生是马拉松，胜者不一定是跑的最快的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;逝者如斯夫，不舍昼夜。故自打小便从课文中获知，人的一生要与时间赛跑；然而人对于时间的感知是以自身经验为基础的，八九岁的年龄不过是一生的七八分之一，哪里能对韶光流逝感到惋惜。随着年龄的增长，生命阅历的延长，才越来越感到对流逝时间的无奈。&lt;br&gt;就在我以为人生要与时间赛跑之际，读到了《把时间当作朋友》，原来除了赛跑，还可以与之做朋友。这倒是一个新鲜事。细细品来，从中获益良多，写下此文，纪念读过这本书，与君共勉。
    
    </summary>
    
      <category term="随手写作" scheme="http://yoursite.com/categories/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="随手写作" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-06 Algorithm Gossip八皇后</title>
    <link href="http://yoursite.com/2017/02/06/sf8/"/>
    <id>http://yoursite.com/2017/02/06/sf8/</id>
    <published>2017-02-06T14:51:16.000Z</published>
    <updated>2017-02-07T14:06:16.488Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">生活就是选择，而所谓的选择，只不过是一个人拥有的观念对之衡量之后的结果</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>西洋棋中的皇后可以直线前进，吃掉遇到的所有旗子，如果棋盘上有八个皇后，则这八个皇后如何相安无事的放置在棋盘上，1970年与1971年，E.W.Dijkstra与N.Wirth曾经用这个问题来讲程式设计之技巧。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>关于棋盘的问题，都可以用递回求解，然而如何减少递回的次数？在八个皇后的问题中，不必要所有的格子都检查过，例如若某列检查过，该列的其它格子就不用再检查了，这个方法称为分支修剪。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#define N 8</span></div><div class="line">int column[N + 1];//同栏是否由皇后，1表示有</div><div class="line">int rup[2 * N + 1];//右上至左下是否有皇后</div><div class="line">int lup[2 * N + 1];//左上至右下是否有皇后</div><div class="line">int queen[N + 1]= &#123; 0 &#125;;</div><div class="line">int num;//解答编号</div><div class="line">void backtrack(int);//递回求解</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int i;</div><div class="line">	num = 0;</div><div class="line">	<span class="keyword">for</span> ( i = 1; i &lt;= N; i++)</div><div class="line">	&#123;</div><div class="line">		column[i] = 1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ( i = 1; i &lt;= 2*N; i++)</div><div class="line">	&#123;</div><div class="line">		rup[i] = lup[i] = 1;</div><div class="line">	&#125;</div><div class="line">	backtrack(1);</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">showAnswer</span></span>()</div><div class="line">&#123;</div><div class="line">	int x, y;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n解答 %d\n"</span>, ++num);</div><div class="line">	<span class="keyword">for</span> ( y = 1; y &lt;= N; y++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( x = 1; x &lt;= N; x++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (queen[y]==x)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"Q"</span>);</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"."</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">void backtrack(int i)</div><div class="line">&#123;</div><div class="line">	int j;</div><div class="line">	<span class="keyword">if</span> (i&gt;N)</div><div class="line">	&#123;</div><div class="line">		showAnswer();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( j = 1; j &lt;= N; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (column[j]==1 &amp;&amp; rup[i+j]==1</div><div class="line">				&amp;&amp; lup[i-j+N]==1)</div><div class="line">			&#123;</div><div class="line">				queen[i] = j;</div><div class="line">				//设为占用</div><div class="line">				column[j] = rup[i + j] = lup[i - j + N] = 0;</div><div class="line">				backtrack(i + 1);</div><div class="line">				column[j] = rup[i + j] = lup[i - j + N] = 1;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/huanghou.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;生活就是选择，而所谓的选择，只不过是一个人拥有的观念对之衡量之后的结果&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;西洋棋中的皇后可以直线前进，吃掉遇到的所有旗子，如果棋盘上有八个皇后，则这八个皇后如何相安无事的放置在棋盘上，1970年与1971年，E.W.Dijkstra与N.Wirth曾经用这个问题来讲程式设计之技巧。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="皇后" scheme="http://yoursite.com/tags/%E7%9A%87%E5%90%8E/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-05 Algorithm Gossip骑士走棋盘</title>
    <link href="http://yoursite.com/2017/02/05/sf7/"/>
    <id>http://yoursite.com/2017/02/05/sf7/</id>
    <published>2017-02-05T14:31:45.000Z</published>
    <updated>2017-02-05T15:21:10.209Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">凡是值得做的事情，都值得慢慢做—-做很久很久</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>骑士旅游在十八世纪初倍受数学家与拼图迷的注意，它什么时候被提出已不可考，骑士的走法为西洋棋的走法，骑士可以由任一个为止出发，它要如何走完所有的位置？<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>骑士的走法，基本可以使用递回来解决，但是纯粹的递回在维度大时相当没有效率， 一个聪明的解法由J.C. Warnsdorff在1823年提出，简单的说，先将最难的位置走完，接下里的路就宽广了，骑士所要走的下一步，【为下一步再选择时，所能走的步数最少的一步。】，使用这个方法，在不使用递回的情况下，烤鸭油较高的几率找出走法（找不到走法的机会也是有的）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line">int board[8][8] = &#123; 0 &#125;;</div><div class="line">int travel(int, int);</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int startx, starty;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"输入起始点："</span>);</div><div class="line">	scanf(<span class="string">"%d%d"</span>, &amp;startx, &amp;starty);</div><div class="line">	<span class="keyword">if</span> (travel(startx, starty))</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"游历完成！\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"游历失败！\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 8; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( j = 0; j &lt; 8; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%2d"</span>, board[i][j]);</div><div class="line">		&#125;</div><div class="line">		putchar(<span class="string">'\n'</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int travel(int x,int y)</div><div class="line">&#123;</div><div class="line">	//对应骑士可走的八个方向</div><div class="line">	int ktmove1[8] = &#123; -2,-1,1,2,2,1,-1,-2 &#125;;</div><div class="line">	int ktmove2[8] = &#123; 1,2,2,1,-1,-2,-2,-1 &#125;;</div><div class="line">	//测试下一步的出路</div><div class="line">	int nexti[8] = &#123; 0 &#125;;</div><div class="line">	int nextj[8] = &#123; 0 &#125;;</div><div class="line">	//记录出路的个数</div><div class="line">	int exists[8] = &#123; 0 &#125;;</div><div class="line">	int i, j, k, m, l;</div><div class="line">	int tmpi, tmpj;</div><div class="line">	int count, min, tmp;</div><div class="line">	i = x;</div><div class="line">	j = y;</div><div class="line">	board[i][j] = 1;</div><div class="line">	<span class="keyword">for</span> ( m = 2; m &lt;= 64; m++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( l = 1; l &lt; 8; l++)</div><div class="line">		&#123;</div><div class="line">			exists[l] = 0;</div><div class="line">		&#125;</div><div class="line">		l = 0;</div><div class="line">		//试探八个方向</div><div class="line">		<span class="keyword">for</span> ( k = 0; k &lt; 8; k++)</div><div class="line">		&#123;</div><div class="line">			tmpi = i + ktmove1[k];</div><div class="line">			tmpj = j + ktmove2[k];</div><div class="line">			//如果是边界了，不可走</div><div class="line">			<span class="keyword">if</span> (tmpi &lt; 0 || tmpj &lt; 0 || tmpi&gt;7 || tmpj&gt;7)<span class="built_in">continue</span>;</div><div class="line">			//如果这个方向可走，记录下来</div><div class="line">			<span class="keyword">if</span> (board[tmpi][tmpj]==0)</div><div class="line">			&#123;</div><div class="line">				nexti[l] = tmpi;</div><div class="line">				nextj[l] = tmpj;</div><div class="line">				//可走的方向加一个</div><div class="line">				l++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		count = 1;</div><div class="line">		//如果可走的方向为0个，返回</div><div class="line">		<span class="keyword">if</span> (count==0)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (count==1)</div><div class="line">		&#123;</div><div class="line">			//只有一个可走的方向</div><div class="line">			//所以直接是最少出路的方向</div><div class="line">			min = 0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> ( l = 0; l &lt; count; l++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> ( k = 0; k &lt; 8; k++)</div><div class="line">				&#123;</div><div class="line">					tmpi = nexti[l] + ktmove1[k];</div><div class="line">					tmpj = nextj[l] + ktmove2[k];</div><div class="line">					<span class="keyword">if</span> (tmpi &lt; 0 || tmpj &lt; 0 ||</div><div class="line">						tmpi&gt;7 || tmpj&gt;7)</div><div class="line">					&#123;</div><div class="line">						<span class="built_in">continue</span>;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">if</span> (board[tmpi][tmpj]==0)</div><div class="line">					&#123;</div><div class="line">						exists[l]++;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				tmp = exists[0];</div><div class="line">				min = 0;</div><div class="line">				//从可走的方向中寻找最少出路的方向</div><div class="line">				<span class="keyword">for</span> ( l = 1; l &lt; count; l++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span> (exists[l]&lt;tmp)</div><div class="line">					&#123;</div><div class="line">						tmp = exists[l];</div><div class="line">						min = l;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		//走最少出路的方向</div><div class="line">		i = nexti[min];</div><div class="line">		j = nextj[min];</div><div class="line">		board[i][j] = m;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/qishi.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;凡是值得做的事情，都值得慢慢做—-做很久很久&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;骑士旅游在十八世纪初倍受数学家与拼图迷的注意，它什么时候被提出已不可考，骑士的走法为西洋棋的走法，骑士可以由任一个为止出发，它要如何走完所有的位置？
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="骑士走棋盘" scheme="http://yoursite.com/tags/%E9%AA%91%E5%A3%AB%E8%B5%B0%E6%A3%8B%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-04 Algorithm Gossip老鼠走迷宫二</title>
    <link href="http://yoursite.com/2017/02/04/sf6/"/>
    <id>http://yoursite.com/2017/02/04/sf6/</id>
    <published>2017-02-04T12:27:42.000Z</published>
    <updated>2017-02-05T14:34:32.654Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我在黄昏的血色中踽踽独行<br>感到自己不过是这忧郁黄昏大地上一粒微不足道的尘埃</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于迷宫的设计，老鼠走迷宫的入口至出口路径可能不止一条，如何求出所有的路径呢？<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>求所有的路径看起来复杂其实更简单，只要在老鼠走至出口时显示经过的路径，然后退回上一格重新选择下一个位置继续递回就可以了，比求出单一路径还简单，我们的程式只要做一点修改就可以了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line">void visit(int,int);</div><div class="line">int maze[9][9] = &#123; &#123;2,2,2,2,2,2,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,2,0,2,2,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,0,2,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,2,0,2,0,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2,0,2&#125;,</div><div class="line">					&#123;2,2,0,2,2,0,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,2,2,2,2,2,2,2,2&#125; &#125;;</div><div class="line">int startI = 1, startJ = 1;//入口</div><div class="line">int endI = 7, endJ = 7;//出口</div><div class="line">int success = 0;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"显示迷宫：\n"</span>);</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (j = 0; j &lt; 7; j++)</div><div class="line">			<span class="keyword">if</span> (maze[i][j] == 2)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	visit(startI, startJ);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void visit(int i, int j) </div><div class="line">&#123;</div><div class="line">	int m, n;</div><div class="line">	maze[i][j] = 1;</div><div class="line">	<span class="keyword">if</span> (i==endI &amp;&amp; j==endJ)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n显示路径: \n"</span>);</div><div class="line">		<span class="keyword">for</span> ( m = 0; m &lt; 9; m++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> ( n = 0; n &lt; 9; n++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (maze[m][n]==2)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(maze[m][n]==1)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"O"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">				&#125;</div><div class="line">			</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> ( maze[i][j + 1] == 0)visit(i, j + 1);</div><div class="line">	<span class="keyword">if</span> ( maze[i + 1][j] == 0)visit(i + 1, j);</div><div class="line">	<span class="keyword">if</span> ( maze[i][j - 1] == 0)visit(i, j - 1);</div><div class="line">	<span class="keyword">if</span> ( maze[i - 1][j] == 0)visit(i - 1, j);</div><div class="line">	maze[i][j] = 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/migong2.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我在黄昏的血色中踽踽独行&lt;br&gt;感到自己不过是这忧郁黄昏大地上一粒微不足道的尘埃&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于迷宫的设计，老鼠走迷宫的入口至出口路径可能不止一条，如何求出所有的路径呢？
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="迷宫" scheme="http://yoursite.com/tags/%E8%BF%B7%E5%AE%AB/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-03 Algorithm Gossip老鼠走迷宫一</title>
    <link href="http://yoursite.com/2017/02/03/sf5/"/>
    <id>http://yoursite.com/2017/02/03/sf5/</id>
    <published>2017-02-03T13:18:28.000Z</published>
    <updated>2017-02-04T12:26:39.946Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">在季节的列车上，如果你要提前下车<br>请别推醒装睡的我，这样我可以沉睡到终点<br>假装不知道你已经离开</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>说明老鼠走迷宫是递回求解的基本题型，我们在二维阵列中使用2表示迷宫墙壁，使用1表示老鼠行走的路径，试以程式求出由入口至出口的路径。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>老鼠的走法有上下左右四个方向，在每前进一格之后就选一个方向前进，无法前进时退回选择下一个前进方向，如此在阵列中依序测试四个方向，直到走到出口为止，这是递回的基本题，请直接看程式应就可以理解。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line">int visit(int,int);</div><div class="line">int maze[7][7] = &#123; &#123;2,2,2,2,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,2,0,2&#125;,</div><div class="line">					&#123;2,0,0,2,0,2,2&#125;,</div><div class="line">					&#123;2,2,0,2,0,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,2,2,2,2,2,2&#125; &#125;;</div><div class="line">int startI = 1, startJ = 1;//入口</div><div class="line">int endI = 5, endJ = 5;//出口</div><div class="line">int success = 0;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"显示迷宫：\n"</span>);</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (j = 0; j &lt; 7; j++)</div><div class="line">			<span class="keyword">if</span> (maze[i][j] == 2)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (visit(startI, startJ) == 0)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n没有找到出口！\n"</span>);</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n显示路径：\n"</span>);</div><div class="line">		<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (j = 0; j &lt; 7; j++) </div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (maze[i][j]==2)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(maze[i][j]==1)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"O"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int visit(int i, int j) </div><div class="line">&#123;</div><div class="line">	maze[i][j] = 1;</div><div class="line">	<span class="keyword">if</span> (i==endI &amp;&amp; j==endJ)</div><div class="line">	&#123;</div><div class="line">		success = 1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i][j + 1] == 0)visit(i, j + 1);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i + 1][j] == 0)visit(i + 1, j);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i][j - 1] == 0)visit(i, j - 1);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i - 1][j] == 0)visit(i - 1, j);</div><div class="line">	<span class="keyword">if</span> (success != 1)maze[i][j] = 0;</div><div class="line">	<span class="built_in">return</span> success;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/migong1.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;在季节的列车上，如果你要提前下车&lt;br&gt;请别推醒装睡的我，这样我可以沉睡到终点&lt;br&gt;假装不知道你已经离开&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;说明老鼠走迷宫是递回求解的基本题型，我们在二维阵列中使用2表示迷宫墙壁，使用1表示老鼠行走的路径，试以程式求出由入口至出口的路径。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="迷宫" scheme="http://yoursite.com/tags/%E8%BF%B7%E5%AE%AB/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-02 Algorithm Gossip 三色旗</title>
    <link href="http://yoursite.com/2017/02/02/sf4/"/>
    <id>http://yoursite.com/2017/02/02/sf4/</id>
    <published>2017-02-02T13:58:19.000Z</published>
    <updated>2017-02-02T14:06:23.426Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">逃避责任就会带来轻松，可那恰恰就是“生命不能承受之轻”啊</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>三色旗的问题最早由E.W.Dijkstra所提出，他所使用的用语为Dutch Nation Flag(Dijkstra为荷兰人)，而多数的作者则使用Three-Color Flag来称之。<a id="more"></a></p>
<p>假设有一条绳子，上面有红、白、蓝三种颜色的旗子，起初绳子上的旗子颜色并没有顺序，您希望将之分类，并排列为蓝、白、红的顺序，要如何移动次数才会最少，注意您只能在绳子上进行这个动作，而且一次只能调换两个旗子。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define BLUE 'b'</span></div><div class="line"><span class="comment">#define WHITE 'w'</span></div><div class="line"><span class="comment">#define RED 'r'</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char color[] = &#123; <span class="string">'r'</span>,<span class="string">'w'</span>,<span class="string">'b'</span>,<span class="string">'w'</span> ,<span class="string">'w'</span>,<span class="string">'b'</span> ,<span class="string">'r'</span>,<span class="string">'b'</span>,</div><div class="line">		<span class="string">'w'</span>,<span class="string">'r'</span>,<span class="string">'\0'</span> &#125;;//随机定义10种旗子颜色</div><div class="line">	int wFlag = 0;</div><div class="line">	int bFlag = 0;</div><div class="line">	int rFlag = strlen(color) - 1;</div><div class="line">	int i;</div><div class="line">	<span class="keyword">for</span> (i = 0; i &lt; strlen(color); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, color[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">while</span> (wFlag &lt;= rFlag)</div><div class="line">	&#123;//一开始时未处理的r指针处于最后一个旗子位子，当r的索引数减</div><div class="line">		//至少于w的索引数时，表示接下来的旗子就都是红色了，此时就可以结束移动。</div><div class="line">		<span class="keyword">if</span> (color[wFlag] == WHITE)</div><div class="line">		&#123;//如果图中w所在的位置为白色，则w+1，表示未处理的部份移至至白色群组。</div><div class="line">			wFlag++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (color[wFlag] == BLUE)</div><div class="line">		&#123;//如果w部份为蓝色，则b与w的元素对调，而b与w必须各+1，表示两个群组都多了一个元素</div><div class="line">			char temp1;</div><div class="line">			temp1 = color[bFlag];</div><div class="line">			color[bFlag] = color[wFlag];</div><div class="line">			color[wFlag] = temp1;</div><div class="line">			bFlag++; wFlag++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;//如果w所在的位置是红色，则将w与r交换，但r要减1，表示未处理的部份减1。</div><div class="line">			<span class="keyword">while</span> (wFlag &lt; rFlag &amp;&amp; color[rFlag] == RED)</div><div class="line">			&#123;</div><div class="line">				rFlag--;</div><div class="line">			&#125;</div><div class="line">			char temp;</div><div class="line">			temp = color[rFlag];</div><div class="line">			color[rFlag] = color[wFlag];</div><div class="line">			color[wFlag] = temp;</div><div class="line">			rFlag--;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; strlen(color); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, color[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;逃避责任就会带来轻松，可那恰恰就是“生命不能承受之轻”啊&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;三色旗的问题最早由E.W.Dijkstra所提出，他所使用的用语为Dutch Nation Flag(Dijkstra为荷兰人)，而多数的作者则使用Three-Color Flag来称之。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="三色旗" scheme="http://yoursite.com/tags/%E4%B8%89%E8%89%B2%E6%97%97/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-01 巴斯卡三角形</title>
    <link href="http://yoursite.com/2017/02/01/sf3/"/>
    <id>http://yoursite.com/2017/02/01/sf3/</id>
    <published>2017-02-01T15:02:15.000Z</published>
    <updated>2017-02-01T15:15:30.827Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">得按你想的去生活，否则迟早按你生活的去想</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打印巴斯卡三角形<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define N 12</span></div><div class="line">long combi(int n, int r) </div><div class="line">&#123;</div><div class="line">	int i;</div><div class="line">	long p = 1;</div><div class="line">	<span class="keyword">for</span> ( i = 1; i &lt;= r; i++)</div><div class="line">	&#123;</div><div class="line">		p = p*(n - i + 1) / i;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> p;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">print</span></span>() </div><div class="line">&#123;</div><div class="line">	int n, r, t;</div><div class="line">	<span class="keyword">for</span> ( n = 0; n &lt;= N; n++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( r = 0; r &lt;= n; r++)</div><div class="line">		&#123;</div><div class="line">			int i;</div><div class="line">			<span class="keyword">if</span>(r==0)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> ( i = 0;  i &lt;= (N-n);  i++)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"   "</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;<span class="keyword">else</span></div><div class="line">			&#123; </div><div class="line">				cout &lt;&lt; <span class="string">"   "</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%3d"</span>,combi(n, r));</div><div class="line">		&#125;</div><div class="line">		cout &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="built_in">print</span>();</div><div class="line">	//system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/basika.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;得按你想的去生活，否则迟早按你生活的去想&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;打印巴斯卡三角形
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="巴斯卡三角形" scheme="http://yoursite.com/tags/%E5%B7%B4%E6%96%AF%E5%8D%A1%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    
      <category term="杨辉三角" scheme="http://yoursite.com/tags/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
    
  </entry>
  
  <entry>
    <title>把故事酿成醇酒-关东野客《我有故事，你有酒吗？》</title>
    <link href="http://yoursite.com/2017/02/01/gs/"/>
    <id>http://yoursite.com/2017/02/01/gs/</id>
    <published>2017-02-01T02:33:56.000Z</published>
    <updated>2017-02-01T02:50:35.111Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我会在深夜里写字,在你凌晨睡去时，把一段故事写好。</blockquote>读完关东野客《我有故事，你有酒吗？》总觉得要写点什么，就当做是读后感吧。</p>
<blockquote>
<p><code style="color: #FF0033">如果你愿意，在一个四下无人的夜晚，请我喝一杯随便什么牌子的酒吧，让我把故事说给你听。</code></p>
</blockquote>
<p>一生渴望被人收藏，妥善安放，细心保存。免我惊，免我苦，免我四下流离，免我无枝可依。这大概就是大多数人幻想中美好的爱情向往了吧。<br>这个世界上，只要有人，就会有故事，故事之外的人故事着别人的故事，生活着自己的生活，偶尔会为之感动感慨，而只有故事里的人才真正热血沸腾。<a id="more"></a><br>北京西站，南阳与素素因为出身的不同，被父母反对，终无法相守。也许相遇了就是一个错误，终究是敌不过现实的，再美好的爱情都将被岁月磨平棱角，回归当下。<br>阿苏姑娘始终活在男友死去的阴影中，历尽艰辛终走出阴影，在丽江开了酒吧继续生活。这个过程很漫长，爱的如此深沉和真实，让人相信爱情仍是在的。<br>九斤从小学到高中，一直把时间放在小米身上，因为身高差了5cm,但他一直等，终于在多年后等到了小米，但却在等到之前半个月车祸，留下小米一人痛苦于世。<br>倪安斌和刘晓娇的故事结局大概是最好的，两人相互信任，等了刘晓娇4年。终于换来厮守。好的爱情终归是要等一等的。</p>
<blockquote>
<p><code style="color: #FF0033">你在别人眼里可能平凡普通，但你一直是我的信仰。</code></p>
</blockquote>
<p>乔婷因为自己无法生育，因为春阳的一句生个大胖娃娃，毅然错过与春阳的爱情相遇，最后两个人阴阳相隔时打开心扉。想起曾爱过的人，曾经为了爱情，把自己降到尘埃里。当初再怎么也放不下的人，也都随着时光在记忆里慢慢远去。<br>麦瑶与斌九因为表妹一个玩弄，让敏感的麦瑶误会，后来因为斌九的短信“可是麦瑶，咱俩好了这么久了，早已如亲人一般，如果你执意要结婚，也希望你能告诉我地址，至少让我陪你走完婚礼。我想做你娘家人，若是做不了娘家人，当个花童也行啊。”让麦瑶重新回到身边。<br>沈博与丫头的误会，终于在丫头躺在医院前解释清楚之后离世。<br>南犀对杨小白的不挽留，正如七姑娘对中南海先生说，“你太残忍，允许我们相爱，又独断专行的放弃我。我不知道是不是你们所有的男人都这么自私，只要自己认为是对的就执意去做，根本不考虑别人的感受？可是宝宝，我无法怪你，我舍不得……”我想，直白来说这两个姑娘最想听的应该是，如果你不知道以后怎么办，就请在我身边好不好……<br>那菲菲与韩松因为家境，民族不同，无法在一起。我觉得这有点封建了，现在这个时代性别，年龄都不是问题了，更何况是残留的封建思想疙瘩。看看放弃的尚楠照顾当初坚持找他而出车祸的于宁，两个人的相依为命，虽然日子清苦，却也幸福。<br>陈紫云终于找到了她的盖世英雄。想到一句名言，忘记一个人最快的方法，就是找下一个人。<br>故事起承转合。在我们生活的小城里，你高兴时，总有人在你看不见的地方悲伤。每天来来往往的人流和车辆，总会发生一些你不知道的故事。我们没有办法，也不应该去评价故事里的人。这世上的感情太多了，好的坏的，都有它存在的理由，就像有的姑娘爱上了人渣，旁人觉得可惜了这姑娘，但谁都不是那姑娘，爱情就这点好，公平不公平全看自己愿意。所以我们应该只是充当一个过客。见证别人的故事。过程好坏是否值得，全是故事里的人的事情。与我们无关。</p>
<blockquote>
<p><code style="color: #FF0033">你多想有个人会一直住在你的城里，从天光乍破，再到暮雪白头，此生此世不再分离。</code></p>
</blockquote>
<p>这句话跟《从你的全世界路过》那句话相似：</p>
<blockquote>
<p><code style="color: #FF0033">我希望有个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，从山野到书屋，只要最后是你，就好</code></p>
</blockquote>
<p>谁把谁的明媚尽收眼底，<br>谁把谁的难过感同身受。<br>别人的故事到此为止，而我的故事尚未开始。因为我始终相信：别对生活无所期待，别对爱情失去信心，其实哪有那么多十全十美，只不过是不敢再爱罢了。<br><code style="color: #FF0033">愿我的故事能绿水流长，敬我的孤独择日而终。</code></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我会在深夜里写字,在你凌晨睡去时，把一段故事写好。&lt;/blockquote&gt;读完关东野客《我有故事，你有酒吗？》总觉得要写点什么，就当做是读后感吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code style=&quot;color: #FF0033&quot;&gt;如果你愿意，在一个四下无人的夜晚，请我喝一杯随便什么牌子的酒吧，让我把故事说给你听。&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一生渴望被人收藏，妥善安放，细心保存。免我惊，免我苦，免我四下流离，免我无枝可依。这大概就是大多数人幻想中美好的爱情向往了吧。&lt;br&gt;这个世界上，只要有人，就会有故事，故事之外的人故事着别人的故事，生活着自己的生活，偶尔会为之感动感慨，而只有故事里的人才真正热血沸腾。
    
    </summary>
    
      <category term="随手写作" scheme="http://yoursite.com/categories/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="随手写作" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>2017-1-31：斐波那契数列</title>
    <link href="http://yoursite.com/2017/01/31/sf2/"/>
    <id>http://yoursite.com/2017/01/31/sf2/</id>
    <published>2017-01-31T13:30:34.000Z</published>
    <updated>2017-01-31T13:48:55.891Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我喜欢北方，但我从没去过北方，<br>就像我爱南方，舍不得离开南方一样。<br>所有求之不得的东西，我都舍不得一下子用完，<br>没去的地方留着，没见的人，等着</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code style="color: #FF0033">题目：定义Fibonacci数列如下：<br>f(0)=0;<br>f(1)=1;<br>f(n)=f(n-1)+f(n-2) n&gt;=2;<br>输入n，用最快的方法求该数列的第n项。</code><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code style="color: #FF0033">Fibonacci数列如下：1，1，2，3，5，8，13，21，34，55，89…</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long Fibonacci(int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(n == 0)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n == 1)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n &gt; 1)</div><div class="line">		<span class="built_in">return</span> Fibonacci(n - 1) + Fibonacci(n - 2);</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> -1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cout &lt;&lt; <span class="string">"输入n值："</span> &lt;&lt; endl;</div><div class="line">	int n;</div><div class="line">	cin &gt;&gt; n;</div><div class="line">	cout&lt;&lt;Fibonacci(n)&lt;&lt;endl;</div><div class="line">	//system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我喜欢北方，但我从没去过北方，&lt;br&gt;就像我爱南方，舍不得离开南方一样。&lt;br&gt;所有求之不得的东西，我都舍不得一下子用完，&lt;br&gt;没去的地方留着，没见的人，等着&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code style=&quot;color: #FF0033&quot;&gt;题目：定义Fibonacci数列如下：&lt;br&gt;f(0)=0;&lt;br&gt;f(1)=1;&lt;br&gt;f(n)=f(n-1)+f(n-2) n&amp;gt;=2;&lt;br&gt;输入n，用最快的方法求该数列的第n项。&lt;/code&gt;
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="费氏数列" scheme="http://yoursite.com/tags/%E8%B4%B9%E6%B0%8F%E6%95%B0%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>2017-1-30：河内之塔</title>
    <link href="http://yoursite.com/2017/01/30/sf1/"/>
    <id>http://yoursite.com/2017/01/30/sf1/</id>
    <published>2017-01-30T13:09:57.000Z</published>
    <updated>2017-02-08T11:23:18.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。<a id="more"></a><br><code style="color: #FF0033">我们来把这个故事变成一个算法：</code><br> 把三个柱子标为ABC如果只有一个盘子时，将它直接搬到<code style="color: #FF0033">c</code>；当有两个盘子：<code style="color: #FF0033">A-&gt;B  A-&gt;C B-&gt;C</code>这三个步骤，当有三个盘子时：<code style="color: #FF0033">A-&gt;C A-&gt;B C-&gt;B A-&gt;C B-&gt;A B-&gt;C A-&gt;C</code>。如果有n个盘子，则移动完毕所需的次数为2^n-1。</p>
<h2 id="C-算法代码"><a href="#C-算法代码" class="headerlink" title="C++算法代码"></a>C++算法代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void hanoi(int n, char A, char B, char C)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (n == 1)</div><div class="line">	&#123;</div><div class="line">		cout &lt;&lt; <span class="string">" Move "</span> &lt;&lt; n &lt;&lt; <span class="string">" from "</span> &lt;&lt; A &lt;&lt; <span class="string">" to "</span> &lt;&lt; C &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		hanoi(n - 1, A, C, B); //把A柱子上第N-1个盘子通过C放到B柱子上</div><div class="line">		cout &lt;&lt; <span class="string">" Move "</span> &lt;&lt; n &lt;&lt; <span class="string">" from "</span> &lt;&lt; A &lt;&lt; <span class="string">" to "</span> &lt;&lt; C &lt;&lt; endl;</div><div class="line">		hanoi(n - 1, B, A, C); //把B上所有盘子通过A放到C上</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cout &lt;&lt; <span class="string">"请输入盘子数量："</span> &lt;&lt; endl;</div><div class="line">	int n;</div><div class="line">	cin &gt;&gt; n;</div><div class="line">	hanoi(n, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code style="color: #FF0033">以n=3为例，解释hanoi(int n,char A,char B,char C)方法：</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/hanoi.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>


]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="河内之塔" scheme="http://yoursite.com/tags/%E6%B2%B3%E5%86%85%E4%B9%8B%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>模拟银行ATM机</title>
    <link href="http://yoursite.com/2017/01/28/atmdemo/"/>
    <id>http://yoursite.com/2017/01/28/atmdemo/</id>
    <published>2017-01-28T06:51:37.000Z</published>
    <updated>2017-02-08T03:08:42.702Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>C++实践选的题目是模拟银行ATM的操作。JAVA实践的时候用NETBEANS 写成界面。</p>
<h3 id="模拟银行ATM机"><a href="#模拟银行ATM机" class="headerlink" title="模拟银行ATM机"></a>模拟银行ATM机</h3><p>查询余额：初始余额为10000元<br>ATM取款：每次取款金额为100的倍数，总额不超过5000元，支取金额不允许透支。<br>ATM存款：不能出现负存款。<br>修改密码：新密码长度不小于6位，不允许出现6位完全相同的情况，只有旧密码正确，新密码符合要求，且两次输入相同的情况下才可以成功修改密码。<a id="more"></a></p>
<h2 id="C-模拟银行ATM机代码"><a href="#C-模拟银行ATM机代码" class="headerlink" title="C++模拟银行ATM机代码"></a>C++模拟银行ATM机代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;string&gt;  </span></div><div class="line"><span class="comment">#include &lt;fstream&gt; //读写文件的头文件</span></div><div class="line"><span class="comment">#include &lt;conio.h&gt; //使用该头文件调用函数getch（）可以不回显读取密码</span></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class BankAccount//登陆银行账户类</div><div class="line">&#123;</div><div class="line">private:</div><div class="line">	string account,password;</div><div class="line">	string account1,password1;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">BankAccount</span></span>()</div><div class="line">	&#123;</div><div class="line">		ifstream fopen(<span class="string">"D:\\inf.txt"</span>);//读取D盘inf.txt文件</div><div class="line">		<span class="keyword">if</span> (!fopen)</div><div class="line">		&#123;</div><div class="line">			cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;</div><div class="line">		&#125;</div><div class="line">		string line1,line3;</div><div class="line">		<span class="keyword">while</span> (!fopen.eof()) &#123;   //读取D盘写入的文件</div><div class="line">			getline(fopen, line1); //读取第一行，下面以此类推</div><div class="line">			getline(fopen, account);</div><div class="line">			getline(fopen, line3);</div><div class="line">			getline(fopen, password);</div><div class="line">		&#125;</div><div class="line">		fopen.close();</div><div class="line">		cout &lt;&lt; <span class="string">"********************************************************************"</span> &lt;&lt; endl;//进入ATM的初始界面</div><div class="line">		cout &lt;&lt; <span class="string">"****************$欢迎使用银行ATM自动取款机********************"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"********************************************************************"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"请输入您的银行卡号:"</span>;</div><div class="line">		cin &gt;&gt; account1;</div><div class="line">		cout &lt;&lt; <span class="string">"请输入您的银行密码:"</span>;</div><div class="line">		char p[20],i=0;</div><div class="line">		<span class="keyword">while</span>(p[i]=_getch())//调用getch（）不回显获取密码</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (p[i]!=<span class="string">'\r'</span>)</div><div class="line">			&#123;</div><div class="line">				cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">		&#125;</div><div class="line">		p[i]=<span class="string">'\0'</span>;</div><div class="line">		password1=p;</div><div class="line">		<span class="keyword">if</span> (account == account1 &amp;&amp;  password == password1) &#123;</div><div class="line">			cout &lt;&lt; endl;</div><div class="line">			cout &lt;&lt; <span class="string">"登陆银行账户成功!"</span> &lt;&lt; endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			cout &lt;&lt; <span class="string">"\n登陆银行账户失败，请检查您的账户密码是否正确"</span> &lt;&lt; endl;</div><div class="line">			<span class="built_in">exit</span>(0);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;;</div><div class="line">class UI_Display //进去ATM后的UI界面类</div><div class="line">&#123;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">UI_Display</span></span>() &#123;</div><div class="line">		cout &lt;&lt; <span class="string">"--------------------------------"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"请按下列数字执行您所需服务！"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"1.查询余额    2.ATM取款"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"3.ATM存款     4.修改密码"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"    5.退出银行ATM机    "</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"--------------------------------"</span> &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;;</div><div class="line">class FileWriteNReading  //读取文件并且对ATM的各项操作类</div><div class="line">&#123;</div><div class="line">private:</div><div class="line">	int TotalMoney;</div><div class="line">	int num,WithdrawingMoney,Saving;</div><div class="line">	string os, pas1, pas2;</div><div class="line">	string pas;</div><div class="line">	string line1, line2,line3;</div><div class="line">	char l,j,k;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">FileWriteNReading</span></span>() &#123;</div><div class="line">		TotalMoney=10000;</div><div class="line">		l=0;j=0;k=0;</div><div class="line">		ifstream fopen(<span class="string">"D:\\inf.txt"</span>);  //读取D盘写入的inf.txt文件的信息</div><div class="line">		<span class="keyword">if</span> (!fopen)</div><div class="line">		&#123;</div><div class="line">			cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span> (!fopen.eof()) &#123;</div><div class="line">			getline(fopen, line1);  //读取第一行信息，下面以此类推。此处的目的是获取密码pas</div><div class="line">			getline(fopen, line2);</div><div class="line">			getline(fopen, line3);</div><div class="line">			getline(fopen, pas);</div><div class="line">		&#125;</div><div class="line">		fopen.close();</div><div class="line">		<span class="keyword">while</span> (1)  //设置死循环</div><div class="line">		&#123;</div><div class="line">			UI_Display();</div><div class="line">			cin &gt;&gt; num;</div><div class="line">			switch (num) //利用switch语句，对要进行的操作进行选择</div><div class="line">			&#123;</div><div class="line">			<span class="keyword">case</span> 1://显示余额</div><div class="line">				show();</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 2://取款操作</div><div class="line">				cout &lt;&lt; <span class="string">"请输入您所需取款的金额且每次取款的金额为100的倍数，总额不超过5000元，不能透支取款:"</span>;</div><div class="line">				cin &gt;&gt; WithdrawingMoney;</div><div class="line">				<span class="keyword">if</span> (WithdrawingMoney % 100 == 0 &amp;&amp; WithdrawingMoney &lt;= 5000 &amp;&amp; WithdrawingMoney &lt;= TotalMoney)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您已取钱成功，取款金额为："</span> &lt;&lt; WithdrawingMoney &lt;&lt; endl;</div><div class="line">					WithdrawingMoney1(WithdrawingMoney);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您取钱失败，请检查输入金额是否为100的倍数或总额是否超过5000元或余额是否充足。"</span> &lt;&lt; endl;</div><div class="line">				&#125;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 3://存款操作</div><div class="line">				cout &lt;&lt; <span class="string">"请输入您所需存款的金额:"</span>;</div><div class="line">				cin &gt;&gt; Saving;</div><div class="line">				<span class="keyword">if</span> (Saving &gt;= 0)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您已存钱成功，存钱金额为："</span> &lt;&lt; Saving &lt;&lt; endl;</div><div class="line">					Saving1(Saving);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您存钱失败，请检查存入金额"</span>&lt;&lt;endl;</div><div class="line">				&#125;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 4://修改密码操作</div><div class="line">				cout &lt;&lt; <span class="string">"注意新密码不小于6位且不能出现6位数字相同\n"</span>;</div><div class="line">				cout &lt;&lt; <span class="string">"请输入原密码:"</span>;</div><div class="line">				char p[20];</div><div class="line">				<span class="keyword">while</span>(p[l]=_getch()) //对输入的原密码进行不回显输入</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span> (p[l]!=<span class="string">'\r'</span>)</div><div class="line">					&#123;</div><div class="line">						cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">						l++;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">				&#125;</div><div class="line">				p[l]=<span class="string">'\0'</span>;</div><div class="line">				os=p;</div><div class="line">				<span class="keyword">if</span> (os == pas)  //如果密码与原来的密码相同，便修改密码成功</div><div class="line">				&#123;</div><div class="line">					cout&lt;&lt;endl;</div><div class="line">					cout &lt;&lt; <span class="string">"请输入修改后的密码:"</span>;</div><div class="line">					char q[20];</div><div class="line">					<span class="keyword">while</span>(q[j]=_getch()) //第一次输入修改后的密码不回显输入</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span> (q[j]!=<span class="string">'\r'</span>)</div><div class="line">						&#123;</div><div class="line">							cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">							j++;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">					&#125;</div><div class="line">						q[j]=<span class="string">'\0'</span>;</div><div class="line">						pas1=q;</div><div class="line">						cout&lt;&lt;endl;</div><div class="line">			cout &lt;&lt; <span class="string">"请再输入修改后的密码:"</span>;//第二次输入修改后的密码不回显输入</div><div class="line">			char r[20];</div><div class="line">			<span class="keyword">while</span>(r[k]=_getch())</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (r[k]!=<span class="string">'\r'</span>)</div><div class="line">				&#123;</div><div class="line">				cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">				k++;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">			&#125;</div><div class="line">			r[k]=<span class="string">'\0'</span>;</div><div class="line">			pas2=r;</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">						<span class="keyword">if</span> (pas1 == pas2) //对密码进行限制</div><div class="line">						&#123;</div><div class="line">							int n;//将string的密码转换成int类型</div><div class="line">							n = atoi(pas1.c_str());</div><div class="line">							<span class="keyword">if</span> (n &gt; 999999 || n &lt; 99999) //保证密码是6位</div><div class="line">							&#123;</div><div class="line">								cout &lt;&lt; <span class="string">"请确认密码为6位！！\n"</span>;</div><div class="line">								<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							//保证6位密码不相同</div><div class="line">							<span class="keyword">else</span> <span class="keyword">if</span> (n == 000000 || n == 111111 || n == 222222 || n == 333333 || n == 444444 || n == 555555 || n == 666666 || n == 777777 || n == 888888)</div><div class="line">							&#123;</div><div class="line">								cout &lt;&lt; <span class="string">"请确认密码不允许6位相同！！\n"</span>;</div><div class="line">								<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							//保证原密码与新修改后的密码不相同</div><div class="line">							<span class="keyword">else</span> <span class="keyword">if</span> (n == 123456) &#123; cout &lt;&lt; <span class="string">"修改密码失败，你的密码与原密码相同！"</span>&lt;&lt;endl;  </div><div class="line">							<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							<span class="keyword">else</span></div><div class="line">							&#123;	</div><div class="line">								cout &lt;&lt; <span class="string">"密码修改成功,请重新登陆账号！"</span> &lt;&lt; endl;</div><div class="line">								ofstream fout(<span class="string">"D:\\inf.txt"</span>); //密码修改成功后，重新对用户信息写入inf.txt</div><div class="line">								<span class="keyword">if</span> (!fout)</div><div class="line">								&#123;</div><div class="line">									cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;</div><div class="line">								&#125;</div><div class="line">								fout &lt;&lt; <span class="string">"该用户的账户为:"</span> &lt;&lt; endl &lt;&lt; line2 &lt;&lt; endl &lt;&lt; <span class="string">"该用户的密码为:"</span> &lt;&lt; endl &lt;&lt; pas1;</div><div class="line">								fout.close();</div><div class="line">								BankAccount();//再次调用输入账户类</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span></div><div class="line">						&#123;</div><div class="line">							cout &lt;&lt; <span class="string">"密码修改失败，请检查两次输入的密码是否一致。"</span>&lt;&lt;endl;</div><div class="line">							<span class="built_in">break</span>;</div><div class="line">						&#125;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"\n原密码输入错误，请检查！"</span> &lt;&lt; endl &lt;&lt; endl;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			<span class="keyword">case</span> 5://额外增加的选项，以便跳出死循环</div><div class="line">				cout&lt;&lt;<span class="string">"你已退出系统账户！"</span>&lt;&lt;endl;</div><div class="line">				<span class="built_in">exit</span>(0);</div><div class="line">			default:</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">	&#125;</div><div class="line">	void WithdrawingMoney1(int WithdrawingMoney)&#123;TotalMoney -= WithdrawingMoney;&#125;//取款数额</div><div class="line">	void Saving1(int Saving)&#123;TotalMoney += Saving;&#125;//存款数额</div><div class="line">	void <span class="function"><span class="title">show</span></span>()&#123;cout&lt;&lt;<span class="string">"你的账户余额为"</span>&lt;&lt;TotalMoney&lt;&lt;<span class="string">"元"</span>&lt;&lt;endl;&#125;//显示账户余额</div><div class="line">&#125;;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	ofstream fout(<span class="string">"D:\\inf.txt"</span>);//第一次写入D盘文件inf.txt</div><div class="line">	<span class="keyword">if</span> (!fout)</div><div class="line">	&#123;</div><div class="line">		cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;</div><div class="line">	&#125;</div><div class="line">	fout &lt;&lt; <span class="string">"该用户的账号为:\n"</span> &lt;&lt; <span class="string">"123456"</span> &lt;&lt; endl &lt;&lt; <span class="string">"该用户的密码为:\n"</span> &lt;&lt; <span class="string">"123456"</span> &lt;&lt; endl;//对用户的初始账户密码进行设置</div><div class="line">	fout.close();</div><div class="line">	BankAccount();//调用用户账户类</div><div class="line">	FileWriteNReading();//调用文件读写类</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <code style="color: #FF0033">此代码在VS2015上正常运行~运行效果图:</code><br>  <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/cpic.png" class="full-image"></div></div><div class="group-picture-row"></div></div></div></p>
<h2 id="netbeans写可视化界面模拟银行ATM"><a href="#netbeans写可视化界面模拟银行ATM" class="headerlink" title="netbeans写可视化界面模拟银行ATM"></a>netbeans写可视化界面模拟银行ATM</h2><h3 id="1-使用泛型，获取任何类型的账户密码余额"><a href="#1-使用泛型，获取任何类型的账户密码余额" class="headerlink" title="1.使用泛型，获取任何类型的账户密码余额"></a><code style="color: #FF0033">1.使用泛型，获取任何类型的账户密码余额</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">public class ATM&lt;A,P,B&gt; &#123;</div><div class="line">    private A account;</div><div class="line">    private P password;</div><div class="line">    private B balance;</div><div class="line">    public ATM(A account,P password,B balance)&#123;</div><div class="line">        this.setElem1(account);</div><div class="line">        this.setElem2(password);</div><div class="line">        this.setElem3(balance);</div><div class="line">    &#125;</div><div class="line">   public A <span class="function"><span class="title">getElem1</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> account;</div><div class="line">   &#125;</div><div class="line">   public void <span class="built_in">set</span>Elem1(A account)&#123;</div><div class="line">       this.account=account;</div><div class="line">   &#125;</div><div class="line">    public P <span class="function"><span class="title">getElem2</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> password;</div><div class="line">   &#125;</div><div class="line">    public void <span class="built_in">set</span>Elem2(P password)&#123;</div><div class="line">       this.password=password;</div><div class="line">   &#125;</div><div class="line">     public B <span class="function"><span class="title">getElem3</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> balance;</div><div class="line">   &#125;</div><div class="line">     public void <span class="built_in">set</span>Elem3(B balance)&#123;</div><div class="line">       this.balance=balance;</div><div class="line">   &#125;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        ATMDBCon.JDBCon();</div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-JDBC连接数据库sql-server"><a href="#2-JDBC连接数据库sql-server" class="headerlink" title="2.JDBC连接数据库sql server"></a><code style="color: #FF0033">2.JDBC连接数据库sql server</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">import java.sql.*;</div><div class="line">import java.util.*;</div><div class="line"></div><div class="line">public class ATMDBCon &#123;</div><div class="line">    //创建数据库连接的方法(JDBC)</div><div class="line">    public static Connection <span class="function"><span class="title">JDBCon</span></span>()&#123;</div><div class="line">        try&#123;</div><div class="line">            //--2 加载驱动程序</div><div class="line">              Class.forName(<span class="string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>);</div><div class="line">            // --3 创建连接</div><div class="line">              String url=<span class="string">"jdbc:sqlserver://localhost:1433; databaseName=ATMDB"</span>;</div><div class="line">              Connection conn=DriverManager.getConnection(url,<span class="string">"sa"</span>,<span class="string">""</span>);</div><div class="line">              System.out.println(<span class="string">"数据库连接成功"</span>);</div><div class="line">              <span class="built_in">return</span> conn;</div><div class="line">        &#125;catch(ClassNotFoundException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据库驱动程序找不到"</span>);</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据库连接失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">  //--查询数据的方法</div><div class="line">    public static Vector queryData(String sql)&#123;</div><div class="line">        Connection conn=JDBCon();</div><div class="line">        try&#123;</div><div class="line">            //创建会话对象</div><div class="line">            Statement stmt=conn.createStatement();</div><div class="line">            ResultSet rs=stmt.executeQuery(sql);</div><div class="line">            Vector data=new Vector();</div><div class="line">            <span class="keyword">while</span>(rs.next())&#123;</div><div class="line">                String account=rs.getObject(1).toString();</div><div class="line">                String password=rs.getObject(2).toString();</div><div class="line">                String balance=rs.getObject(3).toString();</div><div class="line">                ATM&lt;String,String,String&gt; stu=new ATM&lt;String,String,String&gt;(account,password,balance);</div><div class="line">                data.add(stu);</div><div class="line">            &#125;</div><div class="line">            //关闭</div><div class="line">            rs.close();</div><div class="line">            stmt.close();</div><div class="line">            conn.close();</div><div class="line">            <span class="built_in">return</span> data;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据访问失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //--更新数据的方法(insert,update,delete)</div><div class="line">    public static boolean updateData(String sql)&#123;</div><div class="line">        Connection conn=JDBCon();</div><div class="line">        try&#123;</div><div class="line">            //创建会话对象</div><div class="line">            Statement stmt=conn.createStatement();</div><div class="line">            //执行SQL语句，返回受影响的行数</div><div class="line">            int r=stmt.executeUpdate(sql);</div><div class="line">            stmt.close();</div><div class="line">            conn.close();</div><div class="line">            <span class="keyword">if</span>(r&gt;0)&#123;</div><div class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据更新失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-获取数据库登陆信息-如果账号密码都为123456则登陆成功"><a href="#3-获取数据库登陆信息-如果账号密码都为123456则登陆成功" class="headerlink" title="3.获取数据库登陆信息~如果账号密码都为123456则登陆成功"></a><code style="color: #FF0033">3.获取数据库登陆信息~如果账号密码都为123456则登陆成功</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// TODO add your handling code here:</div><div class="line">account=txtAccount.getText();</div><div class="line">password=txtPassword.getText();</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line"><span class="keyword">if</span>(account.equals(atm.getElem1())&amp;&amp;password.equals(atm.getElem2()))&#123;</div><div class="line">     ATMDemo frame=new ATMDemo();</div><div class="line">     frame.setVisible(<span class="literal">true</span>);</div><div class="line">     this.dispose();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    JOptionPane.showMessageDialog(null,<span class="string">"账号或密码错误！"</span>,<span class="string">"系统提示"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">    txtAccount.setText(<span class="string">""</span>);</div><div class="line">    txtPassword.setText(<span class="string">""</span>);</div><div class="line">    txtAccount.requestFocus();//选中密码框</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="4-获取数据库余额"><a href="#4-获取数据库余额" class="headerlink" title="4.获取数据库余额"></a><code style="color: #FF0033">4.获取数据库余额</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">// ATM atm=(ATM)data.get(0);   </div><div class="line"> JOptionPane.showMessageDialog(null,<span class="string">"Your current account balance is "</span>+atm.getElem3()+<span class="string">" yuan"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div></pre></td></tr></table></figure>
<h3 id="5-按照存款的要求进行存款"><a href="#5-按照存款的要求进行存款" class="headerlink" title="5.按照存款的要求进行存款"></a><code style="color: #FF0033">5.按照存款的要求进行存款</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">String str=txtgetdeposit.getText();</div><div class="line">      data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">      //ATM atm=(ATM)data.get(0);</div><div class="line">       ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">      int j=Integer.parseInt(atm.getElem3());</div><div class="line">      int i;</div><div class="line">      String sql=<span class="string">""</span>;</div><div class="line">      <span class="keyword">if</span>(str!=null)&#123;</div><div class="line">           try&#123;</div><div class="line">               i=Integer.parseInt(str);</div><div class="line">               <span class="keyword">if</span>(i%100==0 &amp;&amp; i&gt;0)&#123;</div><div class="line">                  int k=i+j;  </div><div class="line">                  sql=<span class="string">"update userinfo SET balance="</span>+k+<span class="string">""</span>;</div><div class="line">                  ATMDBCon.updateData(sql);</div><div class="line">                  JOptionPane.showMessageDialog(null,<span class="string">"Deposit success"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                  dispose();</div><div class="line">                  ATMDemo frame=new ATMDemo();</div><div class="line">                  frame.setVisible(<span class="literal">true</span>);</div><div class="line">               &#125;<span class="keyword">else</span>&#123;</div><div class="line">                   JOptionPane.showMessageDialog(null,<span class="string">"Please enter an integer of 100!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                   txtgetdeposit.setText(<span class="string">""</span>);</div><div class="line">               &#125;</div><div class="line">           &#125;catch(NumberFormatException e)&#123;</div><div class="line">               JOptionPane.showMessageDialog(null,<span class="string">"Please enter the correct deposit amount!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">           &#125;      </div><div class="line">      &#125;</div></pre></td></tr></table></figure>
<h3 id="6-按照取款的要求进行取款"><a href="#6-按照取款的要求进行取款" class="headerlink" title="6.按照取款的要求进行取款"></a><code style="color: #FF0033">6.按照取款的要求进行取款</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">String str=txtwithdraw.getText();</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">int j=Integer.parseInt(atm.getElem3());</div><div class="line">int i;</div><div class="line">String sql=<span class="string">""</span>;</div><div class="line"><span class="keyword">if</span>(str!=null)&#123;</div><div class="line">    try&#123;</div><div class="line">        i=Integer.parseInt(str);</div><div class="line">        <span class="keyword">if</span>(i&lt;=5000 &amp;&amp; i&lt;=j &amp;&amp; i%100==0 &amp;&amp; i&gt;0)&#123;</div><div class="line">            int k=j-i;</div><div class="line">            sql=<span class="string">"update userinfo SET balance="</span>+k+<span class="string">""</span>;</div><div class="line">            ATMDBCon.updateData(sql);</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Withdraw success"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">            ATMDemo frame=new ATMDemo();</div><div class="line">            frame.setVisible(<span class="literal">true</span>);</div><div class="line">            dispose();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Please enter an integer of 100 or below 5000 or less than total amount!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">            txtwithdraw.setText(<span class="string">""</span>);</div></pre></td></tr></table></figure>
<h3 id="7-修改密码操作"><a href="#7-修改密码操作" class="headerlink" title="7.修改密码操作"></a><code style="color: #FF0033">7.修改密码操作</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">String oldpas=txtoldpas.getText();</div><div class="line">String newpas=txtnewpas.getText();</div><div class="line">String newpas1=txtnewpas1.getText();</div><div class="line">String k;</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line"> String m=atm.getElem1();</div><div class="line"> String n=atm.getElem2();</div><div class="line"> </div><div class="line">String sql=<span class="string">""</span>;</div><div class="line"><span class="keyword">if</span>(oldpas!=null &amp;&amp; newpas!=null &amp;&amp; newpas1 !=null)&#123;</div><div class="line">    <span class="keyword">if</span>(oldpas.equals(atm.getElem2()))&#123;</div><div class="line">        try&#123;</div><div class="line">            int i=Integer.parseInt(newpas);</div><div class="line">            int j=Integer.parseInt(newpas1);</div><div class="line">            <span class="keyword">if</span>(i==j)&#123;</div><div class="line">                <span class="keyword">if</span>(i!=Integer.parseInt(oldpas) &amp;&amp; i&lt;999999 &amp;&amp;i&gt;99999 &amp;&amp; i!=111111 &amp;&amp; i!=22222 &amp;&amp; i!=333333 &amp;&amp; i!=444444 &amp;&amp; i!=555555 &amp;&amp; i!= 666666 &amp;&amp; i!= 777777 &amp;&amp; i!= 888888)&#123;  </div><div class="line">                    k=String.valueOf(j);</div><div class="line">                    sql=<span class="string">"update userinfo SET password='"</span>+k+<span class="string">"'"</span>;</div><div class="line">                    ATMDBCon.updateData(sql);</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Modify password success!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    try&#123;</div><div class="line">                            FileOutputStream f=new FileOutputStream(<span class="string">"D:\\info.txt"</span>);//构造FileInputStream对象</div><div class="line">                            ObjectOutputStream out=new ObjectOutputStream(f);//构造ObjectInputStream对象</div><div class="line">                            modifypas stu=new modifypas(atm.getElem1(),n,k);//使用ObjectInputStream对象的<span class="built_in">read</span>Obect（）方法进行序列化</div><div class="line">                            out.writeObject(stu);//使用ObjectOutStream对象的writeObject（）方法进行序列化</div><div class="line">                            out.close();//关闭ObjectOutSteram对象</div><div class="line">                            f.close();//关闭FileOutputStream对象</div><div class="line">                        &#125;catch(IOException e)&#123;</div><div class="line">                        e.printStackTrace();</div><div class="line">                        &#125;</div><div class="line">                     System.out.println(<span class="string">"序列化完毕"</span>);</div><div class="line">      		try&#123;</div><div class="line">                            FileInputStream f=new FileInputStream(<span class="string">"D:\\info.txt"</span>);//构造FileInputStream对象</div><div class="line">                            ObjectInputStream <span class="keyword">in</span> = new ObjectInputStream(f);//构造ObjectInputStream对象</div><div class="line">                            modifypas stu1=(modifypas)in.readObject();//使用ObjectInputStream对象的<span class="built_in">read</span>Obect（）方法进行反序列化</div><div class="line">                            System.out.println(stu1.toString());</div><div class="line">                            //System.out.println(<span class="string">"----------------------------"</span>);</div><div class="line">                            //System.out.println(<span class="string">"卡号："</span>+stu1.account1+<span class="string">";密码："</span>+stu1.password1+<span class="string">";修改后的密码："</span>+stu1.password2);</div><div class="line">                            in.close();//关闭ObjectOutSteram对象</div><div class="line">                            f.close();//关闭FileOutputStream对象</div><div class="line">                           &#125;catch(ClassNotFoundException e)&#123;</div><div class="line">                                    e.printStackTrace();</div><div class="line">                           &#125;catch(IOException e)&#123;</div><div class="line">                                    e.printStackTrace();</div><div class="line">                           &#125;</div><div class="line">                    System.out.println(<span class="string">"反序列化完毕"</span>);</div><div class="line">                    dispose();</div><div class="line">                    Login frame=new Login();</div><div class="line">                    frame.setVisible(<span class="literal">true</span>);</div><div class="line">                    //<span class="built_in">set</span>DefaultCloseOperation(ATMDemo.DISPOSE_ON_CLOSE)</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i==Integer.parseInt(oldpas))&#123;</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Old and New passwords are same!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                    txtoldpas.requestFocus();</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Password is not six or password identical!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                    txtoldpas.requestFocus();</div><div class="line">               &#125;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                JOptionPane.showMessageDialog(null,<span class="string">"Two input passwords are not the same!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">            &#125;</div><div class="line">        &#125;catch(NumberFormatException e)&#123;</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Please enter a digital password!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">         JOptionPane.showMessageDialog(null,<span class="string">"Old Password error!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    JOptionPane.showMessageDialog(null,<span class="string">"Please input a password!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="8-按回车登录事件在构造函数处添加以下代码即可"><a href="#8-按回车登录事件在构造函数处添加以下代码即可" class="headerlink" title="8.按回车登录事件在构造函数处添加以下代码即可"></a><code style="color: #FF0033">8.按回车登录事件</code>在构造函数处添加以下代码即可</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">      getRootPane().setDefaultButton(btnLogin);</div><div class="line">&lt;!-- btnLogin表示登陆按钮的名称，存取款修改密码类似 --&gt;</div></pre></td></tr></table></figure>
<h3 id="附上界面图："><a href="#附上界面图：" class="headerlink" title="附上界面图："></a><code style="color: #FF0033">附上界面图：</code></h3> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/uploads/atmnetpic.png"></div><div class="group-picture-column" style="width: 50%;"><img src="/uploads/atmnetpic1.png"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/atmnetpic2.png"></div></div></div></div>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;C++实践选的题目是模拟银行ATM的操作。JAVA实践的时候用NETBEANS 写成界面。&lt;/p&gt;
&lt;h3 id=&quot;模拟银行ATM机&quot;&gt;&lt;a href=&quot;#模拟银行ATM机&quot; class=&quot;headerlink&quot; title=&quot;模拟银行ATM机&quot;&gt;&lt;/a&gt;模拟银行ATM机&lt;/h3&gt;&lt;p&gt;查询余额：初始余额为10000元&lt;br&gt;ATM取款：每次取款金额为100的倍数，总额不超过5000元，支取金额不允许透支。&lt;br&gt;ATM存款：不能出现负存款。&lt;br&gt;修改密码：新密码长度不小于6位，不允许出现6位完全相同的情况，只有旧密码正确，新密码符合要求，且两次输入相同的情况下才可以成功修改密码。
    
    </summary>
    
      <category term="ATM" scheme="http://yoursite.com/categories/ATM/"/>
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="ATM" scheme="http://yoursite.com/tags/ATM/"/>
    
  </entry>
  
  <entry>
    <title>Java仿QQ聊天实现</title>
    <link href="http://yoursite.com/2017/01/16/qq/"/>
    <id>http://yoursite.com/2017/01/16/qq/</id>
    <published>2017-01-16T08:14:58.000Z</published>
    <updated>2017-02-08T03:10:39.974Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">你交回录取通知书，忘了十年寒窗~</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用网络编程仿照QQ聊天实现的代码。<br><a id="more"></a></p>
<h2 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">import java.io.*;</div><div class="line">import java.net.*;</div><div class="line">import java.util.Date;</div><div class="line">public class ClientDemo &#123;</div><div class="line">	 public static void main(String[] args)throws IOException &#123;</div><div class="line">	  Socket serverSocket=null;</div><div class="line">	  PrintWriter <span class="built_in">print</span>Writer=null;</div><div class="line">	  BufferedReader serverBufferedReader=null;</div><div class="line">	  boolean runable=<span class="literal">true</span>;</div><div class="line">	  String toServer;</div><div class="line">	  try&#123;</div><div class="line">		   serverSocket=new Socket(<span class="string">"127.0.0.1"</span>,1234);</div><div class="line">		   <span class="built_in">print</span>Writer=new PrintWriter(serverSocket.getOutputStream(),<span class="literal">true</span>);</div><div class="line">		   serverBufferedReader=new BufferedReader(new InputStreamReader(serverSocket.getInputStream()));</div><div class="line">		  &#125;catch(UnknownHostException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"找不到服务器"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"不能获得Socket的读入与写出器"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		  &#125;</div><div class="line">	  BufferedReader keyBufferedReader=new BufferedReader(new InputStreamReader(System.in));</div><div class="line">	  <span class="built_in">print</span>Writer.println(<span class="string">"新的用户登录"</span>);</div><div class="line">	  ReadServerThread <span class="built_in">read</span>ServerThread=new ReadServerThread(serverBufferedReader);</div><div class="line">	  <span class="built_in">read</span>ServerThread.start();</div><div class="line">	  <span class="keyword">while</span>(runable)&#123;</div><div class="line">		   Date d=new Date();</div><div class="line">		   toServer=keyBufferedReader.readLine();</div><div class="line">		   <span class="built_in">print</span>Writer.println(toServer+<span class="string">"\t"</span>+d.getHours()+<span class="string">":"</span>+d.getMinutes()+<span class="string">":"</span>+d.getSeconds());</div><div class="line">		   <span class="keyword">if</span>(toServer.equals(<span class="string">"bye."</span>))<span class="built_in">break</span>;</div><div class="line">		   runable=<span class="built_in">read</span>ServerThread.runable;</div><div class="line">	  &#125;</div><div class="line">	  <span class="built_in">read</span>ServerThread.fromServer=<span class="string">"欢迎下次再来"</span>;</div><div class="line">	  <span class="built_in">read</span>ServerThread.runable=<span class="literal">false</span>;</div><div class="line">	  <span class="built_in">print</span>Writer.close();</div><div class="line">	  serverBufferedReader.close();</div><div class="line">	  keyBufferedReader.close();</div><div class="line">	  serverSocket.close();</div><div class="line">	 &#125;</div><div class="line">&#125;</div><div class="line">class ReadServerThread extends Thread&#123;</div><div class="line">	 BufferedReader <span class="keyword">in</span>=null;</div><div class="line">	 String fromServer=<span class="string">""</span>;</div><div class="line">	 boolean runable=<span class="literal">true</span>;</div><div class="line">	 public ReadServerThread(BufferedReader <span class="keyword">in</span>)&#123;</div><div class="line">	  this.in=<span class="keyword">in</span>;</div><div class="line"> &#125;</div><div class="line">public void <span class="function"><span class="title">run</span></span>()&#123;</div><div class="line">  <span class="keyword">while</span>(runable)&#123;</div><div class="line">	   try&#123;</div><div class="line">		    fromServer=in.readLine();</div><div class="line">		   &#125;catch(Exception e)&#123;</div><div class="line">		    runable=<span class="literal">false</span>;</div><div class="line">		   &#125;</div><div class="line">		   <span class="keyword">if</span>(fromServer.equals(<span class="string">"bye."</span>))&#123;</div><div class="line">		    System.out.println(<span class="string">"客户端退出"</span>);</div><div class="line">		    runable=<span class="literal">false</span>;</div><div class="line">		    <span class="built_in">break</span>;</div><div class="line">	   &#125;</div><div class="line">	   System.out.println(<span class="string">"客户端："</span>+fromServer);</div><div class="line">	  &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">import java.net.*;</div><div class="line">import java.util.Date;</div><div class="line">import java.io.*;</div><div class="line">public class ServerDemo &#123;</div><div class="line">	 public static void main(String[] args)throws IOException&#123;</div><div class="line">	  String toClient;</div><div class="line">	  PrintWriter clientPrintWriter=null;</div><div class="line">	  BufferedReader clientBufferedReader=null;</div><div class="line">	  boolean runable=<span class="literal">true</span>;</div><div class="line">	  ServerSocket serverSocket=null;</div><div class="line">	  try&#123;</div><div class="line">		   serverSocket=new ServerSocket(1234);</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"不能创建1234端口"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		   &#125;</div><div class="line">	  Socket clientSocket=null;</div><div class="line">	  try&#123;</div><div class="line">		   clientSocket=serverSocket.accept();</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"访问端口失败"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(1);</div><div class="line">		  &#125;</div><div class="line">	  clientPrintWriter=new PrintWriter(clientSocket.getOutputStream(),<span class="literal">true</span>);</div><div class="line">	  clientBufferedReader=new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));</div><div class="line">	  BufferedReader keyBufferedReader=new BufferedReader(new InputStreamReader(System.in));</div><div class="line">	  toClient=<span class="string">"你好，欢迎你！"</span>;</div><div class="line">	  clientPrintWriter.println(toClient);</div><div class="line">	  ReadClientThread <span class="built_in">read</span>ClientThread=new ReadClientThread(clientBufferedReader);</div><div class="line">	  <span class="built_in">read</span>ClientThread.start();</div><div class="line">		  <span class="keyword">while</span>(runable)&#123;</div><div class="line">		   Date d=new Date();</div><div class="line">		   toClient=keyBufferedReader.readLine();</div><div class="line">		   clientPrintWriter.println(toClient+<span class="string">"\t"</span>+d.getHours()+<span class="string">":"</span>+d.getMinutes()+<span class="string">":"</span>+d.getSeconds());</div><div class="line">		   <span class="keyword">if</span>(toClient.equals(<span class="string">"bye."</span>))<span class="built_in">break</span>;</div><div class="line">		   runable=<span class="built_in">read</span>ClientThread.runable;</div><div class="line">		  &#125;</div><div class="line">	  <span class="built_in">read</span>ClientThread.fromClient=<span class="string">"欢迎下次再来。"</span>;</div><div class="line">	  <span class="built_in">read</span>ClientThread.runable=<span class="literal">false</span>;</div><div class="line">	  clientPrintWriter.close();</div><div class="line">	  keyBufferedReader.close();</div><div class="line">	  serverSocket.close();</div><div class="line">	 &#125;</div><div class="line">&#125;</div><div class="line">class ReadClientThread extends Thread&#123;</div><div class="line">	 BufferedReader bufferedReader=null;</div><div class="line">	 String fromClient=<span class="string">""</span>;</div><div class="line">	 boolean runable=<span class="literal">true</span>;</div><div class="line">	 public ReadClientThread(BufferedReader <span class="keyword">in</span>)&#123;</div><div class="line">	  this.bufferedReader=<span class="keyword">in</span>;</div><div class="line">	 &#125;</div><div class="line">	 public void <span class="function"><span class="title">run</span></span>()&#123;</div><div class="line">		  <span class="keyword">while</span>(runable)&#123;</div><div class="line">			   try&#123;</div><div class="line">			    fromClient=bufferedReader.readLine();</div><div class="line">			   &#125;catch(Exception e)&#123;</div><div class="line">			    runable=<span class="literal">false</span>;</div><div class="line">			   &#125;</div><div class="line">			   <span class="keyword">if</span>(fromClient.equals(<span class="string">"bye."</span>))&#123;</div><div class="line">			    System.out.println(<span class="string">"客户端退出"</span>);</div><div class="line">			    runable=<span class="literal">false</span>;</div><div class="line">			    <span class="built_in">break</span>;</div><div class="line">			   &#125;</div><div class="line">		   System.out.println(<span class="string">"客户端："</span>+fromClient);</div><div class="line">		  &#125;</div><div class="line">	 &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行工具为eclipse 2014，结果如下：<br><img src="/uploads/qqtes.png" class="full-image"></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;你交回录取通知书，忘了十年寒窗~&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;利用网络编程仿照QQ聊天实现的代码。&lt;br&gt;
    
    </summary>
    
      <category term="JAVA" scheme="http://yoursite.com/categories/JAVA/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="qq" scheme="http://yoursite.com/tags/qq/"/>
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>二分搜索技术</title>
    <link href="http://yoursite.com/2017/01/16/binarysearch/"/>
    <id>http://yoursite.com/2017/01/16/binarysearch/</id>
    <published>2017-01-16T08:14:58.000Z</published>
    <updated>2017-02-08T03:08:55.632Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">去不了的地方叫远方，回不去的是故乡~</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>二分搜索技术是算法里面最简单的查找一个数所在位置的算法。</p>
<h2 id="二分搜索技术"><a href="#二分搜索技术" class="headerlink" title="二分搜索技术"></a>二分搜索技术</h2><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>每执行一次算法的while循环，待搜索数组的大小减少一半，因此在最坏情况下，while循环被执行了O（logn）次。<br>在循环体内运算需要O（1）时间，因此整个算法在最坏的情况下的计算时间复杂性为O（logn).<br><a id="more"></a></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;          </span></div><div class="line">using namespace std;</div><div class="line">template&lt;class Type&gt;            //在已经排好序的a[0]~a[n-1]当中搜索x</div><div class="line">int BinarySearch(Type a[], const Type&amp;x, int n)&#123;</div><div class="line">	int left = 0;</div><div class="line">	int right = n - 1;</div><div class="line">	<span class="keyword">while</span> (left&lt;=right)</div><div class="line">	&#123;</div><div class="line">		int middle = (left + right) / 2;</div><div class="line">		<span class="keyword">if</span> (x==a[middle])</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">return</span> middle;//返回x所在数组a的位置</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (x&gt;a[middle])</div><div class="line">		&#123;</div><div class="line">			left = middle + 1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			right = middle - 1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> -1;//如果不存在，返回-1</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">	char m = 4;</div><div class="line">	//cout &lt;&lt; m&lt;&lt;endl;</div><div class="line">	char y[5] = &#123; 1,2,3,4&#125;;</div><div class="line">	int w=4;</div><div class="line">	w = BinarySearch(y, m, w);</div><div class="line">	cout &lt;&lt; w&lt;&lt;endl;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;去不了的地方叫远方，回不去的是故乡~&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;二分搜索技术是算法里面最简单的查找一个数所在位置的算法。&lt;/p&gt;
&lt;h2 id=&quot;二分搜索技术&quot;&gt;&lt;a href=&quot;#二分搜索技术&quot; class=&quot;headerlink&quot; title=&quot;二分搜索技术&quot;&gt;&lt;/a&gt;二分搜索技术&lt;/h2&gt;&lt;h3 id=&quot;复杂度&quot;&gt;&lt;a href=&quot;#复杂度&quot; class=&quot;headerlink&quot; title=&quot;复杂度&quot;&gt;&lt;/a&gt;复杂度&lt;/h3&gt;&lt;p&gt;每执行一次算法的while循环，待搜索数组的大小减少一半，因此在最坏情况下，while循环被执行了O（logn）次。&lt;br&gt;在循环体内运算需要O（1）时间，因此整个算法在最坏的情况下的计算时间复杂性为O（logn).&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>PS,AI设计</title>
    <link href="http://yoursite.com/2017/01/14/photo/"/>
    <id>http://yoursite.com/2017/01/14/photo/</id>
    <published>2017-01-14T12:57:40.000Z</published>
    <updated>2017-02-08T03:10:24.924Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我希望有一个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，由山野到书屋，只要最后是你就好。</blockquote></p>
<h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>之前用PS和AI等工具设计了很多海报和图片，暂时找到这么多，存着。<a id="more"></a><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/uploads/img_1.jpg"></div><div class="group-picture-column" style="width: 50%;"><img src="/uploads/img_2.jpg"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_3.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_4.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_5.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_6.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_7.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_8.jpg"></div></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我希望有一个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，由山野到书屋，只要最后是你就好。&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h2&gt;&lt;p&gt;之前用PS和AI等工具设计了很多海报和图片，暂时找到这么多，存着。
    
    </summary>
    
      <category term="设计" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="设计" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="AI" scheme="http://yoursite.com/tags/AI/"/>
    
      <category term="photoshop" scheme="http://yoursite.com/tags/photoshop/"/>
    
      <category term="logo" scheme="http://yoursite.com/tags/logo/"/>
    
  </entry>
  
  <entry>
    <title>基数排序 </title>
    <link href="http://yoursite.com/2017/01/14/shujujiegou/"/>
    <id>http://yoursite.com/2017/01/14/shujujiegou/</id>
    <published>2017-01-14T11:26:35.000Z</published>
    <updated>2017-02-08T03:11:58.254Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">如果一片瓦尔登湖不能荡涤心灵，那就没办法了~</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>数据结构实践任务，花了几个星期在网上找，都是不完全的版本，加入自己的理解写下能排数字和字母的基数排序~</p>
<h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>对输入的关键字序列进行链式基数排序，并分析算法复杂度。</p>
<h3 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h3><p>1)    对输入的自然数关键字序列进行链式基数排序。<br>2)    需排序的数据是英文单词，从文件中读取；按字典顺序排列，写文件保存。</p>
<h3 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h3><p>输入自然数关键字序列：278，109，63，930，589，184，505，269，8，83。<br>输入英文单词组成的文件，按字典排序并输出到文件中。<a id="more"></a></p>
<h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>第一个自然数关键字排序直接在cmd窗口输入即可排序。<br>第二个读取字母并排序之前需要在D盘中创建一个f1.txt文件，在里面输入10个长度小于等于9的单词，每输入一个单词换行。这里不管是自然数还是单词统一使用MSD优先排序（即从前往后对比）。<br>具体排序思路参考严蔚敏的数据结构。</p>
<h3 id="算法复杂度分析"><a href="#算法复杂度分析" class="headerlink" title="算法复杂度分析"></a>算法复杂度分析</h3><p><img src="/uploads/jishupx.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code></p>
<pre><code class="bash">
<span class="comment">#include &lt;iostream&gt;</span>
<span class="comment">#include &lt;fstream&gt; //文件输入输出流</span>
<span class="comment">#include&lt;string&gt;</span>
using namespace std;
//数字结构体
<span class="comment">#define MAX_NUM_OF_KEY 8//关键字项数的最大值</span>
<span class="comment">#define RADIX    10//关键字基数，此时是十进制整数的基数</span>
<span class="comment">#define MAX_SPACE 10000</span>
typedef int DataType;
typedef struct
{
    int data;//数据，如278
    DataType keys[MAX_NUM_OF_KEY];//每个数据的所有关键字，278的2，7，8
    int next;
}SLCell;    //静态链表的节点类型
typedef struct Sllist
{
    SLCell *R; //静态链表的可利用空间，r[0]为头结点
    int recnum; //静态链表的当前长度
    int keynum; //当前数据的关键字个数
}Sllist, *SLList; //静态链表类型
typedef int ArrType[RADIX];//指针数组类型，声明两个指针数组，一个头指针，一个尾指针

//字母结构体
<span class="comment">#define MaxLen 9  //单词的最大长度</span>
<span class="comment">#define Radix  27 //基数rd为27,分别对应' ','a',…'z'</span>
typedef char String[MaxLen + 1];//定义String为字符数组类型                              
typedef struct node
{
    String word;  //单词
    struct node *next;  //next指针
} LinkNode;
//数字基数排序
void creatList(SLList &amp;SLL) //创建链表
{
    int key;
    int i = 1, j;
    cout &lt;&lt; <span class="string">"输入要进行排序的数字(输入0结束):"</span> &lt;&lt; endl;
    cin &gt;&gt; key;
    <span class="keyword">while</span> (key != 0)
    {
        SLL-&gt;R[i].data = key;
        <span class="keyword">for</span> (j = 1; j &lt;= SLL-&gt;keynum; j++)
        {
            SLL-&gt;R[i].keys[j] = key % 10;
            key /= 10;
        }
        SLL-&gt;R[i - 1].next = i++;
        cin &gt;&gt; key;
    }
    SLL-&gt;recnum = i - 1;
    SLL-&gt;R[SLL-&gt;recnum].next = 0;
}
//打印输出
void <span class="built_in">print</span>(SLList &amp;SLL)
{
    <span class="keyword">for</span> (int p = SLL-&gt;R[0].next; p; p = SLL-&gt;R[p].next)
    {
        cout &lt;&lt;<span class="string">"["</span>&lt;&lt; SLL-&gt;R[p].data &lt;&lt;<span class="string">"]"</span>&lt;&lt; <span class="string">"  "</span>;
    }
    cout &lt;&lt; endl;
}
//分配算法
void distribute(SLCell *R, int i, ArrType front, ArrType end)
{
    //静态链表L的R域中记录已按(keys[0]...keys[i-1]有序)。
    //本算法按第i个关键字keys[i]建立RADIX个子表，使同一子表中记录的keys[i]相同。
    //front[0...RADIX-1]和end[0...RADIX-1]分别指向各子表中第一个和最后一个记录。
    int j;
    <span class="keyword">for</span> (int j = 0; j&lt;RADIX; ++j)
        front[j] = 0;        //各子表初始化为空表
    <span class="keyword">for</span> (int p = R[0].next; p; p = R[p].next)
    {
        j = R[p].keys[i];           //映射第i个关键字
        <span class="keyword">if</span> (!front[j])
            front[j] = p;        //若front[j]为空，则把记录连接到front[j]的头指针上
        <span class="keyword">else</span>
            R[end[j]].next = p;    //若front[j]的头指针已经连接过了，说明已j为关键字的数据已经有了，
                                   //这时把上一个以j为关键字的数据指向当前的这个数，即下标为p的数据
        end[j] = p;        //尾指针重新指到每次更新的数据上
    }
}
//收集算法
void collect(SLCell *R, int i, ArrType front, ArrType end)
{
    //本算法按keys[i]自小到大地将f[0...RADIX-1]所指各子表依次链接成为一个链表
    int j;
    <span class="keyword">for</span> (j = 0; !front[j]; j++);   //找到第一个不为空的子表
    R[0].next = front[j];            //重整静态链表
    int k = end[j];                    //k为当前子表的尾指针
    <span class="keyword">while</span> (j&lt;RADIX)
    {
        <span class="keyword">for</span> (++j; j&lt;RADIX; j++)
            <span class="keyword">if</span> (front[j])        //找下一个非空子表
            {
                R[k].next = front[j];        //连接
                k = end[j];
            }
    }
    R[k].next = 0;                    //k指向最后一个非空子表的尾指针
}
//字母基数排序
void DispWord(String R[], int n) //输出单词
{
    int i;
    string o[10];
    ofstream fout(<span class="string">"D:\\inf.txt"</span>); //排序成功后，重新对排序写入inf.txt
    <span class="keyword">if</span> (!fout)
    {
        cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;
    }
    <span class="keyword">for</span> (i = 0; i &lt; n; i++)
    {
        cout &lt;&lt; <span class="string">"["</span> &lt;&lt; R[i] &lt;&lt; <span class="string">"]"</span>;
        o[i] = R[i];
        fout &lt;&lt; <span class="string">"["</span>&lt;&lt;o[i]&lt;&lt;<span class="string">"]"</span> &lt;&lt; endl;
    }
    cout &lt;&lt; endl;
    fout.close();
}
void PreProcess(String R[], int n)
//对单词进行预处理,用空格填充尾部至MaxLen长
{
    int i, j;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)
    {
        <span class="keyword">if</span> (strlen(R[i])&lt;MaxLen)
        {
            <span class="keyword">for</span> (j = strlen(R[i]); j&lt;MaxLen; j++)
                R[i][j] = <span class="string">' '</span>;
            R[i][j] = <span class="string">'\0'</span>;
        }
    }
}
void EndProcess(String R[], int n)
//恢复处理,删除预处理时填充的尾部空格
{
    int i, j;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)
    {
        <span class="keyword">for</span> (j = MaxLen - 1; R[i][j] == <span class="string">' '</span>; j--);
        R[i][j + 1] = <span class="string">'\0'</span>;
    }
}
void Distribute(String R[], LinkNode *head[], LinkNode *tail[], int j, int n)
//按关键字的第j个分量进行分配,进入此过程时各队列一定为空
{
    int i, k;
    LinkNode *p;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)         //依次扫描R[i],将其入队
    {
        <span class="keyword">if</span> (R[i][j] == <span class="string">' '</span>)       //空格时放入0号队列中,<span class="string">'a'</span>时放入1号队列中,…
            k = 0;
        <span class="keyword">else</span>
            k = R[i][j] - <span class="string">'a'</span> + 1;
        p = (LinkNode *)malloc(sizeof(LinkNode)); //创建新结点
        strcpy_s(p-&gt;word, R[i]);
        p-&gt;next = NULL;
        <span class="keyword">if</span> (head[k] == NULL)
        {
            head[k] = p;
            tail[k] = p;
        }
        <span class="keyword">else</span>
        {
            tail[k]-&gt;next = p;
            tail[k] = p;
        }
    }
}
void Collect(String R[], LinkNode *head[])
//依次将各非空队列中的记录收集起来
{
    int k = 0, i;
    LinkNode *p;
    <span class="keyword">for</span> (i = 0; i&lt;Radix; i++)
        <span class="keyword">for</span> (p = head[i]; p != NULL; p = p-&gt;next)
            strcpy_s(R[k++], p-&gt;word);
}
void RadixSort(String R[], int n)    //对R[0..n-1]进行基数排序
{
    LinkNode *head[Radix], *tail[Radix]; //定义Radix个队列
    int i, j;
    int k = 1;
    <span class="keyword">for</span> (i = MaxLen - 1; i &gt;= 0; i--)             //从低位到高位做d趟箱排序
    {
        <span class="keyword">for</span> (j = 0; j&lt;Radix; j++)
            head[j] = tail[j] = NULL;           //队列置空
        Distribute(R, head, tail, i, n);        //第i趟分配
        Collect(R, head);                    //第i趟收集
        cout &lt;&lt; <span class="string">"第"</span> &lt;&lt; k &lt;&lt; <span class="string">"趟分配和收集:"</span> &lt;&lt; endl;
        <span class="keyword">for</span> (int m = 0; m &lt;10; m++)
        {
            cout&lt;&lt;<span class="string">"["</span>&lt;&lt;R[m]&lt;&lt;<span class="string">"]"</span>;
        }
        k++;
        cout &lt;&lt; endl;
    }
}
//主函数
int <span class="function"><span class="title">main</span></span>()
{
    SLList SLL;
    SLL = (SLList)malloc(MAX_SPACE * sizeof(Sllist));
    SLL-&gt;R = (SLCell *)malloc(MAX_SPACE * sizeof(SLCell));
    SLL-&gt;recnum = 0;
    SLL-&gt;keynum = 3;
    string R[10];
    String c[10];
    ifstream fopen(<span class="string">"D:\\f1.txt"</span>);//读取D盘inf.txt文件
    <span class="keyword">if</span> (!fopen)
    {
        cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;
    }
    <span class="keyword">while</span> (!fopen.eof()) {   //读取D盘写入的文件
        <span class="keyword">for</span> (int q = 0; q&lt;10; q++) {
            getline(fopen, R[q]); //读取第一行
            strcpy_s(c[q],R[q].c_str());
        }
    }
    fopen.close();
    /*ofstream fout(<span class="string">"D:\\inf.txt"</span>); //排序成功后，重新对用户信息写入inf.txt
    <span class="keyword">if</span> (!fout)
    {
        cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;
    }
    <span class="keyword">for</span> (int o = 0; o &lt; 10; o++) {
        fout &lt;&lt; c[o] &lt;&lt; endl;
    }
    fout.close();*/
    int k;
    <span class="keyword">while</span> (1) {
        cout &lt;&lt; <span class="string">"*************基数排序程序***************"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*          选择要执行的命令            *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    1.输入自然数进行链式基数排序      *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    2.从文件中读取字母,按字典顺序排列 *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    3.退出程序                   *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"****************************************"</span> &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
        cin &gt;&gt; k;
        switch (k)
        {
        <span class="keyword">case</span> 1:
            creatList(SLL);
            cout &lt;&lt; <span class="string">"排序前:"</span> &lt;&lt; endl;
            <span class="built_in">print</span>(SLL);
            ArrType front, end;
            <span class="keyword">for</span> (int i = 1; i &lt;= SLL-&gt;keynum; i++)    //按LSD法对各关键字进行分配和收集
            {
                distribute(SLL-&gt;R, i, front, end);    //第i趟分配
                collect(SLL-&gt;R, i, front, end);        //第i趟收集
                cout &lt;&lt; <span class="string">"第"</span> &lt;&lt; i &lt;&lt; <span class="string">"趟分配和收集:"</span> &lt;&lt; endl;
                <span class="built_in">print</span>(SLL);
            }
            cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
            <span class="built_in">break</span>;
        <span class="keyword">case</span> 2:
            cout &lt;&lt; <span class="string">"从D:\\f1.txt中读取到的单词为："</span> &lt;&lt; endl;
            DispWord(c, 10);
            PreProcess(c, 10);
            cout &lt;&lt; <span class="string">"预处理后："</span> &lt;&lt; endl;
            DispWord(c, 10);
            RadixSort(c, 10);
            cout &lt;&lt; <span class="string">"排序结果："</span> &lt;&lt; endl;
            DispWord(c, 10);
            EndProcess(c, 10);
            cout &lt;&lt; <span class="string">"最终结果："</span> &lt;&lt; endl;
            DispWord(c, 10);
            cout &lt;&lt; <span class="string">"******排序后的结果已经成功写入D盘inf.txt!******"</span>;
            cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
            <span class="built_in">break</span>;
        <span class="keyword">case</span> 3:
            <span class="built_in">exit</span>(0);
        default:
            cout &lt;&lt; <span class="string">"请输入正确的数字！"</span> &lt;&lt; endl;
            <span class="built_in">break</span>;
        }
    }
    <span class="built_in">return</span> 0;
}
</code></pre>
  <hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;如果一片瓦尔登湖不能荡涤心灵，那就没办法了~&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;数据结构实践任务，花了几个星期在网上找，都是不完全的版本，加入自己的理解写下能排数字和字母的基数排序~&lt;/p&gt;
&lt;h2 id=&quot;基数排序&quot;&gt;&lt;a href=&quot;#基数排序&quot; class=&quot;headerlink&quot; title=&quot;基数排序&quot;&gt;&lt;/a&gt;基数排序&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;对输入的关键字序列进行链式基数排序，并分析算法复杂度。&lt;/p&gt;
&lt;h3 id=&quot;任务要求&quot;&gt;&lt;a href=&quot;#任务要求&quot; class=&quot;headerlink&quot; title=&quot;任务要求&quot;&gt;&lt;/a&gt;任务要求&lt;/h3&gt;&lt;p&gt;1)    对输入的自然数关键字序列进行链式基数排序。&lt;br&gt;2)    需排序的数据是英文单词，从文件中读取；按字典顺序排列，写文件保存。&lt;/p&gt;
&lt;h3 id=&quot;测试数据&quot;&gt;&lt;a href=&quot;#测试数据&quot; class=&quot;headerlink&quot; title=&quot;测试数据&quot;&gt;&lt;/a&gt;测试数据&lt;/h3&gt;&lt;p&gt;输入自然数关键字序列：278，109，63，930，589，184，505，269，8，83。&lt;br&gt;输入英文单词组成的文件，按字典排序并输出到文件中。
    
    </summary>
    
      <category term="基数排序" scheme="http://yoursite.com/categories/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="基数排序" scheme="http://yoursite.com/tags/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
</feed>
