<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Superb&#39;s blog</title>
  <subtitle>给时间以生命，而不是给生命以时间。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-05T15:21:10.209Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄少鹏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2017-02-05 Algorithm Gossip骑士走棋盘</title>
    <link href="http://yoursite.com/2017/02/05/sf7/"/>
    <id>http://yoursite.com/2017/02/05/sf7/</id>
    <published>2017-02-05T14:31:45.000Z</published>
    <updated>2017-02-05T15:21:10.209Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">凡是值得做的事情，都值得慢慢做—-做很久很久</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>骑士旅游在十八世纪初倍受数学家与拼图迷的注意，它什么时候被提出已不可考，骑士的走法为西洋棋的走法，骑士可以由任一个为止出发，它要如何走完所有的位置？<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>骑士的走法，基本可以使用递回来解决，但是纯粹的递回在维度大时相当没有效率， 一个聪明的解法由J.C. Warnsdorff在1823年提出，简单的说，先将最难的位置走完，接下里的路就宽广了，骑士所要走的下一步，【为下一步再选择时，所能走的步数最少的一步。】，使用这个方法，在不使用递回的情况下，烤鸭油较高的几率找出走法（找不到走法的机会也是有的）。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line">int board[8][8] = &#123; 0 &#125;;</div><div class="line">int travel(int, int);</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	int startx, starty;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"输入起始点："</span>);</div><div class="line">	scanf(<span class="string">"%d%d"</span>, &amp;startx, &amp;starty);</div><div class="line">	<span class="keyword">if</span> (travel(startx, starty))</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"游历完成！\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"游历失败！\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 8; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( j = 0; j &lt; 8; j++)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%2d"</span>, board[i][j]);</div><div class="line">		&#125;</div><div class="line">		putchar(<span class="string">'\n'</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int travel(int x,int y)</div><div class="line">&#123;</div><div class="line">	//对应骑士可走的八个方向</div><div class="line">	int ktmove1[8] = &#123; -2,-1,1,2,2,1,-1,-2 &#125;;</div><div class="line">	int ktmove2[8] = &#123; 1,2,2,1,-1,-2,-2,-1 &#125;;</div><div class="line">	//测试下一步的出路</div><div class="line">	int nexti[8] = &#123; 0 &#125;;</div><div class="line">	int nextj[8] = &#123; 0 &#125;;</div><div class="line">	//记录出路的个数</div><div class="line">	int exists[8] = &#123; 0 &#125;;</div><div class="line">	int i, j, k, m, l;</div><div class="line">	int tmpi, tmpj;</div><div class="line">	int count, min, tmp;</div><div class="line">	i = x;</div><div class="line">	j = y;</div><div class="line">	board[i][j] = 1;</div><div class="line">	<span class="keyword">for</span> ( m = 2; m &lt;= 64; m++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( l = 1; l &lt; 8; l++)</div><div class="line">		&#123;</div><div class="line">			exists[l] = 0;</div><div class="line">		&#125;</div><div class="line">		l = 0;</div><div class="line">		//试探八个方向</div><div class="line">		<span class="keyword">for</span> ( k = 0; k &lt; 8; k++)</div><div class="line">		&#123;</div><div class="line">			tmpi = i + ktmove1[k];</div><div class="line">			tmpj = j + ktmove2[k];</div><div class="line">			//如果是边界了，不可走</div><div class="line">			<span class="keyword">if</span> (tmpi &lt; 0 || tmpj &lt; 0 || tmpi&gt;7 || tmpj&gt;7)<span class="built_in">continue</span>;</div><div class="line">			//如果这个方向可走，记录下来</div><div class="line">			<span class="keyword">if</span> (board[tmpi][tmpj]==0)</div><div class="line">			&#123;</div><div class="line">				nexti[l] = tmpi;</div><div class="line">				nextj[l] = tmpj;</div><div class="line">				//可走的方向加一个</div><div class="line">				l++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		count = 1;</div><div class="line">		//如果可走的方向为0个，返回</div><div class="line">		<span class="keyword">if</span> (count==0)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">return</span> 0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (count==1)</div><div class="line">		&#123;</div><div class="line">			//只有一个可走的方向</div><div class="line">			//所以直接是最少出路的方向</div><div class="line">			min = 0;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> </div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> ( l = 0; l &lt; count; l++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> ( k = 0; k &lt; 8; k++)</div><div class="line">				&#123;</div><div class="line">					tmpi = nexti[l] + ktmove1[k];</div><div class="line">					tmpj = nextj[l] + ktmove2[k];</div><div class="line">					<span class="keyword">if</span> (tmpi &lt; 0 || tmpj &lt; 0 ||</div><div class="line">						tmpi&gt;7 || tmpj&gt;7)</div><div class="line">					&#123;</div><div class="line">						<span class="built_in">continue</span>;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">if</span> (board[tmpi][tmpj]==0)</div><div class="line">					&#123;</div><div class="line">						exists[l]++;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">				tmp = exists[0];</div><div class="line">				min = 0;</div><div class="line">				//从可走的方向中寻找最少出路的方向</div><div class="line">				<span class="keyword">for</span> ( l = 1; l &lt; count; l++)</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span> (exists[l]&lt;tmp)</div><div class="line">					&#123;</div><div class="line">						tmp = exists[l];</div><div class="line">						min = l;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		//走最少出路的方向</div><div class="line">		i = nexti[min];</div><div class="line">		j = nextj[min];</div><div class="line">		board[i][j] = m;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/qishi.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;凡是值得做的事情，都值得慢慢做—-做很久很久&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;骑士旅游在十八世纪初倍受数学家与拼图迷的注意，它什么时候被提出已不可考，骑士的走法为西洋棋的走法，骑士可以由任一个为止出发，它要如何走完所有的位置？
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="骑士走棋盘" scheme="http://yoursite.com/tags/%E9%AA%91%E5%A3%AB%E8%B5%B0%E6%A3%8B%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-04 Algorithm Gossip老鼠走迷宫二</title>
    <link href="http://yoursite.com/2017/02/04/sf6/"/>
    <id>http://yoursite.com/2017/02/04/sf6/</id>
    <published>2017-02-04T12:27:42.000Z</published>
    <updated>2017-02-05T14:34:32.654Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我在黄昏的血色中踽踽独行<br>感到自己不过是这忧郁黄昏大地上一粒微不足道的尘埃</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于迷宫的设计，老鼠走迷宫的入口至出口路径可能不止一条，如何求出所有的路径呢？<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>求所有的路径看起来复杂其实更简单，只要在老鼠走至出口时显示经过的路径，然后退回上一格重新选择下一个位置继续递回就可以了，比求出单一路径还简单，我们的程式只要做一点修改就可以了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line">void visit(int,int);</div><div class="line">int maze[9][9] = &#123; &#123;2,2,2,2,2,2,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,2,0,2,2,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,0,2,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,2,0,2,0,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2,0,2&#125;,</div><div class="line">					&#123;2,2,0,2,2,0,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,2,2,2,2,2,2,2,2&#125; &#125;;</div><div class="line">int startI = 1, startJ = 1;//入口</div><div class="line">int endI = 7, endJ = 7;//出口</div><div class="line">int success = 0;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"显示迷宫：\n"</span>);</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (j = 0; j &lt; 7; j++)</div><div class="line">			<span class="keyword">if</span> (maze[i][j] == 2)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	visit(startI, startJ);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void visit(int i, int j) </div><div class="line">&#123;</div><div class="line">	int m, n;</div><div class="line">	maze[i][j] = 1;</div><div class="line">	<span class="keyword">if</span> (i==endI &amp;&amp; j==endJ)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n显示路径: \n"</span>);</div><div class="line">		<span class="keyword">for</span> ( m = 0; m &lt; 9; m++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> ( n = 0; n &lt; 9; n++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (maze[m][n]==2)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(maze[m][n]==1)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"O"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">				&#125;</div><div class="line">			</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> ( maze[i][j + 1] == 0)visit(i, j + 1);</div><div class="line">	<span class="keyword">if</span> ( maze[i + 1][j] == 0)visit(i + 1, j);</div><div class="line">	<span class="keyword">if</span> ( maze[i][j - 1] == 0)visit(i, j - 1);</div><div class="line">	<span class="keyword">if</span> ( maze[i - 1][j] == 0)visit(i - 1, j);</div><div class="line">	maze[i][j] = 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/migong2.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我在黄昏的血色中踽踽独行&lt;br&gt;感到自己不过是这忧郁黄昏大地上一粒微不足道的尘埃&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于迷宫的设计，老鼠走迷宫的入口至出口路径可能不止一条，如何求出所有的路径呢？
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="迷宫" scheme="http://yoursite.com/tags/%E8%BF%B7%E5%AE%AB/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-03 Algorithm Gossip老鼠走迷宫一</title>
    <link href="http://yoursite.com/2017/02/03/sf5/"/>
    <id>http://yoursite.com/2017/02/03/sf5/</id>
    <published>2017-02-03T13:18:28.000Z</published>
    <updated>2017-02-04T12:26:39.946Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">在季节的列车上，如果你要提前下车<br>请别推醒装睡的我，这样我可以沉睡到终点<br>假装不知道你已经离开</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>说明老鼠走迷宫是递回求解的基本题型，我们在二维阵列中使用2表示迷宫墙壁，使用1表示老鼠行走的路径，试以程式求出由入口至出口的路径。<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>老鼠的走法有上下左右四个方向，在每前进一格之后就选一个方向前进，无法前进时退回选择下一个前进方向，如此在阵列中依序测试四个方向，直到走到出口为止，这是递回的基本题，请直接看程式应就可以理解。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line">int visit(int,int);</div><div class="line">int maze[7][7] = &#123; &#123;2,2,2,2,2,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,0,2,0,2,0,2&#125;,</div><div class="line">					&#123;2,0,0,2,0,2,2&#125;,</div><div class="line">					&#123;2,2,0,2,0,2,2&#125;,</div><div class="line">					&#123;2,0,0,0,0,0,2&#125;,</div><div class="line">					&#123;2,2,2,2,2,2,2&#125; &#125;;</div><div class="line">int startI = 1, startJ = 1;//入口</div><div class="line">int endI = 5, endJ = 5;//出口</div><div class="line">int success = 0;</div><div class="line">int <span class="function"><span class="title">main</span></span>() </div><div class="line">&#123;</div><div class="line">	int i, j;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"显示迷宫：\n"</span>);</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (j = 0; j &lt; 7; j++)</div><div class="line">			<span class="keyword">if</span> (maze[i][j] == 2)</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">			&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (visit(startI, startJ) == 0)</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n没有找到出口！\n"</span>);</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n显示路径：\n"</span>);</div><div class="line">		<span class="keyword">for</span> ( i = 0; i &lt; 7; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">for</span> (j = 0; j &lt; 7; j++) </div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (maze[i][j]==2)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(maze[i][j]==1)</div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">"O"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					<span class="built_in">printf</span>(<span class="string">" "</span>);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">int visit(int i, int j) </div><div class="line">&#123;</div><div class="line">	maze[i][j] = 1;</div><div class="line">	<span class="keyword">if</span> (i==endI &amp;&amp; j==endJ)</div><div class="line">	&#123;</div><div class="line">		success = 1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i][j + 1] == 0)visit(i, j + 1);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i + 1][j] == 0)visit(i + 1, j);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i][j - 1] == 0)visit(i, j - 1);</div><div class="line">	<span class="keyword">if</span> (success != 1 &amp;&amp; maze[i - 1][j] == 0)visit(i - 1, j);</div><div class="line">	<span class="keyword">if</span> (success != 1)maze[i][j] = 0;</div><div class="line">	<span class="built_in">return</span> success;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/migong1.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;在季节的列车上，如果你要提前下车&lt;br&gt;请别推醒装睡的我，这样我可以沉睡到终点&lt;br&gt;假装不知道你已经离开&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;说明老鼠走迷宫是递回求解的基本题型，我们在二维阵列中使用2表示迷宫墙壁，使用1表示老鼠行走的路径，试以程式求出由入口至出口的路径。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="迷宫" scheme="http://yoursite.com/tags/%E8%BF%B7%E5%AE%AB/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-02 Algorithm Gossip 三色旗</title>
    <link href="http://yoursite.com/2017/02/02/sf4/"/>
    <id>http://yoursite.com/2017/02/02/sf4/</id>
    <published>2017-02-02T13:58:19.000Z</published>
    <updated>2017-02-02T14:06:23.426Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">逃避责任就会带来轻松，可那恰恰就是“生命不能承受之轻”啊</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>三色旗的问题最早由E.W.Dijkstra所提出，他所使用的用语为Dutch Nation Flag(Dijkstra为荷兰人)，而多数的作者则使用Three-Color Flag来称之。<a id="more"></a></p>
<p>假设有一条绳子，上面有红、白、蓝三种颜色的旗子，起初绳子上的旗子颜色并没有顺序，您希望将之分类，并排列为蓝、白、红的顺序，要如何移动次数才会最少，注意您只能在绳子上进行这个动作，而且一次只能调换两个旗子。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"></div><div class="line"><span class="comment">#define BLUE 'b'</span></div><div class="line"><span class="comment">#define WHITE 'w'</span></div><div class="line"><span class="comment">#define RED 'r'</span></div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char color[] = &#123; <span class="string">'r'</span>,<span class="string">'w'</span>,<span class="string">'b'</span>,<span class="string">'w'</span> ,<span class="string">'w'</span>,<span class="string">'b'</span> ,<span class="string">'r'</span>,<span class="string">'b'</span>,</div><div class="line">		<span class="string">'w'</span>,<span class="string">'r'</span>,<span class="string">'\0'</span> &#125;;//随机定义10种旗子颜色</div><div class="line">	int wFlag = 0;</div><div class="line">	int bFlag = 0;</div><div class="line">	int rFlag = strlen(color) - 1;</div><div class="line">	int i;</div><div class="line">	<span class="keyword">for</span> (i = 0; i &lt; strlen(color); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, color[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="keyword">while</span> (wFlag &lt;= rFlag)</div><div class="line">	&#123;//一开始时未处理的r指针处于最后一个旗子位子，当r的索引数减</div><div class="line">		//至少于w的索引数时，表示接下来的旗子就都是红色了，此时就可以结束移动。</div><div class="line">		<span class="keyword">if</span> (color[wFlag] == WHITE)</div><div class="line">		&#123;//如果图中w所在的位置为白色，则w+1，表示未处理的部份移至至白色群组。</div><div class="line">			wFlag++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (color[wFlag] == BLUE)</div><div class="line">		&#123;//如果w部份为蓝色，则b与w的元素对调，而b与w必须各+1，表示两个群组都多了一个元素</div><div class="line">			char temp1;</div><div class="line">			temp1 = color[bFlag];</div><div class="line">			color[bFlag] = color[wFlag];</div><div class="line">			color[wFlag] = temp1;</div><div class="line">			bFlag++; wFlag++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;//如果w所在的位置是红色，则将w与r交换，但r要减1，表示未处理的部份减1。</div><div class="line">			<span class="keyword">while</span> (wFlag &lt; rFlag &amp;&amp; color[rFlag] == RED)</div><div class="line">			&#123;</div><div class="line">				rFlag--;</div><div class="line">			&#125;</div><div class="line">			char temp;</div><div class="line">			temp = color[rFlag];</div><div class="line">			color[rFlag] = color[wFlag];</div><div class="line">			color[wFlag] = temp;</div><div class="line">			rFlag--;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> ( i = 0; i &lt; strlen(color); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, color[i]);</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;逃避责任就会带来轻松，可那恰恰就是“生命不能承受之轻”啊&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;三色旗的问题最早由E.W.Dijkstra所提出，他所使用的用语为Dutch Nation Flag(Dijkstra为荷兰人)，而多数的作者则使用Three-Color Flag来称之。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="三色旗" scheme="http://yoursite.com/tags/%E4%B8%89%E8%89%B2%E6%97%97/"/>
    
  </entry>
  
  <entry>
    <title>2017-02-01 巴斯卡三角形</title>
    <link href="http://yoursite.com/2017/02/01/sf3/"/>
    <id>http://yoursite.com/2017/02/01/sf3/</id>
    <published>2017-02-01T15:02:15.000Z</published>
    <updated>2017-02-01T15:15:30.827Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">得按你想的去生活，否则迟早按你生活的去想</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>打印巴斯卡三角形<a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line">using namespace std;</div><div class="line"><span class="comment">#define N 12</span></div><div class="line">long combi(int n, int r) </div><div class="line">&#123;</div><div class="line">	int i;</div><div class="line">	long p = 1;</div><div class="line">	<span class="keyword">for</span> ( i = 1; i &lt;= r; i++)</div><div class="line">	&#123;</div><div class="line">		p = p*(n - i + 1) / i;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> p;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">print</span></span>() </div><div class="line">&#123;</div><div class="line">	int n, r, t;</div><div class="line">	<span class="keyword">for</span> ( n = 0; n &lt;= N; n++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> ( r = 0; r &lt;= n; r++)</div><div class="line">		&#123;</div><div class="line">			int i;</div><div class="line">			<span class="keyword">if</span>(r==0)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">for</span> ( i = 0;  i &lt;= (N-n);  i++)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"   "</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;<span class="keyword">else</span></div><div class="line">			&#123; </div><div class="line">				cout &lt;&lt; <span class="string">"   "</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%3d"</span>,combi(n, r));</div><div class="line">		&#125;</div><div class="line">		cout &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	<span class="built_in">print</span>();</div><div class="line">	//system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code style="color: #FF0033">结果如下:</code><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/basika.png"></div></div><div class="group-picture-row"></div></div></div></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;得按你想的去生活，否则迟早按你生活的去想&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;打印巴斯卡三角形
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="巴斯卡三角形" scheme="http://yoursite.com/tags/%E5%B7%B4%E6%96%AF%E5%8D%A1%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    
      <category term="杨辉三角" scheme="http://yoursite.com/tags/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
    
  </entry>
  
  <entry>
    <title>把故事酿成醇酒-关东野客《我有故事，你有酒吗？》</title>
    <link href="http://yoursite.com/2017/02/01/gs/"/>
    <id>http://yoursite.com/2017/02/01/gs/</id>
    <published>2017-02-01T02:33:56.000Z</published>
    <updated>2017-02-01T02:50:35.111Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我会在深夜里写字,在你凌晨睡去时，把一段故事写好。</blockquote>读完关东野客《我有故事，你有酒吗？》总觉得要写点什么，就当做是读后感吧。</p>
<blockquote>
<p><code style="color: #FF0033">如果你愿意，在一个四下无人的夜晚，请我喝一杯随便什么牌子的酒吧，让我把故事说给你听。</code></p>
</blockquote>
<p>一生渴望被人收藏，妥善安放，细心保存。免我惊，免我苦，免我四下流离，免我无枝可依。这大概就是大多数人幻想中美好的爱情向往了吧。<br>这个世界上，只要有人，就会有故事，故事之外的人故事着别人的故事，生活着自己的生活，偶尔会为之感动感慨，而只有故事里的人才真正热血沸腾。<a id="more"></a><br>北京西站，南阳与素素因为出身的不同，被父母反对，终无法相守。也许相遇了就是一个错误，终究是敌不过现实的，再美好的爱情都将被岁月磨平棱角，回归当下。<br>阿苏姑娘始终活在男友死去的阴影中，历尽艰辛终走出阴影，在丽江开了酒吧继续生活。这个过程很漫长，爱的如此深沉和真实，让人相信爱情仍是在的。<br>九斤从小学到高中，一直把时间放在小米身上，因为身高差了5cm,但他一直等，终于在多年后等到了小米，但却在等到之前半个月车祸，留下小米一人痛苦于世。<br>倪安斌和刘晓娇的故事结局大概是最好的，两人相互信任，等了刘晓娇4年。终于换来厮守。好的爱情终归是要等一等的。</p>
<blockquote>
<p><code style="color: #FF0033">你在别人眼里可能平凡普通，但你一直是我的信仰。</code></p>
</blockquote>
<p>乔婷因为自己无法生育，因为春阳的一句生个大胖娃娃，毅然错过与春阳的爱情相遇，最后两个人阴阳相隔时打开心扉。想起曾爱过的人，曾经为了爱情，把自己降到尘埃里。当初再怎么也放不下的人，也都随着时光在记忆里慢慢远去。<br>麦瑶与斌九因为表妹一个玩弄，让敏感的麦瑶误会，后来因为斌九的短信“可是麦瑶，咱俩好了这么久了，早已如亲人一般，如果你执意要结婚，也希望你能告诉我地址，至少让我陪你走完婚礼。我想做你娘家人，若是做不了娘家人，当个花童也行啊。”让麦瑶重新回到身边。<br>沈博与丫头的误会，终于在丫头躺在医院前解释清楚之后离世。<br>南犀对杨小白的不挽留，正如七姑娘对中南海先生说，“你太残忍，允许我们相爱，又独断专行的放弃我。我不知道是不是你们所有的男人都这么自私，只要自己认为是对的就执意去做，根本不考虑别人的感受？可是宝宝，我无法怪你，我舍不得……”我想，直白来说这两个姑娘最想听的应该是，如果你不知道以后怎么办，就请在我身边好不好……<br>那菲菲与韩松因为家境，民族不同，无法在一起。我觉得这有点封建了，现在这个时代性别，年龄都不是问题了，更何况是残留的封建思想疙瘩。看看放弃的尚楠照顾当初坚持找他而出车祸的于宁，两个人的相依为命，虽然日子清苦，却也幸福。<br>陈紫云终于找到了她的盖世英雄。想到一句名言，忘记一个人最快的方法，就是找下一个人。<br>故事起承转合。在我们生活的小城里，你高兴时，总有人在你看不见的地方悲伤。每天来来往往的人流和车辆，总会发生一些你不知道的故事。我们没有办法，也不应该去评价故事里的人。这世上的感情太多了，好的坏的，都有它存在的理由，就像有的姑娘爱上了人渣，旁人觉得可惜了这姑娘，但谁都不是那姑娘，爱情就这点好，公平不公平全看自己愿意。所以我们应该只是充当一个过客。见证别人的故事。过程好坏是否值得，全是故事里的人的事情。与我们无关。</p>
<blockquote>
<p><code style="color: #FF0033">你多想有个人会一直住在你的城里，从天光乍破，再到暮雪白头，此生此世不再分离。</code></p>
</blockquote>
<p>这句话跟《从你的全世界路过》那句话相似：</p>
<blockquote>
<p><code style="color: #FF0033">我希望有个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，从山野到书屋，只要最后是你，就好</code></p>
</blockquote>
<p>谁把谁的明媚尽收眼底，<br>谁把谁的难过感同身受。<br>别人的故事到此为止，而我的故事尚未开始。因为我始终相信：别对生活无所期待，别对爱情失去信心，其实哪有那么多十全十美，只不过是不敢再爱罢了。<br><code style="color: #FF0033">愿我的故事能绿水流长，敬我的孤独择日而终。</code></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我会在深夜里写字,在你凌晨睡去时，把一段故事写好。&lt;/blockquote&gt;读完关东野客《我有故事，你有酒吗？》总觉得要写点什么，就当做是读后感吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code style=&quot;color: #FF0033&quot;&gt;如果你愿意，在一个四下无人的夜晚，请我喝一杯随便什么牌子的酒吧，让我把故事说给你听。&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一生渴望被人收藏，妥善安放，细心保存。免我惊，免我苦，免我四下流离，免我无枝可依。这大概就是大多数人幻想中美好的爱情向往了吧。&lt;br&gt;这个世界上，只要有人，就会有故事，故事之外的人故事着别人的故事，生活着自己的生活，偶尔会为之感动感慨，而只有故事里的人才真正热血沸腾。
    
    </summary>
    
      <category term="随手写作" scheme="http://yoursite.com/categories/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
    
      <category term="随手写作" scheme="http://yoursite.com/tags/%E9%9A%8F%E6%89%8B%E5%86%99%E4%BD%9C/"/>
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>2017-1-31：斐波那契数列</title>
    <link href="http://yoursite.com/2017/01/31/sf2/"/>
    <id>http://yoursite.com/2017/01/31/sf2/</id>
    <published>2017-01-31T13:30:34.000Z</published>
    <updated>2017-01-31T13:48:55.891Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我喜欢北方，但我从没去过北方，<br>就像我爱南方，舍不得离开南方一样。<br>所有求之不得的东西，我都舍不得一下子用完，<br>没去的地方留着，没见的人，等着</blockquote></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><code style="color: #FF0033">题目：定义Fibonacci数列如下：<br>f(0)=0;<br>f(1)=1;<br>f(n)=f(n-1)+f(n-2) n&gt;=2;<br>输入n，用最快的方法求该数列的第n项。</code><a id="more"></a></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><code style="color: #FF0033">Fibonacci数列如下：1，1，2，3，5，8，13，21，34，55，89…</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">long Fibonacci(int n)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span>(n == 0)</div><div class="line">		<span class="built_in">return</span> 0;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n == 1)</div><div class="line">		<span class="built_in">return</span> 1;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(n &gt; 1)</div><div class="line">		<span class="built_in">return</span> Fibonacci(n - 1) + Fibonacci(n - 2);</div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">return</span> -1;</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cout &lt;&lt; <span class="string">"输入n值："</span> &lt;&lt; endl;</div><div class="line">	int n;</div><div class="line">	cin &gt;&gt; n;</div><div class="line">	cout&lt;&lt;Fibonacci(n)&lt;&lt;endl;</div><div class="line">	//system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我喜欢北方，但我从没去过北方，&lt;br&gt;就像我爱南方，舍不得离开南方一样。&lt;br&gt;所有求之不得的东西，我都舍不得一下子用完，&lt;br&gt;没去的地方留着，没见的人，等着&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code style=&quot;color: #FF0033&quot;&gt;题目：定义Fibonacci数列如下：&lt;br&gt;f(0)=0;&lt;br&gt;f(1)=1;&lt;br&gt;f(n)=f(n-1)+f(n-2) n&amp;gt;=2;&lt;br&gt;输入n，用最快的方法求该数列的第n项。&lt;/code&gt;
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="费氏数列" scheme="http://yoursite.com/tags/%E8%B4%B9%E6%B0%8F%E6%95%B0%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>2017-1-30：河内之塔</title>
    <link href="http://yoursite.com/2017/01/30/sf1/"/>
    <id>http://yoursite.com/2017/01/30/sf1/</id>
    <published>2017-01-30T13:09:57.000Z</published>
    <updated>2017-01-31T14:00:10.701Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。<a id="more"></a><br><code style="color: #FF0033">我们来把这个故事变成一个算法：</code><br> 把三个柱子标为ABC如果只有一个盘子时，将它直接搬到<code style="color: #FF0033">c</code>；当有两个盘子：<code style="color: #FF0033">A-&gt;B  A-&gt;C B-&gt;C</code>这三个步骤，当有三个盘子时：<code style="color: #FF0033">A-&gt;C A-&gt;B C-&gt;B A-&gt;C B-&gt;A B-&gt;C A-&gt;C</code>。如果有n个盘子，则移动完毕所需的次数为2^n-1。</p>
<h2 id="C-算法代码"><a href="#C-算法代码" class="headerlink" title="C++算法代码"></a>C++算法代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">void hanoi(int n, char A, char B, char C)</div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> (n == 1)</div><div class="line">	&#123;</div><div class="line">		cout &lt;&lt; <span class="string">" Move "</span> &lt;&lt; n &lt;&lt; <span class="string">" from "</span> &lt;&lt; A &lt;&lt; <span class="string">" to "</span> &lt;&lt; C &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		hanoi(n - 1, A, C, B); //把A柱子上第N-1个盘子通过C放到B柱子上</div><div class="line">		cout &lt;&lt; <span class="string">" Move "</span> &lt;&lt; n &lt;&lt; <span class="string">" from "</span> &lt;&lt; A &lt;&lt; <span class="string">" to "</span> &lt;&lt; C &lt;&lt; endl;</div><div class="line">		hanoi(n - 1, B, A, C); //把B上所有盘子通过A放到C上</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	cout &lt;&lt; <span class="string">"请输入盘子数量："</span> &lt;&lt; endl;</div><div class="line">	int n;</div><div class="line">	cin &gt;&gt; n;</div><div class="line">	hanoi(n, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以n=3为例，解释hanoi(int n,char A,char B,char C)方法：</p>
<ol>
<li>执行hanoi（2，A，C，B）-&gt;执行hanoi（1，A，C，B）输出：<br>Move 1 from A to C</li>
<li>n=2的时候执行完hanoi（2，A，C，B），执行cout &lt;&lt; “ Move “ &lt;&lt; n &lt;&lt; “ from “ &lt;&lt; A &lt;&lt; “ to “ &lt;&lt; C &lt;&lt; endl;输出：<br>Move 2 from A to B</li>
<li>执行Hanoi(n - 1, B, A, C);这相当于Hanoi(1,C,A,B)相当于把C柱子上的1盘子放到B上，把A柱子上的最后一个盘子3放到C柱子上，输出：<br>Move 1 from C to B<br>Move 3 from A to C</li>
<li>Hanoi(n - 1, B, A, C);上一个递归我们已经把n-1个盘子放到了B柱子上，这个方法就是把B柱子上的盘子放到C柱子上,也就是Hanoi(2,B,A,C)它再递归.<br>先调用Hanoi(n - 1, A, C, B); 这个时候 的A是B  B为C,C为A. 就是把B上的1盘子放到A柱子上,把B柱子上的2盘子放到C柱子上.输出：<br>Move 1 from B to A<br>Move 2 from B to C</li>
<li>Hanoi(n - 1, B, A, C);也就是Hanoi(1,A,B,C);会把A柱子上的1盘子入到C柱子上去，输出：<br>Move 1 from A to C<br>总共7步。<hr>


</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;河内之塔(Towers of Hanoi)是法国人M.Claus(Lucas)于1883年从泰国带至法国的，河内为越战时北越的首都，即现在的胡志明市；1883年法国数学家Edouard Lucas曾提及这个故事，据说创世纪时Benares有一座波罗教塔，是由三支钻石棒（Pag）所支撑，开始时神在第一根棒上放置64个由上至下依由小至大排列的金盘（Disc），并命令僧侣将所有的金盘从第一根石棒移至第三根石棒，且搬运过程中遵守大盘子在小盘子之下的原则，若每日仅搬一个盘子，则当盘子全数搬运完毕之时，此塔将毁损，而也就是世界末日来临之时。
    
    </summary>
    
      <category term="每日算法" scheme="http://yoursite.com/categories/%E6%AF%8F%E6%97%A5%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="河内之塔" scheme="http://yoursite.com/tags/%E6%B2%B3%E5%86%85%E4%B9%8B%E5%A1%94/"/>
    
  </entry>
  
  <entry>
    <title>模拟银行ATM机</title>
    <link href="http://yoursite.com/2017/01/28/atmdemo/"/>
    <id>http://yoursite.com/2017/01/28/atmdemo/</id>
    <published>2017-01-28T06:51:37.000Z</published>
    <updated>2017-01-28T07:50:46.436Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=293870&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>C++实践选的题目是模拟银行ATM的操作。JAVA实践的时候用NETBEANS 写成界面。</p>
<h3 id="模拟银行ATM机"><a href="#模拟银行ATM机" class="headerlink" title="模拟银行ATM机"></a>模拟银行ATM机</h3><p>查询余额：初始余额为10000元<br>ATM取款：每次取款金额为100的倍数，总额不超过5000元，支取金额不允许透支。<br>ATM存款：不能出现负存款。<br>修改密码：新密码长度不小于6位，不允许出现6位完全相同的情况，只有旧密码正确，新密码符合要求，且两次输入相同的情况下才可以成功修改密码。<a id="more"></a></p>
<h2 id="C-模拟银行ATM机代码"><a href="#C-模拟银行ATM机代码" class="headerlink" title="C++模拟银行ATM机代码"></a>C++模拟银行ATM机代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line"><span class="comment">#include &lt;string&gt;  </span></div><div class="line"><span class="comment">#include &lt;fstream&gt; //读写文件的头文件</span></div><div class="line"><span class="comment">#include &lt;conio.h&gt; //使用该头文件调用函数getch（）可以不回显读取密码</span></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class BankAccount//登陆银行账户类</div><div class="line">&#123;</div><div class="line">private:</div><div class="line">	string account,password;</div><div class="line">	string account1,password1;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">BankAccount</span></span>()</div><div class="line">	&#123;</div><div class="line">		ifstream fopen(<span class="string">"D:\\inf.txt"</span>);//读取D盘inf.txt文件</div><div class="line">		<span class="keyword">if</span> (!fopen)</div><div class="line">		&#123;</div><div class="line">			cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;</div><div class="line">		&#125;</div><div class="line">		string line1,line3;</div><div class="line">		<span class="keyword">while</span> (!fopen.eof()) &#123;   //读取D盘写入的文件</div><div class="line">			getline(fopen, line1); //读取第一行，下面以此类推</div><div class="line">			getline(fopen, account);</div><div class="line">			getline(fopen, line3);</div><div class="line">			getline(fopen, password);</div><div class="line">		&#125;</div><div class="line">		fopen.close();</div><div class="line">		cout &lt;&lt; <span class="string">"********************************************************************"</span> &lt;&lt; endl;//进入ATM的初始界面</div><div class="line">		cout &lt;&lt; <span class="string">"****************$欢迎使用银行ATM自动取款机********************"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"********************************************************************"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"请输入您的银行卡号:"</span>;</div><div class="line">		cin &gt;&gt; account1;</div><div class="line">		cout &lt;&lt; <span class="string">"请输入您的银行密码:"</span>;</div><div class="line">		char p[20],i=0;</div><div class="line">		<span class="keyword">while</span>(p[i]=_getch())//调用getch（）不回显获取密码</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (p[i]!=<span class="string">'\r'</span>)</div><div class="line">			&#123;</div><div class="line">				cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">		&#125;</div><div class="line">		p[i]=<span class="string">'\0'</span>;</div><div class="line">		password1=p;</div><div class="line">		<span class="keyword">if</span> (account == account1 &amp;&amp;  password == password1) &#123;</div><div class="line">			cout &lt;&lt; endl;</div><div class="line">			cout &lt;&lt; <span class="string">"登陆银行账户成功!"</span> &lt;&lt; endl;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			cout &lt;&lt; <span class="string">"\n登陆银行账户失败，请检查您的账户密码是否正确"</span> &lt;&lt; endl;</div><div class="line">			<span class="built_in">exit</span>(0);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;;</div><div class="line">class UI_Display //进去ATM后的UI界面类</div><div class="line">&#123;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">UI_Display</span></span>() &#123;</div><div class="line">		cout &lt;&lt; <span class="string">"--------------------------------"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"请按下列数字执行您所需服务！"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"1.查询余额    2.ATM取款"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"3.ATM存款     4.修改密码"</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"    5.退出银行ATM机    "</span> &lt;&lt; endl;</div><div class="line">		cout &lt;&lt; <span class="string">"--------------------------------"</span> &lt;&lt; endl;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;;</div><div class="line">class FileWriteNReading  //读取文件并且对ATM的各项操作类</div><div class="line">&#123;</div><div class="line">private:</div><div class="line">	int TotalMoney;</div><div class="line">	int num,WithdrawingMoney,Saving;</div><div class="line">	string os, pas1, pas2;</div><div class="line">	string pas;</div><div class="line">	string line1, line2,line3;</div><div class="line">	char l,j,k;</div><div class="line">public:</div><div class="line">	<span class="function"><span class="title">FileWriteNReading</span></span>() &#123;</div><div class="line">		TotalMoney=10000;</div><div class="line">		l=0;j=0;k=0;</div><div class="line">		ifstream fopen(<span class="string">"D:\\inf.txt"</span>);  //读取D盘写入的inf.txt文件的信息</div><div class="line">		<span class="keyword">if</span> (!fopen)</div><div class="line">		&#123;</div><div class="line">			cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span> (!fopen.eof()) &#123;</div><div class="line">			getline(fopen, line1);  //读取第一行信息，下面以此类推。此处的目的是获取密码pas</div><div class="line">			getline(fopen, line2);</div><div class="line">			getline(fopen, line3);</div><div class="line">			getline(fopen, pas);</div><div class="line">		&#125;</div><div class="line">		fopen.close();</div><div class="line">		<span class="keyword">while</span> (1)  //设置死循环</div><div class="line">		&#123;</div><div class="line">			UI_Display();</div><div class="line">			cin &gt;&gt; num;</div><div class="line">			switch (num) //利用switch语句，对要进行的操作进行选择</div><div class="line">			&#123;</div><div class="line">			<span class="keyword">case</span> 1://显示余额</div><div class="line">				show();</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 2://取款操作</div><div class="line">				cout &lt;&lt; <span class="string">"请输入您所需取款的金额且每次取款的金额为100的倍数，总额不超过5000元，不能透支取款:"</span>;</div><div class="line">				cin &gt;&gt; WithdrawingMoney;</div><div class="line">				<span class="keyword">if</span> (WithdrawingMoney % 100 == 0 &amp;&amp; WithdrawingMoney &lt;= 5000 &amp;&amp; WithdrawingMoney &lt;= TotalMoney)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您已取钱成功，取款金额为："</span> &lt;&lt; WithdrawingMoney &lt;&lt; endl;</div><div class="line">					WithdrawingMoney1(WithdrawingMoney);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您取钱失败，请检查输入金额是否为100的倍数或总额是否超过5000元或余额是否充足。"</span> &lt;&lt; endl;</div><div class="line">				&#125;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 3://存款操作</div><div class="line">				cout &lt;&lt; <span class="string">"请输入您所需存款的金额:"</span>;</div><div class="line">				cin &gt;&gt; Saving;</div><div class="line">				<span class="keyword">if</span> (Saving &gt;= 0)</div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您已存钱成功，存钱金额为："</span> &lt;&lt; Saving &lt;&lt; endl;</div><div class="line">					Saving1(Saving);</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"您存钱失败，请检查存入金额"</span>&lt;&lt;endl;</div><div class="line">				&#125;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 4://修改密码操作</div><div class="line">				cout &lt;&lt; <span class="string">"注意新密码不小于6位且不能出现6位数字相同\n"</span>;</div><div class="line">				cout &lt;&lt; <span class="string">"请输入原密码:"</span>;</div><div class="line">				char p[20];</div><div class="line">				<span class="keyword">while</span>(p[l]=_getch()) //对输入的原密码进行不回显输入</div><div class="line">				&#123;</div><div class="line">					<span class="keyword">if</span> (p[l]!=<span class="string">'\r'</span>)</div><div class="line">					&#123;</div><div class="line">						cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">						l++;</div><div class="line">					&#125;</div><div class="line">					<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">				&#125;</div><div class="line">				p[l]=<span class="string">'\0'</span>;</div><div class="line">				os=p;</div><div class="line">				<span class="keyword">if</span> (os == pas)  //如果密码与原来的密码相同，便修改密码成功</div><div class="line">				&#123;</div><div class="line">					cout&lt;&lt;endl;</div><div class="line">					cout &lt;&lt; <span class="string">"请输入修改后的密码:"</span>;</div><div class="line">					char q[20];</div><div class="line">					<span class="keyword">while</span>(q[j]=_getch()) //第一次输入修改后的密码不回显输入</div><div class="line">					&#123;</div><div class="line">						<span class="keyword">if</span> (q[j]!=<span class="string">'\r'</span>)</div><div class="line">						&#123;</div><div class="line">							cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">							j++;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">					&#125;</div><div class="line">						q[j]=<span class="string">'\0'</span>;</div><div class="line">						pas1=q;</div><div class="line">						cout&lt;&lt;endl;</div><div class="line">			cout &lt;&lt; <span class="string">"请再输入修改后的密码:"</span>;//第二次输入修改后的密码不回显输入</div><div class="line">			char r[20];</div><div class="line">			<span class="keyword">while</span>(r[k]=_getch())</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (r[k]!=<span class="string">'\r'</span>)</div><div class="line">				&#123;</div><div class="line">				cout &lt;&lt; <span class="string">"*"</span>;</div><div class="line">				k++;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span> &#123;<span class="built_in">break</span>;&#125;</div><div class="line">			&#125;</div><div class="line">			r[k]=<span class="string">'\0'</span>;</div><div class="line">			pas2=r;</div><div class="line">			cout&lt;&lt;endl;</div><div class="line">						<span class="keyword">if</span> (pas1 == pas2) //对密码进行限制</div><div class="line">						&#123;</div><div class="line">							int n;//将string的密码转换成int类型</div><div class="line">							n = atoi(pas1.c_str());</div><div class="line">							<span class="keyword">if</span> (n &gt; 999999 || n &lt; 99999) //保证密码是6位</div><div class="line">							&#123;</div><div class="line">								cout &lt;&lt; <span class="string">"请确认密码为6位！！\n"</span>;</div><div class="line">								<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							//保证6位密码不相同</div><div class="line">							<span class="keyword">else</span> <span class="keyword">if</span> (n == 000000 || n == 111111 || n == 222222 || n == 333333 || n == 444444 || n == 555555 || n == 666666 || n == 777777 || n == 888888)</div><div class="line">							&#123;</div><div class="line">								cout &lt;&lt; <span class="string">"请确认密码不允许6位相同！！\n"</span>;</div><div class="line">								<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							//保证原密码与新修改后的密码不相同</div><div class="line">							<span class="keyword">else</span> <span class="keyword">if</span> (n == 123456) &#123; cout &lt;&lt; <span class="string">"修改密码失败，你的密码与原密码相同！"</span>&lt;&lt;endl;  </div><div class="line">							<span class="built_in">break</span>;</div><div class="line">							&#125;</div><div class="line">							<span class="keyword">else</span></div><div class="line">							&#123;	</div><div class="line">								cout &lt;&lt; <span class="string">"密码修改成功,请重新登陆账号！"</span> &lt;&lt; endl;</div><div class="line">								ofstream fout(<span class="string">"D:\\inf.txt"</span>); //密码修改成功后，重新对用户信息写入inf.txt</div><div class="line">								<span class="keyword">if</span> (!fout)</div><div class="line">								&#123;</div><div class="line">									cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;</div><div class="line">								&#125;</div><div class="line">								fout &lt;&lt; <span class="string">"该用户的账户为:"</span> &lt;&lt; endl &lt;&lt; line2 &lt;&lt; endl &lt;&lt; <span class="string">"该用户的密码为:"</span> &lt;&lt; endl &lt;&lt; pas1;</div><div class="line">								fout.close();</div><div class="line">								BankAccount();//再次调用输入账户类</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">						<span class="keyword">else</span></div><div class="line">						&#123;</div><div class="line">							cout &lt;&lt; <span class="string">"密码修改失败，请检查两次输入的密码是否一致。"</span>&lt;&lt;endl;</div><div class="line">							<span class="built_in">break</span>;</div><div class="line">						&#125;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">else</span></div><div class="line">				&#123;</div><div class="line">					cout &lt;&lt; <span class="string">"\n原密码输入错误，请检查！"</span> &lt;&lt; endl &lt;&lt; endl;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			<span class="keyword">case</span> 5://额外增加的选项，以便跳出死循环</div><div class="line">				cout&lt;&lt;<span class="string">"你已退出系统账户！"</span>&lt;&lt;endl;</div><div class="line">				<span class="built_in">exit</span>(0);</div><div class="line">			default:</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	</div><div class="line">	&#125;</div><div class="line">	void WithdrawingMoney1(int WithdrawingMoney)&#123;TotalMoney -= WithdrawingMoney;&#125;//取款数额</div><div class="line">	void Saving1(int Saving)&#123;TotalMoney += Saving;&#125;//存款数额</div><div class="line">	void <span class="function"><span class="title">show</span></span>()&#123;cout&lt;&lt;<span class="string">"你的账户余额为"</span>&lt;&lt;TotalMoney&lt;&lt;<span class="string">"元"</span>&lt;&lt;endl;&#125;//显示账户余额</div><div class="line">&#125;;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	ofstream fout(<span class="string">"D:\\inf.txt"</span>);//第一次写入D盘文件inf.txt</div><div class="line">	<span class="keyword">if</span> (!fout)</div><div class="line">	&#123;</div><div class="line">		cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;</div><div class="line">	&#125;</div><div class="line">	fout &lt;&lt; <span class="string">"该用户的账号为:\n"</span> &lt;&lt; <span class="string">"123456"</span> &lt;&lt; endl &lt;&lt; <span class="string">"该用户的密码为:\n"</span> &lt;&lt; <span class="string">"123456"</span> &lt;&lt; endl;//对用户的初始账户密码进行设置</div><div class="line">	fout.close();</div><div class="line">	BankAccount();//调用用户账户类</div><div class="line">	FileWriteNReading();//调用文件读写类</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p> <code style="color: #FF0033">此代码在VS2015上正常运行~运行效果图:</code><br>  <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/cpic.png" class="full-image"></div></div><div class="group-picture-row"></div></div></div></p>
<h2 id="netbeans写可视化界面模拟银行ATM"><a href="#netbeans写可视化界面模拟银行ATM" class="headerlink" title="netbeans写可视化界面模拟银行ATM"></a>netbeans写可视化界面模拟银行ATM</h2><h3 id="1-使用泛型，获取任何类型的账户密码余额"><a href="#1-使用泛型，获取任何类型的账户密码余额" class="headerlink" title="1.使用泛型，获取任何类型的账户密码余额"></a><code style="color: #FF0033">1.使用泛型，获取任何类型的账户密码余额</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">public class ATM&lt;A,P,B&gt; &#123;</div><div class="line">    private A account;</div><div class="line">    private P password;</div><div class="line">    private B balance;</div><div class="line">    public ATM(A account,P password,B balance)&#123;</div><div class="line">        this.setElem1(account);</div><div class="line">        this.setElem2(password);</div><div class="line">        this.setElem3(balance);</div><div class="line">    &#125;</div><div class="line">   public A <span class="function"><span class="title">getElem1</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> account;</div><div class="line">   &#125;</div><div class="line">   public void <span class="built_in">set</span>Elem1(A account)&#123;</div><div class="line">       this.account=account;</div><div class="line">   &#125;</div><div class="line">    public P <span class="function"><span class="title">getElem2</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> password;</div><div class="line">   &#125;</div><div class="line">    public void <span class="built_in">set</span>Elem2(P password)&#123;</div><div class="line">       this.password=password;</div><div class="line">   &#125;</div><div class="line">     public B <span class="function"><span class="title">getElem3</span></span>()&#123;</div><div class="line">       <span class="built_in">return</span> balance;</div><div class="line">   &#125;</div><div class="line">     public void <span class="built_in">set</span>Elem3(B balance)&#123;</div><div class="line">       this.balance=balance;</div><div class="line">   &#125;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        ATMDBCon.JDBCon();</div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="2-JDBC连接数据库sql-server"><a href="#2-JDBC连接数据库sql-server" class="headerlink" title="2.JDBC连接数据库sql server"></a><code style="color: #FF0033">2.JDBC连接数据库sql server</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">import java.sql.*;</div><div class="line">import java.util.*;</div><div class="line"></div><div class="line">public class ATMDBCon &#123;</div><div class="line">    //创建数据库连接的方法(JDBC)</div><div class="line">    public static Connection <span class="function"><span class="title">JDBCon</span></span>()&#123;</div><div class="line">        try&#123;</div><div class="line">            //--2 加载驱动程序</div><div class="line">              Class.forName(<span class="string">"com.microsoft.sqlserver.jdbc.SQLServerDriver"</span>);</div><div class="line">            // --3 创建连接</div><div class="line">              String url=<span class="string">"jdbc:sqlserver://localhost:1433; databaseName=ATMDB"</span>;</div><div class="line">              Connection conn=DriverManager.getConnection(url,<span class="string">"sa"</span>,<span class="string">""</span>);</div><div class="line">              System.out.println(<span class="string">"数据库连接成功"</span>);</div><div class="line">              <span class="built_in">return</span> conn;</div><div class="line">        &#125;catch(ClassNotFoundException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据库驱动程序找不到"</span>);</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据库连接失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">  //--查询数据的方法</div><div class="line">    public static Vector queryData(String sql)&#123;</div><div class="line">        Connection conn=JDBCon();</div><div class="line">        try&#123;</div><div class="line">            //创建会话对象</div><div class="line">            Statement stmt=conn.createStatement();</div><div class="line">            ResultSet rs=stmt.executeQuery(sql);</div><div class="line">            Vector data=new Vector();</div><div class="line">            <span class="keyword">while</span>(rs.next())&#123;</div><div class="line">                String account=rs.getObject(1).toString();</div><div class="line">                String password=rs.getObject(2).toString();</div><div class="line">                String balance=rs.getObject(3).toString();</div><div class="line">                ATM&lt;String,String,String&gt; stu=new ATM&lt;String,String,String&gt;(account,password,balance);</div><div class="line">                data.add(stu);</div><div class="line">            &#125;</div><div class="line">            //关闭</div><div class="line">            rs.close();</div><div class="line">            stmt.close();</div><div class="line">            conn.close();</div><div class="line">            <span class="built_in">return</span> data;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据访问失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //--更新数据的方法(insert,update,delete)</div><div class="line">    public static boolean updateData(String sql)&#123;</div><div class="line">        Connection conn=JDBCon();</div><div class="line">        try&#123;</div><div class="line">            //创建会话对象</div><div class="line">            Statement stmt=conn.createStatement();</div><div class="line">            //执行SQL语句，返回受影响的行数</div><div class="line">            int r=stmt.executeUpdate(sql);</div><div class="line">            stmt.close();</div><div class="line">            conn.close();</div><div class="line">            <span class="keyword">if</span>(r&gt;0)&#123;</div><div class="line">                <span class="built_in">return</span> <span class="literal">true</span>;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;catch(SQLException ex)&#123;</div><div class="line">            System.out.println(<span class="string">"数据更新失败"</span>);</div><div class="line">            ex.printStackTrace();</div><div class="line">            <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="3-获取数据库登陆信息-如果账号密码都为123456则登陆成功"><a href="#3-获取数据库登陆信息-如果账号密码都为123456则登陆成功" class="headerlink" title="3.获取数据库登陆信息~如果账号密码都为123456则登陆成功"></a><code style="color: #FF0033">3.获取数据库登陆信息~如果账号密码都为123456则登陆成功</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// TODO add your handling code here:</div><div class="line">account=txtAccount.getText();</div><div class="line">password=txtPassword.getText();</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line"><span class="keyword">if</span>(account.equals(atm.getElem1())&amp;&amp;password.equals(atm.getElem2()))&#123;</div><div class="line">     ATMDemo frame=new ATMDemo();</div><div class="line">     frame.setVisible(<span class="literal">true</span>);</div><div class="line">     this.dispose();</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    JOptionPane.showMessageDialog(null,<span class="string">"账号或密码错误！"</span>,<span class="string">"系统提示"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">    txtAccount.setText(<span class="string">""</span>);</div><div class="line">    txtPassword.setText(<span class="string">""</span>);</div><div class="line">    txtAccount.requestFocus();//选中密码框</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="4-获取数据库余额"><a href="#4-获取数据库余额" class="headerlink" title="4.获取数据库余额"></a><code style="color: #FF0033">4.获取数据库余额</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">// ATM atm=(ATM)data.get(0);   </div><div class="line"> JOptionPane.showMessageDialog(null,<span class="string">"Your current account balance is "</span>+atm.getElem3()+<span class="string">" yuan"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div></pre></td></tr></table></figure>
<h3 id="5-按照存款的要求进行存款"><a href="#5-按照存款的要求进行存款" class="headerlink" title="5.按照存款的要求进行存款"></a><code style="color: #FF0033">5.按照存款的要求进行存款</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">String str=txtgetdeposit.getText();</div><div class="line">      data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">      //ATM atm=(ATM)data.get(0);</div><div class="line">       ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">      int j=Integer.parseInt(atm.getElem3());</div><div class="line">      int i;</div><div class="line">      String sql=<span class="string">""</span>;</div><div class="line">      <span class="keyword">if</span>(str!=null)&#123;</div><div class="line">           try&#123;</div><div class="line">               i=Integer.parseInt(str);</div><div class="line">               <span class="keyword">if</span>(i%100==0 &amp;&amp; i&gt;0)&#123;</div><div class="line">                  int k=i+j;  </div><div class="line">                  sql=<span class="string">"update userinfo SET balance="</span>+k+<span class="string">""</span>;</div><div class="line">                  ATMDBCon.updateData(sql);</div><div class="line">                  JOptionPane.showMessageDialog(null,<span class="string">"Deposit success"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                  dispose();</div><div class="line">                  ATMDemo frame=new ATMDemo();</div><div class="line">                  frame.setVisible(<span class="literal">true</span>);</div><div class="line">               &#125;<span class="keyword">else</span>&#123;</div><div class="line">                   JOptionPane.showMessageDialog(null,<span class="string">"Please enter an integer of 100!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                   txtgetdeposit.setText(<span class="string">""</span>);</div><div class="line">               &#125;</div><div class="line">           &#125;catch(NumberFormatException e)&#123;</div><div class="line">               JOptionPane.showMessageDialog(null,<span class="string">"Please enter the correct deposit amount!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">           &#125;      </div><div class="line">      &#125;</div></pre></td></tr></table></figure>
<h3 id="6-按照取款的要求进行取款"><a href="#6-按照取款的要求进行取款" class="headerlink" title="6.按照取款的要求进行取款"></a><code style="color: #FF0033">6.按照取款的要求进行取款</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">String str=txtwithdraw.getText();</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line">int j=Integer.parseInt(atm.getElem3());</div><div class="line">int i;</div><div class="line">String sql=<span class="string">""</span>;</div><div class="line"><span class="keyword">if</span>(str!=null)&#123;</div><div class="line">    try&#123;</div><div class="line">        i=Integer.parseInt(str);</div><div class="line">        <span class="keyword">if</span>(i&lt;=5000 &amp;&amp; i&lt;=j &amp;&amp; i%100==0 &amp;&amp; i&gt;0)&#123;</div><div class="line">            int k=j-i;</div><div class="line">            sql=<span class="string">"update userinfo SET balance="</span>+k+<span class="string">""</span>;</div><div class="line">            ATMDBCon.updateData(sql);</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Withdraw success"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">            ATMDemo frame=new ATMDemo();</div><div class="line">            frame.setVisible(<span class="literal">true</span>);</div><div class="line">            dispose();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Please enter an integer of 100 or below 5000 or less than total amount!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">            txtwithdraw.setText(<span class="string">""</span>);</div></pre></td></tr></table></figure>
<h3 id="7-修改密码操作"><a href="#7-修改密码操作" class="headerlink" title="7.修改密码操作"></a><code style="color: #FF0033">7.修改密码操作</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">String oldpas=txtoldpas.getText();</div><div class="line">String newpas=txtnewpas.getText();</div><div class="line">String newpas1=txtnewpas1.getText();</div><div class="line">String k;</div><div class="line">data=ATMDBCon.queryData(<span class="string">"select * from userinfo"</span>);</div><div class="line">//ATM atm=(ATM)data.get(0);</div><div class="line"> ATM&lt;String,String,String&gt; atm=(ATM&lt;String,String,String&gt;)data.get(0);</div><div class="line"> String m=atm.getElem1();</div><div class="line"> String n=atm.getElem2();</div><div class="line"> </div><div class="line">String sql=<span class="string">""</span>;</div><div class="line"><span class="keyword">if</span>(oldpas!=null &amp;&amp; newpas!=null &amp;&amp; newpas1 !=null)&#123;</div><div class="line">    <span class="keyword">if</span>(oldpas.equals(atm.getElem2()))&#123;</div><div class="line">        try&#123;</div><div class="line">            int i=Integer.parseInt(newpas);</div><div class="line">            int j=Integer.parseInt(newpas1);</div><div class="line">            <span class="keyword">if</span>(i==j)&#123;</div><div class="line">                <span class="keyword">if</span>(i!=Integer.parseInt(oldpas) &amp;&amp; i&lt;999999 &amp;&amp;i&gt;99999 &amp;&amp; i!=111111 &amp;&amp; i!=22222 &amp;&amp; i!=333333 &amp;&amp; i!=444444 &amp;&amp; i!=555555 &amp;&amp; i!= 666666 &amp;&amp; i!= 777777 &amp;&amp; i!= 888888)&#123;  </div><div class="line">                    k=String.valueOf(j);</div><div class="line">                    sql=<span class="string">"update userinfo SET password='"</span>+k+<span class="string">"'"</span>;</div><div class="line">                    ATMDBCon.updateData(sql);</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Modify password success!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    try&#123;</div><div class="line">                            FileOutputStream f=new FileOutputStream(<span class="string">"D:\\info.txt"</span>);//构造FileInputStream对象</div><div class="line">                            ObjectOutputStream out=new ObjectOutputStream(f);//构造ObjectInputStream对象</div><div class="line">                            modifypas stu=new modifypas(atm.getElem1(),n,k);//使用ObjectInputStream对象的<span class="built_in">read</span>Obect（）方法进行序列化</div><div class="line">                            out.writeObject(stu);//使用ObjectOutStream对象的writeObject（）方法进行序列化</div><div class="line">                            out.close();//关闭ObjectOutSteram对象</div><div class="line">                            f.close();//关闭FileOutputStream对象</div><div class="line">                        &#125;catch(IOException e)&#123;</div><div class="line">                        e.printStackTrace();</div><div class="line">                        &#125;</div><div class="line">                     System.out.println(<span class="string">"序列化完毕"</span>);</div><div class="line">      		try&#123;</div><div class="line">                            FileInputStream f=new FileInputStream(<span class="string">"D:\\info.txt"</span>);//构造FileInputStream对象</div><div class="line">                            ObjectInputStream <span class="keyword">in</span> = new ObjectInputStream(f);//构造ObjectInputStream对象</div><div class="line">                            modifypas stu1=(modifypas)in.readObject();//使用ObjectInputStream对象的<span class="built_in">read</span>Obect（）方法进行反序列化</div><div class="line">                            System.out.println(stu1.toString());</div><div class="line">                            //System.out.println(<span class="string">"----------------------------"</span>);</div><div class="line">                            //System.out.println(<span class="string">"卡号："</span>+stu1.account1+<span class="string">";密码："</span>+stu1.password1+<span class="string">";修改后的密码："</span>+stu1.password2);</div><div class="line">                            in.close();//关闭ObjectOutSteram对象</div><div class="line">                            f.close();//关闭FileOutputStream对象</div><div class="line">                           &#125;catch(ClassNotFoundException e)&#123;</div><div class="line">                                    e.printStackTrace();</div><div class="line">                           &#125;catch(IOException e)&#123;</div><div class="line">                                    e.printStackTrace();</div><div class="line">                           &#125;</div><div class="line">                    System.out.println(<span class="string">"反序列化完毕"</span>);</div><div class="line">                    dispose();</div><div class="line">                    Login frame=new Login();</div><div class="line">                    frame.setVisible(<span class="literal">true</span>);</div><div class="line">                    //<span class="built_in">set</span>DefaultCloseOperation(ATMDemo.DISPOSE_ON_CLOSE)</div><div class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i==Integer.parseInt(oldpas))&#123;</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Old and New passwords are same!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                    txtoldpas.requestFocus();</div><div class="line">                &#125;<span class="keyword">else</span>&#123;</div><div class="line">                    JOptionPane.showMessageDialog(null,<span class="string">"Password is not six or password identical!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                    txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                    txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                    txtoldpas.requestFocus();</div><div class="line">               &#125;</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                JOptionPane.showMessageDialog(null,<span class="string">"Two input passwords are not the same!!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">            &#125;</div><div class="line">        &#125;catch(NumberFormatException e)&#123;</div><div class="line">            JOptionPane.showMessageDialog(null,<span class="string">"Please enter a digital password!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">else</span>&#123;</div><div class="line">         JOptionPane.showMessageDialog(null,<span class="string">"Old Password error!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">                txtoldpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas.setText(<span class="string">""</span>);</div><div class="line">                txtnewpas1.setText(<span class="string">""</span>);</div><div class="line">                txtoldpas.requestFocus();</div><div class="line">    &#125;</div><div class="line">&#125;<span class="keyword">else</span>&#123;</div><div class="line">    JOptionPane.showMessageDialog(null,<span class="string">"Please input a password!"</span>,<span class="string">"information"</span>,JOptionPane.INFORMATION_MESSAGE);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="8-按回车登录事件在构造函数处添加以下代码即可"><a href="#8-按回车登录事件在构造函数处添加以下代码即可" class="headerlink" title="8.按回车登录事件在构造函数处添加以下代码即可"></a><code style="color: #FF0033">8.按回车登录事件</code>在构造函数处添加以下代码即可</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">      getRootPane().setDefaultButton(btnLogin);</div><div class="line">&lt;!-- btnLogin表示登陆按钮的名称，存取款修改密码类似 --&gt;</div></pre></td></tr></table></figure>
<h3 id="附上界面图："><a href="#附上界面图：" class="headerlink" title="附上界面图："></a><code style="color: #FF0033">附上界面图：</code></h3> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/uploads/atmnetpic.png"></div><div class="group-picture-column" style="width: 50%;"><img src="/uploads/atmnetpic1.png"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 100%;"><img src="/uploads/atmnetpic2.png"></div></div></div></div>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=293870&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;C++实践选的题目是模拟银行ATM的操作。JAVA实践的时候用NETBEANS 写成界面。&lt;/p&gt;
&lt;h3 id=&quot;模拟银行ATM机&quot;&gt;&lt;a href=&quot;#模拟银行ATM机&quot; class=&quot;headerlink&quot; title=&quot;模拟银行ATM机&quot;&gt;&lt;/a&gt;模拟银行ATM机&lt;/h3&gt;&lt;p&gt;查询余额：初始余额为10000元&lt;br&gt;ATM取款：每次取款金额为100的倍数，总额不超过5000元，支取金额不允许透支。&lt;br&gt;ATM存款：不能出现负存款。&lt;br&gt;修改密码：新密码长度不小于6位，不允许出现6位完全相同的情况，只有旧密码正确，新密码符合要求，且两次输入相同的情况下才可以成功修改密码。
    
    </summary>
    
      <category term="ATM" scheme="http://yoursite.com/categories/ATM/"/>
    
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="ATM" scheme="http://yoursite.com/tags/ATM/"/>
    
  </entry>
  
  <entry>
    <title>Java仿QQ聊天实现</title>
    <link href="http://yoursite.com/2017/01/16/qq/"/>
    <id>http://yoursite.com/2017/01/16/qq/</id>
    <published>2017-01-16T08:14:58.000Z</published>
    <updated>2017-01-16T10:17:51.740Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">你交回录取通知书，忘了十年寒窗~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=431554226&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>利用网络编程仿照QQ聊天实现的代码。<br><a id="more"></a></p>
<h2 id="客户端代码"><a href="#客户端代码" class="headerlink" title="客户端代码"></a>客户端代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">import java.io.*;</div><div class="line">import java.net.*;</div><div class="line">import java.util.Date;</div><div class="line">public class ClientDemo &#123;</div><div class="line">	 public static void main(String[] args)throws IOException &#123;</div><div class="line">	  Socket serverSocket=null;</div><div class="line">	  PrintWriter <span class="built_in">print</span>Writer=null;</div><div class="line">	  BufferedReader serverBufferedReader=null;</div><div class="line">	  boolean runable=<span class="literal">true</span>;</div><div class="line">	  String toServer;</div><div class="line">	  try&#123;</div><div class="line">		   serverSocket=new Socket(<span class="string">"127.0.0.1"</span>,1234);</div><div class="line">		   <span class="built_in">print</span>Writer=new PrintWriter(serverSocket.getOutputStream(),<span class="literal">true</span>);</div><div class="line">		   serverBufferedReader=new BufferedReader(new InputStreamReader(serverSocket.getInputStream()));</div><div class="line">		  &#125;catch(UnknownHostException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"找不到服务器"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"不能获得Socket的读入与写出器"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		  &#125;</div><div class="line">	  BufferedReader keyBufferedReader=new BufferedReader(new InputStreamReader(System.in));</div><div class="line">	  <span class="built_in">print</span>Writer.println(<span class="string">"新的用户登录"</span>);</div><div class="line">	  ReadServerThread <span class="built_in">read</span>ServerThread=new ReadServerThread(serverBufferedReader);</div><div class="line">	  <span class="built_in">read</span>ServerThread.start();</div><div class="line">	  <span class="keyword">while</span>(runable)&#123;</div><div class="line">		   Date d=new Date();</div><div class="line">		   toServer=keyBufferedReader.readLine();</div><div class="line">		   <span class="built_in">print</span>Writer.println(toServer+<span class="string">"\t"</span>+d.getHours()+<span class="string">":"</span>+d.getMinutes()+<span class="string">":"</span>+d.getSeconds());</div><div class="line">		   <span class="keyword">if</span>(toServer.equals(<span class="string">"bye."</span>))<span class="built_in">break</span>;</div><div class="line">		   runable=<span class="built_in">read</span>ServerThread.runable;</div><div class="line">	  &#125;</div><div class="line">	  <span class="built_in">read</span>ServerThread.fromServer=<span class="string">"欢迎下次再来"</span>;</div><div class="line">	  <span class="built_in">read</span>ServerThread.runable=<span class="literal">false</span>;</div><div class="line">	  <span class="built_in">print</span>Writer.close();</div><div class="line">	  serverBufferedReader.close();</div><div class="line">	  keyBufferedReader.close();</div><div class="line">	  serverSocket.close();</div><div class="line">	 &#125;</div><div class="line">&#125;</div><div class="line">class ReadServerThread extends Thread&#123;</div><div class="line">	 BufferedReader <span class="keyword">in</span>=null;</div><div class="line">	 String fromServer=<span class="string">""</span>;</div><div class="line">	 boolean runable=<span class="literal">true</span>;</div><div class="line">	 public ReadServerThread(BufferedReader <span class="keyword">in</span>)&#123;</div><div class="line">	  this.in=<span class="keyword">in</span>;</div><div class="line"> &#125;</div><div class="line">public void <span class="function"><span class="title">run</span></span>()&#123;</div><div class="line">  <span class="keyword">while</span>(runable)&#123;</div><div class="line">	   try&#123;</div><div class="line">		    fromServer=in.readLine();</div><div class="line">		   &#125;catch(Exception e)&#123;</div><div class="line">		    runable=<span class="literal">false</span>;</div><div class="line">		   &#125;</div><div class="line">		   <span class="keyword">if</span>(fromServer.equals(<span class="string">"bye."</span>))&#123;</div><div class="line">		    System.out.println(<span class="string">"客户端退出"</span>);</div><div class="line">		    runable=<span class="literal">false</span>;</div><div class="line">		    <span class="built_in">break</span>;</div><div class="line">	   &#125;</div><div class="line">	   System.out.println(<span class="string">"客户端："</span>+fromServer);</div><div class="line">	  &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="服务端代码"><a href="#服务端代码" class="headerlink" title="服务端代码"></a>服务端代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">import java.net.*;</div><div class="line">import java.util.Date;</div><div class="line">import java.io.*;</div><div class="line">public class ServerDemo &#123;</div><div class="line">	 public static void main(String[] args)throws IOException&#123;</div><div class="line">	  String toClient;</div><div class="line">	  PrintWriter clientPrintWriter=null;</div><div class="line">	  BufferedReader clientBufferedReader=null;</div><div class="line">	  boolean runable=<span class="literal">true</span>;</div><div class="line">	  ServerSocket serverSocket=null;</div><div class="line">	  try&#123;</div><div class="line">		   serverSocket=new ServerSocket(1234);</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"不能创建1234端口"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(0);</div><div class="line">		   &#125;</div><div class="line">	  Socket clientSocket=null;</div><div class="line">	  try&#123;</div><div class="line">		   clientSocket=serverSocket.accept();</div><div class="line">		  &#125;catch(IOException e)&#123;</div><div class="line">		   System.err.println(<span class="string">"访问端口失败"</span>);</div><div class="line">		   e.printStackTrace();</div><div class="line">		   System.exit(1);</div><div class="line">		  &#125;</div><div class="line">	  clientPrintWriter=new PrintWriter(clientSocket.getOutputStream(),<span class="literal">true</span>);</div><div class="line">	  clientBufferedReader=new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));</div><div class="line">	  BufferedReader keyBufferedReader=new BufferedReader(new InputStreamReader(System.in));</div><div class="line">	  toClient=<span class="string">"你好，欢迎你！"</span>;</div><div class="line">	  clientPrintWriter.println(toClient);</div><div class="line">	  ReadClientThread <span class="built_in">read</span>ClientThread=new ReadClientThread(clientBufferedReader);</div><div class="line">	  <span class="built_in">read</span>ClientThread.start();</div><div class="line">		  <span class="keyword">while</span>(runable)&#123;</div><div class="line">		   Date d=new Date();</div><div class="line">		   toClient=keyBufferedReader.readLine();</div><div class="line">		   clientPrintWriter.println(toClient+<span class="string">"\t"</span>+d.getHours()+<span class="string">":"</span>+d.getMinutes()+<span class="string">":"</span>+d.getSeconds());</div><div class="line">		   <span class="keyword">if</span>(toClient.equals(<span class="string">"bye."</span>))<span class="built_in">break</span>;</div><div class="line">		   runable=<span class="built_in">read</span>ClientThread.runable;</div><div class="line">		  &#125;</div><div class="line">	  <span class="built_in">read</span>ClientThread.fromClient=<span class="string">"欢迎下次再来。"</span>;</div><div class="line">	  <span class="built_in">read</span>ClientThread.runable=<span class="literal">false</span>;</div><div class="line">	  clientPrintWriter.close();</div><div class="line">	  keyBufferedReader.close();</div><div class="line">	  serverSocket.close();</div><div class="line">	 &#125;</div><div class="line">&#125;</div><div class="line">class ReadClientThread extends Thread&#123;</div><div class="line">	 BufferedReader bufferedReader=null;</div><div class="line">	 String fromClient=<span class="string">""</span>;</div><div class="line">	 boolean runable=<span class="literal">true</span>;</div><div class="line">	 public ReadClientThread(BufferedReader <span class="keyword">in</span>)&#123;</div><div class="line">	  this.bufferedReader=<span class="keyword">in</span>;</div><div class="line">	 &#125;</div><div class="line">	 public void <span class="function"><span class="title">run</span></span>()&#123;</div><div class="line">		  <span class="keyword">while</span>(runable)&#123;</div><div class="line">			   try&#123;</div><div class="line">			    fromClient=bufferedReader.readLine();</div><div class="line">			   &#125;catch(Exception e)&#123;</div><div class="line">			    runable=<span class="literal">false</span>;</div><div class="line">			   &#125;</div><div class="line">			   <span class="keyword">if</span>(fromClient.equals(<span class="string">"bye."</span>))&#123;</div><div class="line">			    System.out.println(<span class="string">"客户端退出"</span>);</div><div class="line">			    runable=<span class="literal">false</span>;</div><div class="line">			    <span class="built_in">break</span>;</div><div class="line">			   &#125;</div><div class="line">		   System.out.println(<span class="string">"客户端："</span>+fromClient);</div><div class="line">		  &#125;</div><div class="line">	 &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行工具为eclipse 2014，结果如下：<br><img src="/uploads/qqtes.png" class="full-image"></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;你交回录取通知书，忘了十年寒窗~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=431554226&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;利用网络编程仿照QQ聊天实现的代码。&lt;br&gt;
    
    </summary>
    
      <category term="JAVA" scheme="http://yoursite.com/categories/JAVA/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="qq" scheme="http://yoursite.com/tags/qq/"/>
    
      <category term="网络编程" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>二分搜索技术</title>
    <link href="http://yoursite.com/2017/01/16/binarysearch/"/>
    <id>http://yoursite.com/2017/01/16/binarysearch/</id>
    <published>2017-01-16T08:14:58.000Z</published>
    <updated>2017-01-16T09:18:30.259Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">去不了的地方叫远方，回不去的是故乡~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=440796923&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>二分搜索技术是算法里面最简单的查找一个数所在位置的算法。</p>
<h2 id="二分搜索技术"><a href="#二分搜索技术" class="headerlink" title="二分搜索技术"></a>二分搜索技术</h2><h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><p>每执行一次算法的while循环，待搜索数组的大小减少一半，因此在最坏情况下，while循环被执行了O（logn）次。<br>在循环体内运算需要O（1）时间，因此整个算法在最坏的情况下的计算时间复杂性为O（logn).<br><a id="more"></a></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;          </span></div><div class="line">using namespace std;</div><div class="line">template&lt;class Type&gt;            //在已经排好序的a[0]~a[n-1]当中搜索x</div><div class="line">int BinarySearch(Type a[], const Type&amp;x, int n)&#123;</div><div class="line">	int left = 0;</div><div class="line">	int right = n - 1;</div><div class="line">	<span class="keyword">while</span> (left&lt;=right)</div><div class="line">	&#123;</div><div class="line">		int middle = (left + right) / 2;</div><div class="line">		<span class="keyword">if</span> (x==a[middle])</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">return</span> middle;//返回x所在数组a的位置</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (x&gt;a[middle])</div><div class="line">		&#123;</div><div class="line">			left = middle + 1;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			right = middle - 1;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> -1;//如果不存在，返回-1</div><div class="line">&#125;</div><div class="line">int <span class="function"><span class="title">main</span></span>() &#123;</div><div class="line">	char m = 4;</div><div class="line">	//cout &lt;&lt; m&lt;&lt;endl;</div><div class="line">	char y[5] = &#123; 1,2,3,4&#125;;</div><div class="line">	int w=4;</div><div class="line">	w = BinarySearch(y, m, w);</div><div class="line">	cout &lt;&lt; w&lt;&lt;endl;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;去不了的地方叫远方，回不去的是故乡~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=440796923&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;二分搜索技术是算法里面最简单的查找一个数所在位置的算法。&lt;/p&gt;
&lt;h2 id=&quot;二分搜索技术&quot;&gt;&lt;a href=&quot;#二分搜索技术&quot; class=&quot;headerlink&quot; title=&quot;二分搜索技术&quot;&gt;&lt;/a&gt;二分搜索技术&lt;/h2&gt;&lt;h3 id=&quot;复杂度&quot;&gt;&lt;a href=&quot;#复杂度&quot; class=&quot;headerlink&quot; title=&quot;复杂度&quot;&gt;&lt;/a&gt;复杂度&lt;/h3&gt;&lt;p&gt;每执行一次算法的while循环，待搜索数组的大小减少一半，因此在最坏情况下，while循环被执行了O（logn）次。&lt;br&gt;在循环体内运算需要O（1）时间，因此整个算法在最坏的情况下的计算时间复杂性为O（logn).&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/algorithm/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c++" scheme="http://yoursite.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>PS,AI设计</title>
    <link href="http://yoursite.com/2017/01/14/photo/"/>
    <id>http://yoursite.com/2017/01/14/photo/</id>
    <published>2017-01-14T12:57:40.000Z</published>
    <updated>2017-01-16T10:22:38.425Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">我希望有一个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，由山野到书屋，只要最后是你就好。</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=26427666&auto=0&height=66"></iframe></p>
<h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>之前用PS和AI等工具设计了很多海报和图片，暂时找到这么多，存着。<a id="more"></a><br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/uploads/img_1.jpg"></div><div class="group-picture-column" style="width: 50%;"><img src="/uploads/img_2.jpg"></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_3.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_4.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_5.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_6.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_7.jpg"></div><div class="group-picture-column" style="width: 16.666666666666668%;"><img src="/uploads/img_8.jpg"></div></div></div></div></p>
<hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我希望有一个如你一般的，如山间清爽的风，如古城温暖的光，从清晨到夜晚，由山野到书屋，只要最后是你就好。&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=26427666&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;设计&quot;&gt;&lt;a href=&quot;#设计&quot; class=&quot;headerlink&quot; title=&quot;设计&quot;&gt;&lt;/a&gt;设计&lt;/h2&gt;&lt;p&gt;之前用PS和AI等工具设计了很多海报和图片，暂时找到这么多，存着。
    
    </summary>
    
      <category term="设计" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="设计" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="AI" scheme="http://yoursite.com/tags/AI/"/>
    
      <category term="photoshop" scheme="http://yoursite.com/tags/photoshop/"/>
    
      <category term="logo" scheme="http://yoursite.com/tags/logo/"/>
    
  </entry>
  
  <entry>
    <title>文件管理之文件系统设计 </title>
    <link href="http://yoursite.com/2017/01/14/ospassage/"/>
    <id>http://yoursite.com/2017/01/14/ospassage/</id>
    <published>2017-01-14T11:26:35.000Z</published>
    <updated>2017-01-14T12:10:58.817Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">当夜幕降临时，在太阳以西，国境以南处，等候你的归来~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407759451&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是操作系统课上的一个课后作业，操作系统考完后基本就忘记的差不多了，把这个实践代码在这里重新过一遍~</p>
<h2 id="文件管理之文件系统设计"><a href="#文件管理之文件系统设计" class="headerlink" title="文件管理之文件系统设计"></a>文件管理之文件系统设计</h2><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><p>本实验的目的是使学生在学习文件系统原理的基础上，通过参考成熟的操作系统中文件系统的设计，实现一个简单的多用户文件系统，加深对文件系统的功能、内部结构包括逻辑结构以及物理结构的理解。</p>
<h3 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h3><p>设计一个简单的二级文件系统。要求实现下列命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">login             用户登录</div><div class="line">dir                列文件目录</div><div class="line">create           创建文件</div><div class="line">delete           删除文件</div><div class="line"> &lt;!-- 列目录时要列出文件名、物理地址、文件长度。--&gt;</div></pre></td></tr></table></figure></p>
 <a id="more"></a>
<h3 id="实验提示"><a href="#实验提示" class="headerlink" title="实验提示"></a>实验提示</h3><p> <strong style="color: #3366FF">1.首先设计文件系统的物理结构、模拟磁盘存储结构（目录与文件的组织方式）。<br> <strong style="color: #3366FF">2.确定文件系统的数据结构：主目录、子目录及活动文件等。主目录和子目录都可以文件的形式存放于磁盘，这样便于查找和修改。<br><strong style="color: #3366FF"> 3.用户创建的文件，可以编号存储于模拟磁盘上。如file0，file1，file2，.…..并以编号作为物理地址，在目录中进行登记。</strong></strong></strong></p>
<h3 id="实验说明"><a href="#实验说明" class="headerlink" title="实验说明"></a>实验说明</h3><p> 可以参考现有的系统如FAT、NTFS或ext3等系统的结构。<br> 同学在完成基本功能的基础上可以考虑对系统的扩展，如多级目录、文件的共享以及系统的优化，如目录查找算法的改进等。</p>
<h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;conio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;time.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#define MaxUser 100//定义最大MDF主目录文件</span></div><div class="line"><span class="comment">#define MaxDisk 512*1024//模拟最大磁盘空间</span></div><div class="line"><span class="comment">#define commandAmount 12//对文件操作的指令数</span></div><div class="line">//存储空间管理有关结构体和变量</div><div class="line">char disk[MaxDisk];//模拟512K的磁盘存储空间</div><div class="line">typedef struct distTable//磁盘块结构体</div><div class="line">&#123;</div><div class="line">	int maxlength;</div><div class="line">	int start;</div><div class="line">	int useFlag;</div><div class="line">	distTable *next;</div><div class="line">&#125;diskNode;</div><div class="line">diskNode *diskHead;</div><div class="line">struct fileTable//文件块结构体</div><div class="line">&#123;</div><div class="line">	char fileName[10];</div><div class="line">	int strat;//文件在磁盘存储空间的起始地址</div><div class="line">	int length;//文件内容长度</div><div class="line">	int maxlength;//文件的最大长度</div><div class="line">	char fileKind[3];//文件的属性——读写方式</div><div class="line">	struct tm *timeinfo;</div><div class="line">	bool openFlag;//判断是否有进程打开了该文件</div><div class="line">//fileTable *next;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">//两级目录结构体</div><div class="line">typedef struct user_file_directory//用户文件目录文件UFD</div><div class="line">&#123;</div><div class="line">	//char fileName[10];</div><div class="line">	fileTable *file;</div><div class="line">	user_file_directory *next;</div><div class="line">&#125;UFD;</div><div class="line">//UFD *headFile;</div><div class="line">typedef struct master_file_directory//主文件目录MFD</div><div class="line">&#123;</div><div class="line">	char userName[10];</div><div class="line">	char password[10];</div><div class="line">	UFD *user;</div><div class="line">&#125;MFD;</div><div class="line">MFD userTable[MaxUser];</div><div class="line">int used = 0; //定义MFD目录中用已有的用户数</div><div class="line"></div><div class="line">//文件管理</div><div class="line">void fileCreate(char fileName[], int length, char fileKind[]);//创建文件</div><div class="line">void fileDir(char UserName[]); //显示某一用户的所有文件</div><div class="line">void fileDel(char fileName[]); //删除文件</div><div class="line">int requestDist(int &amp;startPostion, int maxLength); //磁盘分配查询</div><div class="line">void initDisk(); //初始化磁盘</div><div class="line">void userCreate();//用户管理</div><div class="line">int login();</div><div class="line">int userID = -1;//用户登录的ID号，值为-1时表示没有用户登录</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char order[<span class="built_in">command</span>Amount][10];</div><div class="line">	strcpy(order[1], <span class="string">"create"</span>);</div><div class="line">	strcpy(order[2], <span class="string">"del"</span>);</div><div class="line">	strcpy(order[3], <span class="string">"dir"</span>);</div><div class="line">	strcpy(order[0], <span class="string">"0"</span>);</div><div class="line">	char <span class="built_in">command</span>[50], command_str1[15], </div><div class="line">		command_str2[15], command_str3[15], command_str4[13];</div><div class="line">	int i, k, j;</div><div class="line">	int length;</div><div class="line">	initDisk(); //初始化磁盘</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;MaxUser; i++)//初始化用户UFD目录文件的头指针</div><div class="line">	&#123;</div><div class="line">		userTable[i].user = (UFD *)malloc(sizeof(UFD));</div><div class="line">		userTable[i].user-&gt;next = NULL;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span> (1)</div><div class="line">	&#123;	</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"                  1、Creat user\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"                  2、login\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Please chooce the function key:&gt;"</span>);</div><div class="line">		int choice;</div><div class="line">		scanf(<span class="string">"%d"</span>, &amp;choice);</div><div class="line">		<span class="keyword">if</span> (choice == 1) userCreate();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (choice == 2) userID = login();</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"您的输入有误，请重新选择\n"</span>);</div><div class="line">		<span class="keyword">while</span> (userID != -1)</div><div class="line">		&#123;</div><div class="line">			fflush(stdin);</div><div class="line">			gets_s(<span class="built_in">command</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"———————————————————————————————————————\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" create-创建 格式：create a1 1000 rw,将创建名为a1,长度为1000字节可读可写的文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" del-删除 格式：del a1,将删除名为a1的文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" dir-显示文件 格式：dir aaa,将显示aaa用户的所有文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" exit-退出程序(输入exit时在后面加一个空格，否则退出异常)\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"————————————————————————————————————————\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"please imput your command:&gt;"</span>);</div><div class="line"></div><div class="line">			gets_s(<span class="built_in">command</span>);</div><div class="line">			int select;</div><div class="line">			//command_str1字符串存储命令的操作类型</div><div class="line">			<span class="keyword">for</span> (i = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++)</div><div class="line">				command_str1[i] = <span class="built_in">command</span>[i];</div><div class="line">			k = i;</div><div class="line">			command_str1[k] = <span class="string">'\0'</span>;</div><div class="line">			<span class="keyword">for</span> (i = 0; i&lt;<span class="built_in">command</span>Amount; i++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (!strcmp(command_str1, order[i]))</div><div class="line">				&#123;</div><div class="line">					select = i;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (i == <span class="built_in">command</span>Amount)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"您输入的命令有误，请重新输入\n"</span>);</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			//commmand_str2字符串存储文件名或用户名</div><div class="line">			<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++, k++) </div><div class="line">				command_str2[k] = <span class="built_in">command</span>[i];</div><div class="line">			command_str2[k] = <span class="string">'\0'</span>;</div><div class="line">			k = i;</div><div class="line">			switch (select)</div><div class="line">			&#123;</div><div class="line">			<span class="keyword">case</span> 1:<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>; i++, k++)</div><div class="line">				command_str3[k] = <span class="built_in">command</span>[i];</div><div class="line">				command_str3[k] = <span class="string">'\0'</span>;</div><div class="line">				k = i;</div><div class="line">				j = 1;</div><div class="line">				length = 0;//初始化文件长度</div><div class="line">				<span class="keyword">for</span> (i = strlen(command_str3) - 1; i &gt;= 0; i--) //把字符串转换为十进制</div><div class="line">				&#123;</div><div class="line">					length += (command_str3[i] - 48)*j;</div><div class="line">					j *= 10;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++, k++)</div><div class="line">					command_str4[k] = <span class="built_in">command</span>[i];</div><div class="line">				command_str4[k] = <span class="string">'\0'</span>;</div><div class="line">				fileCreate(command_str2, length, command_str4); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 2:fileDel(command_str2); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 3:fileDir(command_str2); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 0:<span class="built_in">exit</span>(1);	</div><div class="line">			default:</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">userCreate</span></span>()</div><div class="line">&#123;</div><div class="line">	char c;</div><div class="line">	char userName[10];</div><div class="line">	int i;</div><div class="line">	<span class="keyword">if</span> (used&lt;MaxUser)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"请输入用户名："</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				userName[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</div><div class="line">		&#125;</div><div class="line">		userName[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (!strcmp(userTable[i].userName, userName))</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"该用户名已存在,创建用户失败\n"</span>);</div><div class="line">				system(<span class="string">"pause"</span>);</div><div class="line">				<span class="built_in">return</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		strcpy(userTable[used].userName, userName);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"请输入密码："</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				userTable[used].password[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">		&#125;</div><div class="line">		userTable[userID].password[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建用户成功\n"</span>);</div><div class="line">		used++;</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建用户失败，用户已达到上限\n"</span>);</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	fflush(stdin);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">login</span></span>()</div><div class="line">&#123;</div><div class="line">	char name[10], psw[10];</div><div class="line">	char c;</div><div class="line">	int i, <span class="built_in">times</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"请输入用户名:"</span>);</div><div class="line">	<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			name[i] = c;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</div><div class="line">	&#125;</div><div class="line">	name[i] = <span class="string">'\0'</span>;</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(userTable[i].userName, name))</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (i == used)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n您输入的用户名不存在\n"</span>);</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">		<span class="built_in">return</span> -1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="built_in">times</span> = 0; <span class="built_in">times</span>&lt;3; <span class="built_in">times</span>++)</div><div class="line">	&#123;</div><div class="line">		memset(psw, <span class="string">'\0'</span>, sizeof(psw));</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n请输入密码:"</span>);</div><div class="line">		/*<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				psw[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);*/</div><div class="line">		int i = 0;</div><div class="line">		<span class="keyword">while</span> (psw[i]=_getch())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (psw[i]!=<span class="string">'\r'</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		psw[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (!strcmp(psw, userTable[i].password))</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"用户登录成功\n"</span>);</div><div class="line">				system(<span class="string">"pause"</span>);</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (i == used)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"\n您输入的密码错误，您还有%d次输入机会\n"</span>, 2 - <span class="built_in">times</span>);</div><div class="line">			<span class="keyword">if</span> (<span class="built_in">times</span> == 2) <span class="built_in">exit</span>(0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	fflush(stdin);</div><div class="line">	<span class="built_in">return</span> i;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void <span class="function"><span class="title">initDisk</span></span>()</div><div class="line">&#123;</div><div class="line">	diskHead = (diskNode *)malloc(sizeof(diskNode));</div><div class="line">	diskHead-&gt;maxlength = MaxDisk;</div><div class="line">	diskHead-&gt;useFlag = 0;</div><div class="line">	diskHead-&gt;start = 0;</div><div class="line">	diskHead-&gt;next = NULL;</div><div class="line">&#125;</div><div class="line">int requestDist(int &amp;startPostion, int maxLength)</div><div class="line">&#123;</div><div class="line">	int flag = 0;  //标记是否分配成功</div><div class="line">	diskNode *p, *q, *temp;</div><div class="line">	p = diskHead;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;useFlag == 0 &amp;&amp; p-&gt;maxlength&gt;maxLength)</div><div class="line">		&#123;</div><div class="line">			startPostion = p-&gt;start;</div><div class="line">			q = (diskNode *)malloc(sizeof(diskNode));</div><div class="line">			q-&gt;start = p-&gt;start;</div><div class="line">			q-&gt;maxlength = maxLength;</div><div class="line">			q-&gt;useFlag = 1;</div><div class="line">			q-&gt;next = NULL;</div><div class="line">			diskHead-&gt;start = p-&gt;start + maxLength;</div><div class="line">			diskHead-&gt;maxlength = p-&gt;maxlength - maxLength;</div><div class="line">			flag = 1;</div><div class="line">			temp = p;</div><div class="line">			<span class="keyword">if</span> (diskHead-&gt;next == NULL) diskHead-&gt;next = q;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">while</span> (temp-&gt;next) temp = temp-&gt;next;</div><div class="line">				temp-&gt;next = q;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		p = p-&gt;next;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> flag;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileCreate(char fileName[], int length, char fileKind[])</div><div class="line">&#123;</div><div class="line">	//int i,j;</div><div class="line">	time_t rawtime;</div><div class="line">	int startPos;</div><div class="line">	UFD *fileNode, *p;</div><div class="line">	<span class="keyword">for</span> (p = userTable[userID].user-&gt;next; p != NULL; p = p-&gt;next)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(p-&gt;file-&gt;fileName, fileName))</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"文件重名，创建文件失败\n"</span>);</div><div class="line">			system(<span class="string">"pause"</span>);</div><div class="line">			<span class="built_in">return</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (requestDist(startPos, length))</div><div class="line">	&#123;</div><div class="line">		fileNode = (UFD *)malloc(sizeof(UFD));</div><div class="line">		//这一步必不可少，因为fileNode里面的指针也需要申请地址，否则fileNode-&gt;file指向会出错</div><div class="line">		fileNode-&gt;file = (fileTable *)malloc(sizeof(fileTable));</div><div class="line">		strcpy(fileNode-&gt;file-&gt;fileName, fileName);</div><div class="line">		strcpy(fileNode-&gt;file-&gt;fileKind, fileKind);</div><div class="line">		fileNode-&gt;file-&gt;maxlength = length;</div><div class="line">		fileNode-&gt;file-&gt;strat = startPos;</div><div class="line">		fileNode-&gt;file-&gt;openFlag = <span class="literal">false</span>;</div><div class="line">		time(&amp;rawtime);</div><div class="line">		fileNode-&gt;file-&gt;timeinfo = localtime(&amp;rawtime);</div><div class="line">		fileNode-&gt;next = NULL;</div><div class="line">		<span class="keyword">if</span> (userTable[userID].user-&gt;next == NULL)</div><div class="line">			userTable[userID].user-&gt;next = fileNode;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			p = userTable[userID].user-&gt;next;</div><div class="line">			<span class="keyword">while</span> (p-&gt;next) p = p-&gt;next;</div><div class="line">			p-&gt;next = fileNode;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建文件成功\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"磁盘空间已满或所创建文件超出磁盘空闲容量，磁盘空间分配失败\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void freeDisk(int startPostion)</div><div class="line">&#123;</div><div class="line">	diskNode *p;</div><div class="line">	<span class="keyword">for</span> (p = diskHead; p != NULL; p = p-&gt;next)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;start == startPostion)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	p-&gt;useFlag = <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileDel(char fileName[])</div><div class="line">&#123;</div><div class="line">	UFD *p, *q, *temp;</div><div class="line">	q = userTable[userID].user;</div><div class="line">	p = q-&gt;next;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(p-&gt;file-&gt;fileName, fileName)) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			p = p-&gt;next;</div><div class="line">			q = q-&gt;next;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;file-&gt;openFlag != <span class="literal">true</span>) //先判断是否有进程打开该文件</div><div class="line">		&#123;</div><div class="line">			temp = p;</div><div class="line">			q-&gt;next = p-&gt;next;</div><div class="line">			freeDisk(temp-&gt;file-&gt;strat);//磁盘空间回收</div><div class="line">			free(temp);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"文件删除成功\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">			//system(<span class="string">"pause"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"该文件已被进程打开,删除失败\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">			//system(<span class="string">"pause"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"没有找到该文件,请检查输入的文件名是否正确\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileDir(char userName[])</div><div class="line">&#123;</div><div class="line">	UFD *p;</div><div class="line">	int i, k;</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;MaxUser; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(userTable[i].userName, userName))</div><div class="line">		&#123;</div><div class="line">			k = i; <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (i == MaxUser)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"没有找到该用户，请检查输入用户名是否正确\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		p = userTable[k].user-&gt;next;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"文件名  文件长度  文件在磁盘的起始地址  文件类型               创建时间\n"</span>);</div><div class="line">		<span class="keyword">for</span> (; p != NULL; p = p-&gt;next)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%s        %d              %d              %s            %s"</span>, p-&gt;file-&gt;fileName,</div><div class="line">				p-&gt;file-&gt;maxlength, p-&gt;file-&gt;strat, p-&gt;file-&gt;fileKind, asctime(p-&gt;file-&gt;timeinfo));</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
 <hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;当夜幕降临时，在太阳以西，国境以南处，等候你的归来~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=407759451&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这是操作系统课上的一个课后作业，操作系统考完后基本就忘记的差不多了，把这个实践代码在这里重新过一遍~&lt;/p&gt;
&lt;h2 id=&quot;文件管理之文件系统设计&quot;&gt;&lt;a href=&quot;#文件管理之文件系统设计&quot; class=&quot;headerlink&quot; title=&quot;文件管理之文件系统设计&quot;&gt;&lt;/a&gt;文件管理之文件系统设计&lt;/h2&gt;&lt;h3 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h3&gt;&lt;p&gt;本实验的目的是使学生在学习文件系统原理的基础上，通过参考成熟的操作系统中文件系统的设计，实现一个简单的多用户文件系统，加深对文件系统的功能、内部结构包括逻辑结构以及物理结构的理解。&lt;/p&gt;
&lt;h3 id=&quot;实验内容&quot;&gt;&lt;a href=&quot;#实验内容&quot; class=&quot;headerlink&quot; title=&quot;实验内容&quot;&gt;&lt;/a&gt;实验内容&lt;/h3&gt;&lt;p&gt;设计一个简单的二级文件系统。要求实现下列命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;login             用户登录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dir                列文件目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;create           创建文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delete           删除文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;!-- 列目录时要列出文件名、物理地址、文件长度。--&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>基数排序 </title>
    <link href="http://yoursite.com/2017/01/14/shujujiegou/"/>
    <id>http://yoursite.com/2017/01/14/shujujiegou/</id>
    <published>2017-01-14T11:26:35.000Z</published>
    <updated>2017-01-14T12:52:44.632Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">如果一片瓦尔登湖不能荡涤心灵，那就没办法了~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=439625137&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>数据结构实践任务，花了几个星期在网上找，都是不完全的版本，加入自己的理解写下能排数字和字母的基数排序~</p>
<h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>对输入的关键字序列进行链式基数排序，并分析算法复杂度。</p>
<h3 id="任务要求"><a href="#任务要求" class="headerlink" title="任务要求"></a>任务要求</h3><p>1)    对输入的自然数关键字序列进行链式基数排序。<br>2)    需排序的数据是英文单词，从文件中读取；按字典顺序排列，写文件保存。</p>
<h3 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h3><p>输入自然数关键字序列：278，109，63，930，589，184，505，269，8，83。<br>输入英文单词组成的文件，按字典排序并输出到文件中。<a id="more"></a></p>
<h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><p>第一个自然数关键字排序直接在cmd窗口输入即可排序。<br>第二个读取字母并排序之前需要在D盘中创建一个f1.txt文件，在里面输入10个长度小于等于9的单词，每输入一个单词换行。这里不管是自然数还是单词统一使用MSD优先排序（即从前往后对比）。<br>具体排序思路参考严蔚敏的数据结构。</p>
<h3 id="算法复杂度分析"><a href="#算法复杂度分析" class="headerlink" title="算法复杂度分析"></a>算法复杂度分析</h3><p><img src="/uploads/jishupx.png"></p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code></p>
<pre><code class="bash">
<span class="comment">#include &lt;iostream&gt;</span>
<span class="comment">#include &lt;fstream&gt; //文件输入输出流</span>
<span class="comment">#include&lt;string&gt;</span>
using namespace std;
//数字结构体
<span class="comment">#define MAX_NUM_OF_KEY 8//关键字项数的最大值</span>
<span class="comment">#define RADIX    10//关键字基数，此时是十进制整数的基数</span>
<span class="comment">#define MAX_SPACE 10000</span>
typedef int DataType;
typedef struct
{
    int data;//数据，如278
    DataType keys[MAX_NUM_OF_KEY];//每个数据的所有关键字，278的2，7，8
    int next;
}SLCell;    //静态链表的节点类型
typedef struct Sllist
{
    SLCell *R; //静态链表的可利用空间，r[0]为头结点
    int recnum; //静态链表的当前长度
    int keynum; //当前数据的关键字个数
}Sllist, *SLList; //静态链表类型
typedef int ArrType[RADIX];//指针数组类型，声明两个指针数组，一个头指针，一个尾指针

//字母结构体
<span class="comment">#define MaxLen 9  //单词的最大长度</span>
<span class="comment">#define Radix  27 //基数rd为27,分别对应' ','a',…'z'</span>
typedef char String[MaxLen + 1];//定义String为字符数组类型                              
typedef struct node
{
    String word;  //单词
    struct node *next;  //next指针
} LinkNode;
//数字基数排序
void creatList(SLList &amp;SLL) //创建链表
{
    int key;
    int i = 1, j;
    cout &lt;&lt; <span class="string">"输入要进行排序的数字(输入0结束):"</span> &lt;&lt; endl;
    cin &gt;&gt; key;
    <span class="keyword">while</span> (key != 0)
    {
        SLL-&gt;R[i].data = key;
        <span class="keyword">for</span> (j = 1; j &lt;= SLL-&gt;keynum; j++)
        {
            SLL-&gt;R[i].keys[j] = key % 10;
            key /= 10;
        }
        SLL-&gt;R[i - 1].next = i++;
        cin &gt;&gt; key;
    }
    SLL-&gt;recnum = i - 1;
    SLL-&gt;R[SLL-&gt;recnum].next = 0;
}
//打印输出
void <span class="built_in">print</span>(SLList &amp;SLL)
{
    <span class="keyword">for</span> (int p = SLL-&gt;R[0].next; p; p = SLL-&gt;R[p].next)
    {
        cout &lt;&lt;<span class="string">"["</span>&lt;&lt; SLL-&gt;R[p].data &lt;&lt;<span class="string">"]"</span>&lt;&lt; <span class="string">"  "</span>;
    }
    cout &lt;&lt; endl;
}
//分配算法
void distribute(SLCell *R, int i, ArrType front, ArrType end)
{
    //静态链表L的R域中记录已按(keys[0]...keys[i-1]有序)。
    //本算法按第i个关键字keys[i]建立RADIX个子表，使同一子表中记录的keys[i]相同。
    //front[0...RADIX-1]和end[0...RADIX-1]分别指向各子表中第一个和最后一个记录。
    int j;
    <span class="keyword">for</span> (int j = 0; j&lt;RADIX; ++j)
        front[j] = 0;        //各子表初始化为空表
    <span class="keyword">for</span> (int p = R[0].next; p; p = R[p].next)
    {
        j = R[p].keys[i];           //映射第i个关键字
        <span class="keyword">if</span> (!front[j])
            front[j] = p;        //若front[j]为空，则把记录连接到front[j]的头指针上
        <span class="keyword">else</span>
            R[end[j]].next = p;    //若front[j]的头指针已经连接过了，说明已j为关键字的数据已经有了，
                                   //这时把上一个以j为关键字的数据指向当前的这个数，即下标为p的数据
        end[j] = p;        //尾指针重新指到每次更新的数据上
    }
}
//收集算法
void collect(SLCell *R, int i, ArrType front, ArrType end)
{
    //本算法按keys[i]自小到大地将f[0...RADIX-1]所指各子表依次链接成为一个链表
    int j;
    <span class="keyword">for</span> (j = 0; !front[j]; j++);   //找到第一个不为空的子表
    R[0].next = front[j];            //重整静态链表
    int k = end[j];                    //k为当前子表的尾指针
    <span class="keyword">while</span> (j&lt;RADIX)
    {
        <span class="keyword">for</span> (++j; j&lt;RADIX; j++)
            <span class="keyword">if</span> (front[j])        //找下一个非空子表
            {
                R[k].next = front[j];        //连接
                k = end[j];
            }
    }
    R[k].next = 0;                    //k指向最后一个非空子表的尾指针
}
//字母基数排序
void DispWord(String R[], int n) //输出单词
{
    int i;
    string o[10];
    ofstream fout(<span class="string">"D:\\inf.txt"</span>); //排序成功后，重新对排序写入inf.txt
    <span class="keyword">if</span> (!fout)
    {
        cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;
    }
    <span class="keyword">for</span> (i = 0; i &lt; n; i++)
    {
        cout &lt;&lt; <span class="string">"["</span> &lt;&lt; R[i] &lt;&lt; <span class="string">"]"</span>;
        o[i] = R[i];
        fout &lt;&lt; <span class="string">"["</span>&lt;&lt;o[i]&lt;&lt;<span class="string">"]"</span> &lt;&lt; endl;
    }
    cout &lt;&lt; endl;
    fout.close();
}
void PreProcess(String R[], int n)
//对单词进行预处理,用空格填充尾部至MaxLen长
{
    int i, j;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)
    {
        <span class="keyword">if</span> (strlen(R[i])&lt;MaxLen)
        {
            <span class="keyword">for</span> (j = strlen(R[i]); j&lt;MaxLen; j++)
                R[i][j] = <span class="string">' '</span>;
            R[i][j] = <span class="string">'\0'</span>;
        }
    }
}
void EndProcess(String R[], int n)
//恢复处理,删除预处理时填充的尾部空格
{
    int i, j;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)
    {
        <span class="keyword">for</span> (j = MaxLen - 1; R[i][j] == <span class="string">' '</span>; j--);
        R[i][j + 1] = <span class="string">'\0'</span>;
    }
}
void Distribute(String R[], LinkNode *head[], LinkNode *tail[], int j, int n)
//按关键字的第j个分量进行分配,进入此过程时各队列一定为空
{
    int i, k;
    LinkNode *p;
    <span class="keyword">for</span> (i = 0; i&lt;n; i++)         //依次扫描R[i],将其入队
    {
        <span class="keyword">if</span> (R[i][j] == <span class="string">' '</span>)       //空格时放入0号队列中,<span class="string">'a'</span>时放入1号队列中,…
            k = 0;
        <span class="keyword">else</span>
            k = R[i][j] - <span class="string">'a'</span> + 1;
        p = (LinkNode *)malloc(sizeof(LinkNode)); //创建新结点
        strcpy_s(p-&gt;word, R[i]);
        p-&gt;next = NULL;
        <span class="keyword">if</span> (head[k] == NULL)
        {
            head[k] = p;
            tail[k] = p;
        }
        <span class="keyword">else</span>
        {
            tail[k]-&gt;next = p;
            tail[k] = p;
        }
    }
}
void Collect(String R[], LinkNode *head[])
//依次将各非空队列中的记录收集起来
{
    int k = 0, i;
    LinkNode *p;
    <span class="keyword">for</span> (i = 0; i&lt;Radix; i++)
        <span class="keyword">for</span> (p = head[i]; p != NULL; p = p-&gt;next)
            strcpy_s(R[k++], p-&gt;word);
}
void RadixSort(String R[], int n)    //对R[0..n-1]进行基数排序
{
    LinkNode *head[Radix], *tail[Radix]; //定义Radix个队列
    int i, j;
    int k = 1;
    <span class="keyword">for</span> (i = MaxLen - 1; i &gt;= 0; i--)             //从低位到高位做d趟箱排序
    {
        <span class="keyword">for</span> (j = 0; j&lt;Radix; j++)
            head[j] = tail[j] = NULL;           //队列置空
        Distribute(R, head, tail, i, n);        //第i趟分配
        Collect(R, head);                    //第i趟收集
        cout &lt;&lt; <span class="string">"第"</span> &lt;&lt; k &lt;&lt; <span class="string">"趟分配和收集:"</span> &lt;&lt; endl;
        <span class="keyword">for</span> (int m = 0; m &lt;10; m++)
        {
            cout&lt;&lt;<span class="string">"["</span>&lt;&lt;R[m]&lt;&lt;<span class="string">"]"</span>;
        }
        k++;
        cout &lt;&lt; endl;
    }
}
//主函数
int <span class="function"><span class="title">main</span></span>()
{
    SLList SLL;
    SLL = (SLList)malloc(MAX_SPACE * sizeof(Sllist));
    SLL-&gt;R = (SLCell *)malloc(MAX_SPACE * sizeof(SLCell));
    SLL-&gt;recnum = 0;
    SLL-&gt;keynum = 3;
    string R[10];
    String c[10];
    ifstream fopen(<span class="string">"D:\\f1.txt"</span>);//读取D盘inf.txt文件
    <span class="keyword">if</span> (!fopen)
    {
        cout &lt;&lt; <span class="string">"fail to read the file.\n"</span>;
    }
    <span class="keyword">while</span> (!fopen.eof()) {   //读取D盘写入的文件
        <span class="keyword">for</span> (int q = 0; q&lt;10; q++) {
            getline(fopen, R[q]); //读取第一行
            strcpy_s(c[q],R[q].c_str());
        }
    }
    fopen.close();
    /*ofstream fout(<span class="string">"D:\\inf.txt"</span>); //排序成功后，重新对用户信息写入inf.txt
    <span class="keyword">if</span> (!fout)
    {
        cout &lt;&lt; <span class="string">"Fail to write to file.\n"</span>;
    }
    <span class="keyword">for</span> (int o = 0; o &lt; 10; o++) {
        fout &lt;&lt; c[o] &lt;&lt; endl;
    }
    fout.close();*/
    int k;
    <span class="keyword">while</span> (1) {
        cout &lt;&lt; <span class="string">"*************基数排序程序***************"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*          选择要执行的命令            *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    1.输入自然数进行链式基数排序      *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    2.从文件中读取字母,按字典顺序排列 *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"*    3.退出程序                   *"</span> &lt;&lt; endl;
        cout &lt;&lt; <span class="string">"****************************************"</span> &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
        cin &gt;&gt; k;
        switch (k)
        {
        <span class="keyword">case</span> 1:
            creatList(SLL);
            cout &lt;&lt; <span class="string">"排序前:"</span> &lt;&lt; endl;
            <span class="built_in">print</span>(SLL);
            ArrType front, end;
            <span class="keyword">for</span> (int i = 1; i &lt;= SLL-&gt;keynum; i++)    //按LSD法对各关键字进行分配和收集
            {
                distribute(SLL-&gt;R, i, front, end);    //第i趟分配
                collect(SLL-&gt;R, i, front, end);        //第i趟收集
                cout &lt;&lt; <span class="string">"第"</span> &lt;&lt; i &lt;&lt; <span class="string">"趟分配和收集:"</span> &lt;&lt; endl;
                <span class="built_in">print</span>(SLL);
            }
            cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
            <span class="built_in">break</span>;
        <span class="keyword">case</span> 2:
            cout &lt;&lt; <span class="string">"从D:\\f1.txt中读取到的单词为："</span> &lt;&lt; endl;
            DispWord(c, 10);
            PreProcess(c, 10);
            cout &lt;&lt; <span class="string">"预处理后："</span> &lt;&lt; endl;
            DispWord(c, 10);
            RadixSort(c, 10);
            cout &lt;&lt; <span class="string">"排序结果："</span> &lt;&lt; endl;
            DispWord(c, 10);
            EndProcess(c, 10);
            cout &lt;&lt; <span class="string">"最终结果："</span> &lt;&lt; endl;
            DispWord(c, 10);
            cout &lt;&lt; <span class="string">"******排序后的结果已经成功写入D盘inf.txt!******"</span>;
            cout &lt;&lt; endl &lt;&lt; endl &lt;&lt; endl;
            <span class="built_in">break</span>;
        <span class="keyword">case</span> 3:
            <span class="built_in">exit</span>(0);
        default:
            cout &lt;&lt; <span class="string">"请输入正确的数字！"</span> &lt;&lt; endl;
            <span class="built_in">break</span>;
        }
    }
    <span class="built_in">return</span> 0;
}
</code></pre>
  <hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;如果一片瓦尔登湖不能荡涤心灵，那就没办法了~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=439625137&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;数据结构实践任务，花了几个星期在网上找，都是不完全的版本，加入自己的理解写下能排数字和字母的基数排序~&lt;/p&gt;
&lt;h2 id=&quot;基数排序&quot;&gt;&lt;a href=&quot;#基数排序&quot; class=&quot;headerlink&quot; title=&quot;基数排序&quot;&gt;&lt;/a&gt;基数排序&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;对输入的关键字序列进行链式基数排序，并分析算法复杂度。&lt;/p&gt;
&lt;h3 id=&quot;任务要求&quot;&gt;&lt;a href=&quot;#任务要求&quot; class=&quot;headerlink&quot; title=&quot;任务要求&quot;&gt;&lt;/a&gt;任务要求&lt;/h3&gt;&lt;p&gt;1)    对输入的自然数关键字序列进行链式基数排序。&lt;br&gt;2)    需排序的数据是英文单词，从文件中读取；按字典顺序排列，写文件保存。&lt;/p&gt;
&lt;h3 id=&quot;测试数据&quot;&gt;&lt;a href=&quot;#测试数据&quot; class=&quot;headerlink&quot; title=&quot;测试数据&quot;&gt;&lt;/a&gt;测试数据&lt;/h3&gt;&lt;p&gt;输入自然数关键字序列：278，109，63，930，589，184，505，269，8，83。&lt;br&gt;输入英文单词组成的文件，按字典排序并输出到文件中。
    
    </summary>
    
      <category term="基数排序" scheme="http://yoursite.com/categories/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="基数排序" scheme="http://yoursite.com/tags/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>记录Hexo+Github免费搭建个人博客</title>
    <link href="http://yoursite.com/2017/01/13/new-article/"/>
    <id>http://yoursite.com/2017/01/13/new-article/</id>
    <published>2017-01-13T13:03:55.000Z</published>
    <updated>2017-01-14T07:17:38.044Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">不急，先上一首歌曲，然后慢慢记录~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=281275&auto=0&height=66"></iframe></p>
<h3 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h3><p>这几天一直在利用Hexo搭建自己的博客，对于hexo的强大能力感到赞叹，中途谷歌百度了很多教程，一路经历各种坎坷艰辛，而且别人的教程版本都很旧，在自己摸索下终于完成了现在这个博客，博客刚建立，文章少的可怜，就用来暖暖场吧~，也为了不使自己忘记，也因为一直有记录的习惯，算是个人笔记写一下这个博客的搭建记录吧~</p>
<p><code style="color:#E9967A">这个记录流程只适用于windows</code><a id="more"></a></p>
<h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><p>1.<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a><br>2.<a href="https://git-scm.com/" target="_blank" rel="external">Git</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>上面两个文件安装好之后，在你觉得合适的位置，建立一个文件夹（命名不要写中文！下面以该文件夹命名为Hexo为例），进入该文件夹，右击鼠标选择Git Bash,然后输入下列文字（目的是安装Hexo,$已经帮你打好,为了形象在此加入$）:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<h3 id="在本地搭建Hexo"><a href="#在本地搭建Hexo" class="headerlink" title="在本地搭建Hexo"></a>在本地搭建Hexo</h3><p>安装Hexo后，继续在<i style="color:#F08080">当前 </i>Git Bash里面按顺序执行以下命令(中途也许会看到warn提醒，可以不管)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo --save</div><div class="line">$ hexo -v</div><div class="line">$ hexo init</div><div class="line">$ npm install</div><div class="line">$ hexo g</div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>当你执行完hexo s后，你会看到 <i style="color:#9400D3">“INFO  Hexo is running at http : //0.0.0.0:4000/.Press Ctrl+C to stop.”</i>这句话这时候，不要关闭git bash，在高级浏览器（chorm，火狐，等）输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 你就可以看到你的博客了。</p>
<h3 id="为你的博客更换主题"><a href="#为你的博客更换主题" class="headerlink" title="为你的博客更换主题"></a>为你的博客更换主题</h3><p>hexo为我们提供了很多<a href="https://hexo.io/themes/" target="_blank" rel="external">主题</a>,如果你觉得初始主题已经不错了，那就不用更换了，下面以主题Next为例，继续记录~~<br>在<code style="color:#FF6666">../Hexo</code>下打开Git Bash 输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next</div></pre></td></tr></table></figure></p>
<p>这表示下载Next主题，等待主题下载完毕~~然后在打开<code style="color:#FF6666">../Hexo/_config.yml</code>，建议是使用<code style="color:#E9967A">Notepad++</code>,用<code style="color:#E9967A">Notepad++</code>打开后ctrl+F弹出搜索框，输入关键字<code style="background-color:#F0F8FF;color: #FF0033">theme:</code>，然后找到<code style="background-color:#F0F8FF;color: #FF0033">theme:</code> 后大概是这样的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line">theme: landscape</div></pre></td></tr></table></figure></p>
<p>这时候把<i style="color:#6495ED">landscape</i>改为:<br><i style="color:#8A2BE2">（如果手打记得冒号后面必须加一个空格！）</i><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure></p>
<p>然后在Git hash先执行<code style="background-color:#F0F8FF;color: #FF0033">hexo clean</code>，然后执行<code style="background-color:#F0F8FF;color: #FF0033">hexo g</code>，再执行<code style="background-color:#F0F8FF;color: #FF0033">hexo s<code>，很快就能看到新主题的效果了~&gt;<br>Next有三套主题选择，打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code> 搜索关键字<code style="background-color:#F0F8FF;color: #FF0033">Schemes:</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Schemes</span></div><div class="line"><span class="comment">#scheme: Muse</span></div><div class="line">scheme: Mist</div><div class="line"><span class="comment">#scheme: Pisces</span></div></pre></td></tr></table></figure></code></code></p>
<p>#代表注释，如果去掉#就说明使用当前主题。下面以使用Next.Mist主题为例..</p>
<h3 id="配置个人博客"><a href="#配置个人博客" class="headerlink" title="配置个人博客"></a>配置个人博客</h3><p>打开<code style="color:#FF6666">../Hexo/_config.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site</span></div><div class="line">title: “你的博客名字”</div><div class="line">subtitle: “副标题”</div><div class="line">description: “描述”</div><div class="line">author: “作者”</div><div class="line">language: zh-Hans“这里的设置请参考下图”</div><div class="line">timezone:</div></pre></td></tr></table></figure></p>
<p><img src="/uploads/nextlan.png"><br>打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code> <!-- 这里是配置网页导航 --><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  about: /about</div><div class="line">  <span class="comment">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="comment">#commonweal: /404.html</span></div><div class="line">  <span class="comment">#&lt;!--下面是对应的图标哦 --&gt;</span></div><div class="line">  menu_icons:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  schedule: calendar</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  sitemap: sitemap</div><div class="line">  commonweal: heartbeat</div></pre></td></tr></table></figure></p>
<p><code style="background-color:#F0F8FF;color: #FF0033">warn:</code> 在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的<code style="background-color:#F0F8FF;color: #FF0033">Font Awesome </code>图标名字） 的情况下，NexT 将会使用<code style="background-color:#F0F8FF;color: #FF0033"> </code>作为图标。 </p>
<h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>打开<code style="color:#FF6666">../Hexo/_config.yml</code>,搜索<code style="background-color:#F0F8FF;color: #FF0033">avatar</code><br><img src="/uploads/sethead.png"></p>
<h3 id="集成第三方服务"><a href="#集成第三方服务" class="headerlink" title="集成第三方服务"></a>集成第三方服务</h3><p>  <strong style="color: #3366FF">1.添加多说评论</strong><br>去<a href="http://feitianmai.duoshuo.com/admin/tools/" target="_blank" rel="external">多说</a>创建一个站点，具体步骤如下：<br><code style="color: #FF0033">a. 登录后在首页选择 “我要安装”。</code><br><code style="color: #FF0033">b. 创建站点，填写站点相关信息。随便填，圈起来的部分要记住</code><br><img src="/uploads/duoshuocre.png"><br>打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code>,搜索<code style="color:#FF6666">duoshuo_shortname</code>并修改为如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: iissnan-notes&lt;!-- 此处填写上图圈出来的部分,此写法作为例子 --&gt;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">c. 开启多说热评文章</code><br>在<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code>中设置<code style="background-color:#F0F8FF;color: #FF0033">duoshuo_hotartical</code>为<code style="color:#FF6666">true</code><br><code style="color: #FF0033">d. 多说评论修改</code><br>登录多说后，在首页右上角点击“后台管理”，选择站点名称打开多说后台管理页面，选择“设置”下拉找到“自定义CSS”输入框，填写以下CSS样式，效果参考文章结尾评论样式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">/*-------------访客底部----------------*/</div><div class="line">.ds-recent-visitors &#123;</div><div class="line">    margin-bottom: 200px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@media (max-width: 768px) &#123;</div><div class="line">    .ds-recent-visitors &#123;</div><div class="line">        margin-bottom: 440px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------非圆角----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-rounded &#123;</span></div><div class="line">    border-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.theme-next <span class="comment">#ds-thread #ds-reset .ds-textarea-wrapper &#123;</span></div><div class="line">    border-top-right-radius: 0px;</div><div class="line">    border-top-left-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.theme-next <span class="comment">#ds-thread #ds-reset .ds-post-button &#123;</span></div><div class="line">    border-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.ds-post-self xmp &#123;</div><div class="line">    word-wrap: <span class="built_in">break</span>-word;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------访客----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-avatar img,</span></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar img &#123;</span></div><div class="line">    width: 54px;</div><div class="line">    height: 54px; /*设置图像的长和宽，这里要根据自己的评论框情况更改*/</div><div class="line">    border-radius: 27px; /*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</div><div class="line">    -webkit-border-radius: 27px; /*圆角效果：兼容webkit浏览器*/</div><div class="line">    -moz-border-radius: 27px;</div><div class="line">    box-shadow: inset 0 -1px 0 <span class="comment">#3333sf; /*设置图像阴影效果*/</span></div><div class="line">    -webkit-box-shadow: inset 0 -1px 0 <span class="comment">#3333sf;</span></div><div class="line">    -webkit-transition: 0.4s;</div><div class="line">    -webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">    transition: transform 0.4s ease-out; /*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</div><div class="line">    -moz-transition: -moz-transform 0.4s ease-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------访客悬浮在头像----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-avatar img:hover,</span></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar img:hover &#123;</span></div><div class="line">    box-shadow: 0 0 10px <span class="comment">#fff;</span></div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20 px rgba(255, 255, 255, 1);</div><div class="line">    -webkit-box-shadow: 0 0 10px <span class="comment">#fff;</span></div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20 px rgba(255, 255, 255, 1);</div><div class="line">    transform: rotateZ(360deg); /*图像旋转360度*/</div><div class="line">    -webkit-transform: rotateZ(360deg);</div><div class="line">    -moz-transform: rotateZ(360deg);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</span></div><div class="line">    background: url(http://ww4.sinaimg.cn/small/649a4735gw1et7gnhy5fej20zk0m8q3q.jpg) right no-repeat;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar &#123;</span></div><div class="line">    <span class="built_in">float</span>: left</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------隐藏版权----------------*/</div><div class="line"><span class="comment">#ds-thread #ds-reset .ds-powered-by &#123;</span></div><div class="line">    display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <strong style="color: #3366FF">2. 为Next添加文章阅读量功能</strong><br>  参考<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a><br>  <strong style="color: #3366FF">3.添加搜索功能</strong><br>不巧，刚在一个多月前Swiftype搜索只对企业开放，Algolia摸索了好久总有bug，下面介绍我找到的搜索方法：<br><code style="color: #FF0033">a. 在<code style="color:#FF6666">../Hexo</code>处右击鼠标打开Git Bash输入（目的是安装<code style="color:#FF6666">hexo-generator-searchdb</code>）：</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">b.在<code style="color:#FF6666">../Hexo/_config.yml</code>里面增下以下内容到任意位置：</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  <span class="built_in">limit</span>: 10000</div></pre></td></tr></table></figure></p>
<p>   <strong style="color: #3366FF">4.背景效果</strong><br>  点击鼠标出现红心,添加<a href="https://github.com/ehlxr/ehlxr.github.io/blob/master/js/src/love.js" target="_blank" rel="external">love.js</a>放在<code style="color:#FF6666">../hexo/themes/next/source/js/src</code>文件目录下。然后在<code style="color:#FF6666">../hexo/themes/next/layout/_layout.swig</code><i style="color:#F08080">末尾</i>添加引用：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  &lt;!-- 页面点击小红心 --&gt;</div><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>  <strong style="color: #3366FF">5.头像圆形旋转</strong><br>  把完整的sidebar-author.styl文件内容<a href="https://github.com/ehlxr/useful-code/blob/master/resources/sidebar-author.styl" target="_blank" rel="external">参考地址</a>复制替换到<code style="color:#FF6666">..hexo/themes/next/source/css/_common/components/sidebar/sidebar-author.styl</code>即可。</p>
<p><div style="text-align:center">更多开发参考<a href="http://theme-next.iissnan.com/getting-started.html#download-next-theme" target="_blank" rel="external">Next开发文档</a></div><hr></p>
<h3 id="注册Github并上传数据"><a href="#注册Github并上传数据" class="headerlink" title="注册Github并上传数据"></a>注册Github并上传数据</h3><p> <code style="color: #FF0033">a. 打开<a href="https://github.com/" target="_blank" rel="external">Github网站</a>，注册账号, 然后点击<i>Start a Project</i>,注册仓库如下填写，注意<i>Owner</i>的名字和<i>Pepository name</i>中<i>.github.io</i>前面的要一致！(这里因为我已经注册仓库，所以会提示已经存在)，然后创建仓库即可</code><br> <img src="/uploads/createrepos.png"><br> 最后在<code style="color:#FF6666">../Hexo/_config.yml</code>处拉到最后，写成如下:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#swiftype_key: </span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: http://github.com/Superbsco/Superbsco.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p> <code style="background-color:#F0F8FF;color: #FF0033">warn: 注意只需要把那两个Superbsco改为注册时候填写的仓库名称即可</code><br> 最后在<code style="color:#FF6666">../Hexo</code>执行Git hash先执行<code style="background-color:#F0F8FF;color: #FF0033">hexo clean</code>，然后重新部署执行<code style="background-color:#F0F8FF;color: #FF0033">hexo g</code>，并且上传执行<code style="background-color:#F0F8FF;color: #FF0033">hexo d</code>中途输入Github的账号密码即可上传成功，在浏览器打开<i>“你的仓库名字”.github.io</i>即可看到网页效果！<br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="http://oapjp6spr.bkt.clouddn.com/18210.jpg" alt=""></div><div class="group-picture-column" style="width: 50%;"><img src="http://oapjp6spr.bkt.clouddn.com/196232.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/224147.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/199301.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/213318.jpg" alt=""></div></div></div></div></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;不急，先上一首歌曲，然后慢慢记录~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=281275&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h3 id=&quot;动机&quot;&gt;&lt;a href=&quot;#动机&quot; class=&quot;headerlink&quot; title=&quot;动机&quot;&gt;&lt;/a&gt;动机&lt;/h3&gt;&lt;p&gt;这几天一直在利用Hexo搭建自己的博客，对于hexo的强大能力感到赞叹，中途谷歌百度了很多教程，一路经历各种坎坷艰辛，而且别人的教程版本都很旧，在自己摸索下终于完成了现在这个博客，博客刚建立，文章少的可怜，就用来暖暖场吧~，也为了不使自己忘记，也因为一直有记录的习惯，算是个人笔记写一下这个博客的搭建记录吧~&lt;/p&gt;
&lt;p&gt;&lt;code style=&quot;color:#E9967A&quot;&gt;这个记录流程只适用于windows&lt;/code&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="多说" scheme="http://yoursite.com/tags/%E5%A4%9A%E8%AF%B4/"/>
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/01/12/hello-world/"/>
    <id>http://yoursite.com/2017/01/12/hello-world/</id>
    <published>2017-01-12T12:01:56.000Z</published>
    <updated>2017-01-14T07:43:20.741Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=431357712&auto=0&height=66"></iframe><strong>Welcome to my new blog! </strong><br>下面附录一大堆文字测试效果；</p>
<p><blockquote class="blockquote-center">我望着长城，常常不能自语。</blockquote><br>之前一直在学习html+css，偶尔查找资料发现了基于Hexo的博客，我一下子被这么美观的设计吸引了，原来有人可以把网页设计的这么棒，整个篇幅下来没有广告，很整洁，很清晰，主题明朗，阅读体验超级棒，于是想着搜索这个网站到底是怎么建立的，那么就找到了，原来这是一个台湾大学生tommy351用node.js开发的Hexo，Hexo是一个开源的静态博客生成器。对于建立个人网站来说，没有什么比博客更合适了，既然是开源的，那么我就疯狂谷歌百度查找资料，最终基于Hexo 3.2.2版本，使用Next主题写成了这个博客<a id="more"></a></p>
<p>谷歌百度查到的资料层出不穷，版本新旧都有，而且很简单的东西，有人非要写的那么复杂，让人看不懂，在综合了很多很多教程之后，遇到过很多很多问题，都是一个个的慢慢解决，比如头像旋转啊，添加facebook，微博啊之类的，最后的最后发现最基本的开发文档才是最靠谱的！！</p>
<p>随便写下这个首篇博客暖暖场，下面附录一些基本插入代码的格式，加入标题的格式，方便以后查看~~</p>
<h2 id="格式标语"><a href="#格式标语" class="headerlink" title="格式标语"></a>格式标语</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=431357712&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;strong&gt;Welcome to my new blog! &lt;/strong&gt;&lt;br&gt;下面附录一大堆文字测试效果；&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我望着长城，常常不能自语。&lt;/blockquote&gt;&lt;br&gt;之前一直在学习html+css，偶尔查找资料发现了基于Hexo的博客，我一下子被这么美观的设计吸引了，原来有人可以把网页设计的这么棒，整个篇幅下来没有广告，很整洁，很清晰，主题明朗，阅读体验超级棒，于是想着搜索这个网站到底是怎么建立的，那么就找到了，原来这是一个台湾大学生tommy351用node.js开发的Hexo，Hexo是一个开源的静态博客生成器。对于建立个人网站来说，没有什么比博客更合适了，既然是开源的，那么我就疯狂谷歌百度查找资料，最终基于Hexo 3.2.2版本，使用Next主题写成了这个博客
    
    </summary>
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
