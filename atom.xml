<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Superb&#39;s blog</title>
  <subtitle>给时间以生命，而不是给生命以时间。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-01-14T11:52:42.725Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>黄少鹏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>操作系统实践之文件管理之文件系统设计 </title>
    <link href="http://yoursite.com/2017/01/14/ospassage/"/>
    <id>http://yoursite.com/2017/01/14/ospassage/</id>
    <published>2017-01-14T11:26:35.000Z</published>
    <updated>2017-01-14T11:52:42.725Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">当夜幕降临时，在太阳以西，国境以南处，等候你的归来~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407759451&auto=0&height=66"></iframe></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这是操作系统课上的一个课后作业，操作系统考完后基本就忘记的差不多了，把这个实践代码在这里重新过一遍~</p>
<h2 id="文件管理之文件系统设计"><a href="#文件管理之文件系统设计" class="headerlink" title="文件管理之文件系统设计"></a>文件管理之文件系统设计</h2><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><p>本实验的目的是使学生在学习文件系统原理的基础上，通过参考成熟的操作系统中文件系统的设计，实现一个简单的多用户文件系统，加深对文件系统的功能、内部结构包括逻辑结构以及物理结构的理解。</p>
<h3 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h3><p>设计一个简单的二级文件系统。要求实现下列命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">login             用户登录</div><div class="line">dir                列文件目录</div><div class="line">create           创建文件</div><div class="line">delete           删除文件</div><div class="line"> &lt;!-- 列目录时要列出文件名、物理地址、文件长度。--&gt;</div></pre></td></tr></table></figure></p>
 <a id="more"></a>
<h3 id="实验提示"><a href="#实验提示" class="headerlink" title="实验提示"></a>实验提示</h3><p> <strong style="color: #3366FF">1.首先设计文件系统的物理结构、模拟磁盘存储结构（目录与文件的组织方式）。<br> <strong style="color: #3366FF">2.确定文件系统的数据结构：主目录、子目录及活动文件等。主目录和子目录都可以文件的形式存放于磁盘，这样便于查找和修改。<br><strong style="color: #3366FF"> 3.用户创建的文件，可以编号存储于模拟磁盘上。如file0，file1，file2，.…..并以编号作为物理地址，在目录中进行登记。</strong></strong></strong></p>
<h3 id="实验说明"><a href="#实验说明" class="headerlink" title="实验说明"></a>实验说明</h3><p> 可以参考现有的系统如FAT、NTFS或ext3等系统的结构。<br> 同学在完成基本功能的基础上可以考虑对系统的扩展，如多级目录、文件的共享以及系统的优化，如目录查找算法的改进等。</p>
<h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p> <code style="color: #FF0033">此代码在VS2015上正常运行~</code><br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;stdio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;stdlib.h&gt;</span></div><div class="line"><span class="comment">#include &lt;conio.h&gt;</span></div><div class="line"><span class="comment">#include &lt;time.h&gt;</span></div><div class="line"><span class="comment">#include &lt;string.h&gt;</span></div><div class="line"><span class="comment">#define MaxUser 100//定义最大MDF主目录文件</span></div><div class="line"><span class="comment">#define MaxDisk 512*1024//模拟最大磁盘空间</span></div><div class="line"><span class="comment">#define commandAmount 12//对文件操作的指令数</span></div><div class="line">//存储空间管理有关结构体和变量</div><div class="line">char disk[MaxDisk];//模拟512K的磁盘存储空间</div><div class="line">typedef struct distTable//磁盘块结构体</div><div class="line">&#123;</div><div class="line">	int maxlength;</div><div class="line">	int start;</div><div class="line">	int useFlag;</div><div class="line">	distTable *next;</div><div class="line">&#125;diskNode;</div><div class="line">diskNode *diskHead;</div><div class="line">struct fileTable//文件块结构体</div><div class="line">&#123;</div><div class="line">	char fileName[10];</div><div class="line">	int strat;//文件在磁盘存储空间的起始地址</div><div class="line">	int length;//文件内容长度</div><div class="line">	int maxlength;//文件的最大长度</div><div class="line">	char fileKind[3];//文件的属性——读写方式</div><div class="line">	struct tm *timeinfo;</div><div class="line">	bool openFlag;//判断是否有进程打开了该文件</div><div class="line">//fileTable *next;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">//两级目录结构体</div><div class="line">typedef struct user_file_directory//用户文件目录文件UFD</div><div class="line">&#123;</div><div class="line">	//char fileName[10];</div><div class="line">	fileTable *file;</div><div class="line">	user_file_directory *next;</div><div class="line">&#125;UFD;</div><div class="line">//UFD *headFile;</div><div class="line">typedef struct master_file_directory//主文件目录MFD</div><div class="line">&#123;</div><div class="line">	char userName[10];</div><div class="line">	char password[10];</div><div class="line">	UFD *user;</div><div class="line">&#125;MFD;</div><div class="line">MFD userTable[MaxUser];</div><div class="line">int used = 0; //定义MFD目录中用已有的用户数</div><div class="line"></div><div class="line">//文件管理</div><div class="line">void fileCreate(char fileName[], int length, char fileKind[]);//创建文件</div><div class="line">void fileDir(char UserName[]); //显示某一用户的所有文件</div><div class="line">void fileDel(char fileName[]); //删除文件</div><div class="line">int requestDist(int &amp;startPostion, int maxLength); //磁盘分配查询</div><div class="line">void initDisk(); //初始化磁盘</div><div class="line">void userCreate();//用户管理</div><div class="line">int login();</div><div class="line">int userID = -1;//用户登录的ID号，值为-1时表示没有用户登录</div><div class="line"></div><div class="line">int <span class="function"><span class="title">main</span></span>()</div><div class="line">&#123;</div><div class="line">	char order[<span class="built_in">command</span>Amount][10];</div><div class="line">	strcpy(order[1], <span class="string">"create"</span>);</div><div class="line">	strcpy(order[2], <span class="string">"del"</span>);</div><div class="line">	strcpy(order[3], <span class="string">"dir"</span>);</div><div class="line">	strcpy(order[0], <span class="string">"0"</span>);</div><div class="line">	char <span class="built_in">command</span>[50], command_str1[15], </div><div class="line">		command_str2[15], command_str3[15], command_str4[13];</div><div class="line">	int i, k, j;</div><div class="line">	int length;</div><div class="line">	initDisk(); //初始化磁盘</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;MaxUser; i++)//初始化用户UFD目录文件的头指针</div><div class="line">	&#123;</div><div class="line">		userTable[i].user = (UFD *)malloc(sizeof(UFD));</div><div class="line">		userTable[i].user-&gt;next = NULL;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">while</span> (1)</div><div class="line">	&#123;	</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"                  1、Creat user\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"                  2、login\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"Please chooce the function key:&gt;"</span>);</div><div class="line">		int choice;</div><div class="line">		scanf(<span class="string">"%d"</span>, &amp;choice);</div><div class="line">		<span class="keyword">if</span> (choice == 1) userCreate();</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (choice == 2) userID = login();</div><div class="line">		<span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"您的输入有误，请重新选择\n"</span>);</div><div class="line">		<span class="keyword">while</span> (userID != -1)</div><div class="line">		&#123;</div><div class="line">			fflush(stdin);</div><div class="line">			gets_s(<span class="built_in">command</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"———————————————————————————————————————\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" create-创建 格式：create a1 1000 rw,将创建名为a1,长度为1000字节可读可写的文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" del-删除 格式：del a1,将删除名为a1的文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" dir-显示文件 格式：dir aaa,将显示aaa用户的所有文件\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">" exit-退出程序(输入exit时在后面加一个空格，否则退出异常)\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"————————————————————————————————————————\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"please imput your command:&gt;"</span>);</div><div class="line"></div><div class="line">			gets_s(<span class="built_in">command</span>);</div><div class="line">			int select;</div><div class="line">			//command_str1字符串存储命令的操作类型</div><div class="line">			<span class="keyword">for</span> (i = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++)</div><div class="line">				command_str1[i] = <span class="built_in">command</span>[i];</div><div class="line">			k = i;</div><div class="line">			command_str1[k] = <span class="string">'\0'</span>;</div><div class="line">			<span class="keyword">for</span> (i = 0; i&lt;<span class="built_in">command</span>Amount; i++)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">if</span> (!strcmp(command_str1, order[i]))</div><div class="line">				&#123;</div><div class="line">					select = i;</div><div class="line">					<span class="built_in">break</span>;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (i == <span class="built_in">command</span>Amount)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"您输入的命令有误，请重新输入\n"</span>);</div><div class="line">				<span class="built_in">continue</span>;</div><div class="line">			&#125;</div><div class="line">			//commmand_str2字符串存储文件名或用户名</div><div class="line">			<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++, k++) </div><div class="line">				command_str2[k] = <span class="built_in">command</span>[i];</div><div class="line">			command_str2[k] = <span class="string">'\0'</span>;</div><div class="line">			k = i;</div><div class="line">			switch (select)</div><div class="line">			&#123;</div><div class="line">			<span class="keyword">case</span> 1:<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>; i++, k++)</div><div class="line">				command_str3[k] = <span class="built_in">command</span>[i];</div><div class="line">				command_str3[k] = <span class="string">'\0'</span>;</div><div class="line">				k = i;</div><div class="line">				j = 1;</div><div class="line">				length = 0;//初始化文件长度</div><div class="line">				<span class="keyword">for</span> (i = strlen(command_str3) - 1; i &gt;= 0; i--) //把字符串转换为十进制</div><div class="line">				&#123;</div><div class="line">					length += (command_str3[i] - 48)*j;</div><div class="line">					j *= 10;</div><div class="line">				&#125;</div><div class="line">				<span class="keyword">for</span> (i = k + 1, k = 0; <span class="built_in">command</span>[i] != <span class="string">' '</span>&amp;&amp;<span class="built_in">command</span>[i] != <span class="string">'\0'</span>; i++, k++)</div><div class="line">					command_str4[k] = <span class="built_in">command</span>[i];</div><div class="line">				command_str4[k] = <span class="string">'\0'</span>;</div><div class="line">				fileCreate(command_str2, length, command_str4); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 2:fileDel(command_str2); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 3:fileDir(command_str2); <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">case</span> 0:<span class="built_in">exit</span>(1);	</div><div class="line">			default:</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> 0;</div><div class="line">&#125;</div><div class="line">void <span class="function"><span class="title">userCreate</span></span>()</div><div class="line">&#123;</div><div class="line">	char c;</div><div class="line">	char userName[10];</div><div class="line">	int i;</div><div class="line">	<span class="keyword">if</span> (used&lt;MaxUser)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"请输入用户名："</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				userName[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</div><div class="line">		&#125;</div><div class="line">		userName[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (!strcmp(userTable[i].userName, userName))</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"该用户名已存在,创建用户失败\n"</span>);</div><div class="line">				system(<span class="string">"pause"</span>);</div><div class="line">				<span class="built_in">return</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		strcpy(userTable[used].userName, userName);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"请输入密码："</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				userTable[used].password[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">		&#125;</div><div class="line">		userTable[userID].password[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建用户成功\n"</span>);</div><div class="line">		used++;</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建用户失败，用户已达到上限\n"</span>);</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	fflush(stdin);</div><div class="line">&#125;</div><div class="line"></div><div class="line">int <span class="function"><span class="title">login</span></span>()</div><div class="line">&#123;</div><div class="line">	char name[10], psw[10];</div><div class="line">	char c;</div><div class="line">	int i, <span class="built_in">times</span>;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"请输入用户名:"</span>);</div><div class="line">	<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			name[i] = c;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>, c);</div><div class="line">	&#125;</div><div class="line">	name[i] = <span class="string">'\0'</span>;</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(userTable[i].userName, name))</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (i == used)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n您输入的用户名不存在\n"</span>);</div><div class="line">		system(<span class="string">"pause"</span>);</div><div class="line">		<span class="built_in">return</span> -1;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">for</span> (<span class="built_in">times</span> = 0; <span class="built_in">times</span>&lt;3; <span class="built_in">times</span>++)</div><div class="line">	&#123;</div><div class="line">		memset(psw, <span class="string">'\0'</span>, sizeof(psw));</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n请输入密码:"</span>);</div><div class="line">		/*<span class="keyword">for</span> (i = 0; c = getch(); i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (c == 13) <span class="built_in">break</span>;</div><div class="line">			<span class="keyword">else</span></div><div class="line">				psw[i] = c;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);*/</div><div class="line">		int i = 0;</div><div class="line">		<span class="keyword">while</span> (psw[i]=_getch())</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (psw[i]!=<span class="string">'\r'</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"*"</span>);</div><div class="line">				i++;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		psw[i] = <span class="string">'\0'</span>;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="keyword">for</span> (i = 0; i&lt;used; i++)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (!strcmp(psw, userTable[i].password))</div><div class="line">			&#123;</div><div class="line">				<span class="built_in">printf</span>(<span class="string">"用户登录成功\n"</span>);</div><div class="line">				system(<span class="string">"pause"</span>);</div><div class="line">				<span class="built_in">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (i == used)</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"\n您输入的密码错误，您还有%d次输入机会\n"</span>, 2 - <span class="built_in">times</span>);</div><div class="line">			<span class="keyword">if</span> (<span class="built_in">times</span> == 2) <span class="built_in">exit</span>(0);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	fflush(stdin);</div><div class="line">	<span class="built_in">return</span> i;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void <span class="function"><span class="title">initDisk</span></span>()</div><div class="line">&#123;</div><div class="line">	diskHead = (diskNode *)malloc(sizeof(diskNode));</div><div class="line">	diskHead-&gt;maxlength = MaxDisk;</div><div class="line">	diskHead-&gt;useFlag = 0;</div><div class="line">	diskHead-&gt;start = 0;</div><div class="line">	diskHead-&gt;next = NULL;</div><div class="line">&#125;</div><div class="line">int requestDist(int &amp;startPostion, int maxLength)</div><div class="line">&#123;</div><div class="line">	int flag = 0;  //标记是否分配成功</div><div class="line">	diskNode *p, *q, *temp;</div><div class="line">	p = diskHead;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;useFlag == 0 &amp;&amp; p-&gt;maxlength&gt;maxLength)</div><div class="line">		&#123;</div><div class="line">			startPostion = p-&gt;start;</div><div class="line">			q = (diskNode *)malloc(sizeof(diskNode));</div><div class="line">			q-&gt;start = p-&gt;start;</div><div class="line">			q-&gt;maxlength = maxLength;</div><div class="line">			q-&gt;useFlag = 1;</div><div class="line">			q-&gt;next = NULL;</div><div class="line">			diskHead-&gt;start = p-&gt;start + maxLength;</div><div class="line">			diskHead-&gt;maxlength = p-&gt;maxlength - maxLength;</div><div class="line">			flag = 1;</div><div class="line">			temp = p;</div><div class="line">			<span class="keyword">if</span> (diskHead-&gt;next == NULL) diskHead-&gt;next = q;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				<span class="keyword">while</span> (temp-&gt;next) temp = temp-&gt;next;</div><div class="line">				temp-&gt;next = q;</div><div class="line">			&#125;</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">		p = p-&gt;next;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">return</span> flag;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileCreate(char fileName[], int length, char fileKind[])</div><div class="line">&#123;</div><div class="line">	//int i,j;</div><div class="line">	time_t rawtime;</div><div class="line">	int startPos;</div><div class="line">	UFD *fileNode, *p;</div><div class="line">	<span class="keyword">for</span> (p = userTable[userID].user-&gt;next; p != NULL; p = p-&gt;next)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(p-&gt;file-&gt;fileName, fileName))</div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"文件重名，创建文件失败\n"</span>);</div><div class="line">			system(<span class="string">"pause"</span>);</div><div class="line">			<span class="built_in">return</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (requestDist(startPos, length))</div><div class="line">	&#123;</div><div class="line">		fileNode = (UFD *)malloc(sizeof(UFD));</div><div class="line">		//这一步必不可少，因为fileNode里面的指针也需要申请地址，否则fileNode-&gt;file指向会出错</div><div class="line">		fileNode-&gt;file = (fileTable *)malloc(sizeof(fileTable));</div><div class="line">		strcpy(fileNode-&gt;file-&gt;fileName, fileName);</div><div class="line">		strcpy(fileNode-&gt;file-&gt;fileKind, fileKind);</div><div class="line">		fileNode-&gt;file-&gt;maxlength = length;</div><div class="line">		fileNode-&gt;file-&gt;strat = startPos;</div><div class="line">		fileNode-&gt;file-&gt;openFlag = <span class="literal">false</span>;</div><div class="line">		time(&amp;rawtime);</div><div class="line">		fileNode-&gt;file-&gt;timeinfo = localtime(&amp;rawtime);</div><div class="line">		fileNode-&gt;next = NULL;</div><div class="line">		<span class="keyword">if</span> (userTable[userID].user-&gt;next == NULL)</div><div class="line">			userTable[userID].user-&gt;next = fileNode;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			p = userTable[userID].user-&gt;next;</div><div class="line">			<span class="keyword">while</span> (p-&gt;next) p = p-&gt;next;</div><div class="line">			p-&gt;next = fileNode;</div><div class="line">		&#125;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"创建文件成功\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"磁盘空间已满或所创建文件超出磁盘空闲容量，磁盘空间分配失败\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void freeDisk(int startPostion)</div><div class="line">&#123;</div><div class="line">	diskNode *p;</div><div class="line">	<span class="keyword">for</span> (p = diskHead; p != NULL; p = p-&gt;next)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;start == startPostion)</div><div class="line">			<span class="built_in">break</span>;</div><div class="line">	&#125;</div><div class="line">	p-&gt;useFlag = <span class="literal">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileDel(char fileName[])</div><div class="line">&#123;</div><div class="line">	UFD *p, *q, *temp;</div><div class="line">	q = userTable[userID].user;</div><div class="line">	p = q-&gt;next;</div><div class="line">	<span class="keyword">while</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(p-&gt;file-&gt;fileName, fileName)) <span class="built_in">break</span>;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			p = p-&gt;next;</div><div class="line">			q = q-&gt;next;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (p)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (p-&gt;file-&gt;openFlag != <span class="literal">true</span>) //先判断是否有进程打开该文件</div><div class="line">		&#123;</div><div class="line">			temp = p;</div><div class="line">			q-&gt;next = p-&gt;next;</div><div class="line">			freeDisk(temp-&gt;file-&gt;strat);//磁盘空间回收</div><div class="line">			free(temp);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"文件删除成功\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">			//system(<span class="string">"pause"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"该文件已被进程打开,删除失败\n"</span>);</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">			//system(<span class="string">"pause"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"没有找到该文件,请检查输入的文件名是否正确\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void fileDir(char userName[])</div><div class="line">&#123;</div><div class="line">	UFD *p;</div><div class="line">	int i, k;</div><div class="line">	<span class="keyword">for</span> (i = 0; i&lt;MaxUser; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (!strcmp(userTable[i].userName, userName))</div><div class="line">		&#123;</div><div class="line">			k = i; <span class="built_in">break</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">if</span> (i == MaxUser)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"没有找到该用户，请检查输入用户名是否正确\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">		<span class="built_in">return</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		p = userTable[k].user-&gt;next;</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"文件名  文件长度  文件在磁盘的起始地址  文件类型               创建时间\n"</span>);</div><div class="line">		<span class="keyword">for</span> (; p != NULL; p = p-&gt;next)</div><div class="line">			<span class="built_in">printf</span>(<span class="string">"%s        %d              %d              %s            %s"</span>, p-&gt;file-&gt;fileName,</div><div class="line">				p-&gt;file-&gt;maxlength, p-&gt;file-&gt;strat, p-&gt;file-&gt;fileKind, asctime(p-&gt;file-&gt;timeinfo));</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">		<span class="built_in">printf</span>(<span class="string">"按任意键继续..."</span>);</div><div class="line">		//system(<span class="string">"pause"</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
 <hr>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;当夜幕降临时，在太阳以西，国境以南处，等候你的归来~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=407759451&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这是操作系统课上的一个课后作业，操作系统考完后基本就忘记的差不多了，把这个实践代码在这里重新过一遍~&lt;/p&gt;
&lt;h2 id=&quot;文件管理之文件系统设计&quot;&gt;&lt;a href=&quot;#文件管理之文件系统设计&quot; class=&quot;headerlink&quot; title=&quot;文件管理之文件系统设计&quot;&gt;&lt;/a&gt;文件管理之文件系统设计&lt;/h2&gt;&lt;h3 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;headerlink&quot; title=&quot;实验目的&quot;&gt;&lt;/a&gt;实验目的&lt;/h3&gt;&lt;p&gt;本实验的目的是使学生在学习文件系统原理的基础上，通过参考成熟的操作系统中文件系统的设计，实现一个简单的多用户文件系统，加深对文件系统的功能、内部结构包括逻辑结构以及物理结构的理解。&lt;/p&gt;
&lt;h3 id=&quot;实验内容&quot;&gt;&lt;a href=&quot;#实验内容&quot; class=&quot;headerlink&quot; title=&quot;实验内容&quot;&gt;&lt;/a&gt;实验内容&lt;/h3&gt;&lt;p&gt;设计一个简单的二级文件系统。要求实现下列命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;login             用户登录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dir                列文件目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;create           创建文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;delete           删除文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;lt;!-- 列目录时要列出文件名、物理地址、文件长度。--&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="C语言" scheme="http://yoursite.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="数据结构" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>记录Hexo+Github免费搭建个人博客</title>
    <link href="http://yoursite.com/2017/01/13/new-article/"/>
    <id>http://yoursite.com/2017/01/13/new-article/</id>
    <published>2017-01-13T13:03:55.000Z</published>
    <updated>2017-01-14T07:17:38.044Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">不急，先上一首歌曲，然后慢慢记录~</blockquote><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=281275&auto=0&height=66"></iframe></p>
<h3 id="动机"><a href="#动机" class="headerlink" title="动机"></a>动机</h3><p>这几天一直在利用Hexo搭建自己的博客，对于hexo的强大能力感到赞叹，中途谷歌百度了很多教程，一路经历各种坎坷艰辛，而且别人的教程版本都很旧，在自己摸索下终于完成了现在这个博客，博客刚建立，文章少的可怜，就用来暖暖场吧~，也为了不使自己忘记，也因为一直有记录的习惯，算是个人笔记写一下这个博客的搭建记录吧~</p>
<p><code style="color:#E9967A">这个记录流程只适用于windows</code><a id="more"></a></p>
<h3 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h3><p>1.<a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a><br>2.<a href="https://git-scm.com/" target="_blank" rel="external">Git</a></p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>上面两个文件安装好之后，在你觉得合适的位置，建立一个文件夹（命名不要写中文！下面以该文件夹命名为Hexo为例），进入该文件夹，右击鼠标选择Git Bash,然后输入下列文字（目的是安装Hexo,$已经帮你打好,为了形象在此加入$）:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div></pre></td></tr></table></figure></p>
<h3 id="在本地搭建Hexo"><a href="#在本地搭建Hexo" class="headerlink" title="在本地搭建Hexo"></a>在本地搭建Hexo</h3><p>安装Hexo后，继续在<i style="color:#F08080">当前 </i>Git Bash里面按顺序执行以下命令(中途也许会看到warn提醒，可以不管)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo --save</div><div class="line">$ hexo -v</div><div class="line">$ hexo init</div><div class="line">$ npm install</div><div class="line">$ hexo g</div><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>当你执行完hexo s后，你会看到 <i style="color:#9400D3">“INFO  Hexo is running at http : //0.0.0.0:4000/.Press Ctrl+C to stop.”</i>这句话这时候，不要关闭git bash，在高级浏览器（chorm，火狐，等）输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 你就可以看到你的博客了。</p>
<h3 id="为你的博客更换主题"><a href="#为你的博客更换主题" class="headerlink" title="为你的博客更换主题"></a>为你的博客更换主题</h3><p>hexo为我们提供了很多<a href="https://hexo.io/themes/" target="_blank" rel="external">主题</a>,如果你觉得初始主题已经不错了，那就不用更换了，下面以主题Next为例，继续记录~~<br>在<code style="color:#FF6666">../Hexo</code>下打开Git Bash 输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next</div></pre></td></tr></table></figure></p>
<p>这表示下载Next主题，等待主题下载完毕~~然后在打开<code style="color:#FF6666">../Hexo/_config.yml</code>，建议是使用<code style="color:#E9967A">Notepad++</code>,用<code style="color:#E9967A">Notepad++</code>打开后ctrl+F弹出搜索框，输入关键字<code style="background-color:#F0F8FF;color: #FF0033">theme:</code>，然后找到<code style="background-color:#F0F8FF;color: #FF0033">theme:</code> 后大概是这样的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Extensions</span></div><div class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></div><div class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></div><div class="line">theme: landscape</div></pre></td></tr></table></figure></p>
<p>这时候把<i style="color:#6495ED">landscape</i>改为:<br><i style="color:#8A2BE2">（如果手打记得冒号后面必须加一个空格！）</i><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure></p>
<p>然后在Git hash先执行<code style="background-color:#F0F8FF;color: #FF0033">hexo clean</code>，然后执行<code style="background-color:#F0F8FF;color: #FF0033">hexo g</code>，再执行<code style="background-color:#F0F8FF;color: #FF0033">hexo s<code>，很快就能看到新主题的效果了~&gt;<br>Next有三套主题选择，打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code> 搜索关键字<code style="background-color:#F0F8FF;color: #FF0033">Schemes:</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Schemes</span></div><div class="line"><span class="comment">#scheme: Muse</span></div><div class="line">scheme: Mist</div><div class="line"><span class="comment">#scheme: Pisces</span></div></pre></td></tr></table></figure></code></code></p>
<p>#代表注释，如果去掉#就说明使用当前主题。下面以使用Next.Mist主题为例..</p>
<h3 id="配置个人博客"><a href="#配置个人博客" class="headerlink" title="配置个人博客"></a>配置个人博客</h3><p>打开<code style="color:#FF6666">../Hexo/_config.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Site</span></div><div class="line">title: “你的博客名字”</div><div class="line">subtitle: “副标题”</div><div class="line">description: “描述”</div><div class="line">author: “作者”</div><div class="line">language: zh-Hans“这里的设置请参考下图”</div><div class="line">timezone:</div></pre></td></tr></table></figure></p>
<p><img src="/uploads/nextlan.png"><br>打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code> <!-- 这里是配置网页导航 --><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  about: /about</div><div class="line">  <span class="comment">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="comment">#commonweal: /404.html</span></div><div class="line">  <span class="comment">#&lt;!--下面是对应的图标哦 --&gt;</span></div><div class="line">  menu_icons:</div><div class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  schedule: calendar</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  sitemap: sitemap</div><div class="line">  commonweal: heartbeat</div></pre></td></tr></table></figure></p>
<p><code style="background-color:#F0F8FF;color: #FF0033">warn:</code> 在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的<code style="background-color:#F0F8FF;color: #FF0033">Font Awesome </code>图标名字） 的情况下，NexT 将会使用<code style="background-color:#F0F8FF;color: #FF0033"> </code>作为图标。 </p>
<h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>打开<code style="color:#FF6666">../Hexo/_config.yml</code>,搜索<code style="background-color:#F0F8FF;color: #FF0033">avatar</code><br><img src="/uploads/sethead.png"></p>
<h3 id="集成第三方服务"><a href="#集成第三方服务" class="headerlink" title="集成第三方服务"></a>集成第三方服务</h3><p>  <strong style="color: #3366FF">1.添加多说评论</strong><br>去<a href="http://feitianmai.duoshuo.com/admin/tools/" target="_blank" rel="external">多说</a>创建一个站点，具体步骤如下：<br><code style="color: #FF0033">a. 登录后在首页选择 “我要安装”。</code><br><code style="color: #FF0033">b. 创建站点，填写站点相关信息。随便填，圈起来的部分要记住</code><br><img src="/uploads/duoshuocre.png"><br>打开<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code>,搜索<code style="color:#FF6666">duoshuo_shortname</code>并修改为如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: iissnan-notes&lt;!-- 此处填写上图圈出来的部分,此写法作为例子 --&gt;</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">c. 开启多说热评文章</code><br>在<code style="color:#FF6666">../Hexo/themes/next/_config.yml</code>中设置<code style="background-color:#F0F8FF;color: #FF0033">duoshuo_hotartical</code>为<code style="color:#FF6666">true</code><br><code style="color: #FF0033">d. 多说评论修改</code><br>登录多说后，在首页右上角点击“后台管理”，选择站点名称打开多说后台管理页面，选择“设置”下拉找到“自定义CSS”输入框，填写以下CSS样式，效果参考文章结尾评论样式。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">/*-------------访客底部----------------*/</div><div class="line">.ds-recent-visitors &#123;</div><div class="line">    margin-bottom: 200px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@media (max-width: 768px) &#123;</div><div class="line">    .ds-recent-visitors &#123;</div><div class="line">        margin-bottom: 440px;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------非圆角----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-rounded &#123;</span></div><div class="line">    border-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.theme-next <span class="comment">#ds-thread #ds-reset .ds-textarea-wrapper &#123;</span></div><div class="line">    border-top-right-radius: 0px;</div><div class="line">    border-top-left-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.theme-next <span class="comment">#ds-thread #ds-reset .ds-post-button &#123;</span></div><div class="line">    border-radius: 0px;</div><div class="line">&#125;</div><div class="line"></div><div class="line">.ds-post-self xmp &#123;</div><div class="line">    word-wrap: <span class="built_in">break</span>-word;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------访客----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-avatar img,</span></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar img &#123;</span></div><div class="line">    width: 54px;</div><div class="line">    height: 54px; /*设置图像的长和宽，这里要根据自己的评论框情况更改*/</div><div class="line">    border-radius: 27px; /*设置图像圆角效果,在这里我直接设置了超过width/2的像素，即为圆形了*/</div><div class="line">    -webkit-border-radius: 27px; /*圆角效果：兼容webkit浏览器*/</div><div class="line">    -moz-border-radius: 27px;</div><div class="line">    box-shadow: inset 0 -1px 0 <span class="comment">#3333sf; /*设置图像阴影效果*/</span></div><div class="line">    -webkit-box-shadow: inset 0 -1px 0 <span class="comment">#3333sf;</span></div><div class="line">    -webkit-transition: 0.4s;</div><div class="line">    -webkit-transition: -webkit-transform 0.4s ease-out;</div><div class="line">    transition: transform 0.4s ease-out; /*变化时间设置为0.4秒(变化动作即为下面的图像旋转360读）*/</div><div class="line">    -moz-transition: -moz-transform 0.4s ease-out;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------访客悬浮在头像----------------*/</div><div class="line"><span class="comment">#ds-reset .ds-avatar img:hover,</span></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar img:hover &#123;</span></div><div class="line">    box-shadow: 0 0 10px <span class="comment">#fff;</span></div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20 px rgba(255, 255, 255, 1);</div><div class="line">    -webkit-box-shadow: 0 0 10px <span class="comment">#fff;</span></div><div class="line">rgba(255, 255, 255, .6), inset 0 0 20 px rgba(255, 255, 255, 1);</div><div class="line">    transform: rotateZ(360deg); /*图像旋转360度*/</div><div class="line">    -webkit-transform: rotateZ(360deg);</div><div class="line">    -moz-transform: rotateZ(360deg);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#ds-thread #ds-reset .ds-textarea-wrapper textarea &#123;</span></div><div class="line">    background: url(http://ww4.sinaimg.cn/small/649a4735gw1et7gnhy5fej20zk0m8q3q.jpg) right no-repeat;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">#ds-recent-visitors .ds-avatar &#123;</span></div><div class="line">    <span class="built_in">float</span>: left</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*-------------隐藏版权----------------*/</div><div class="line"><span class="comment">#ds-thread #ds-reset .ds-powered-by &#123;</span></div><div class="line">    display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> <strong style="color: #3366FF">2. 为Next添加文章阅读量功能</strong><br>  参考<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a><br>  <strong style="color: #3366FF">3.添加搜索功能</strong><br>不巧，刚在一个多月前Swiftype搜索只对企业开放，Algolia摸索了好久总有bug，下面介绍我找到的搜索方法：<br><code style="color: #FF0033">a. 在<code style="color:#FF6666">../Hexo</code>处右击鼠标打开Git Bash输入（目的是安装<code style="color:#FF6666">hexo-generator-searchdb</code>）：</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure></p>
<p><code style="color: #FF0033">b.在<code style="color:#FF6666">../Hexo/_config.yml</code>里面增下以下内容到任意位置：</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  <span class="built_in">limit</span>: 10000</div></pre></td></tr></table></figure></p>
<p>   <strong style="color: #3366FF">4.背景效果</strong><br>  点击鼠标出现红心,添加<a href="https://github.com/ehlxr/ehlxr.github.io/blob/master/js/src/love.js" target="_blank" rel="external">love.js</a>放在<code style="color:#FF6666">../hexo/themes/next/source/js/src</code>文件目录下。然后在<code style="color:#FF6666">../hexo/themes/next/layout/_layout.swig</code><i style="color:#F08080">末尾</i>添加引用：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">  &lt;!-- 页面点击小红心 --&gt;</div><div class="line">&lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/love.js"</span>&gt;&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>  <strong style="color: #3366FF">5.头像圆形旋转</strong><br>  把完整的sidebar-author.styl文件内容<a href="https://github.com/ehlxr/useful-code/blob/master/resources/sidebar-author.styl" target="_blank" rel="external">参考地址</a>复制替换到<code style="color:#FF6666">..hexo/themes/next/source/css/_common/components/sidebar/sidebar-author.styl</code>即可。</p>
<p><div style="text-align:center">更多开发参考<a href="http://theme-next.iissnan.com/getting-started.html#download-next-theme" target="_blank" rel="external">Next开发文档</a></div><hr></p>
<h3 id="注册Github并上传数据"><a href="#注册Github并上传数据" class="headerlink" title="注册Github并上传数据"></a>注册Github并上传数据</h3><p> <code style="color: #FF0033">a. 打开<a href="https://github.com/" target="_blank" rel="external">Github网站</a>，注册账号, 然后点击<i>Start a Project</i>,注册仓库如下填写，注意<i>Owner</i>的名字和<i>Pepository name</i>中<i>.github.io</i>前面的要一致！(这里因为我已经注册仓库，所以会提示已经存在)，然后创建仓库即可</code><br> <img src="/uploads/createrepos.png"><br> 最后在<code style="color:#FF6666">../Hexo/_config.yml</code>处拉到最后，写成如下:<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#swiftype_key: </span></div><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: http://github.com/Superbsco/Superbsco.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p> <code style="background-color:#F0F8FF;color: #FF0033">warn: 注意只需要把那两个Superbsco改为注册时候填写的仓库名称即可</code><br> 最后在<code style="color:#FF6666">../Hexo</code>执行Git hash先执行<code style="background-color:#F0F8FF;color: #FF0033">hexo clean</code>，然后重新部署执行<code style="background-color:#F0F8FF;color: #FF0033">hexo g</code>，并且上传执行<code style="background-color:#F0F8FF;color: #FF0033">hexo d</code>中途输入Github的账号密码即可上传成功，在浏览器打开<i>“你的仓库名字”.github.io</i>即可看到网页效果！<br> <div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="http://oapjp6spr.bkt.clouddn.com/18210.jpg" alt=""></div><div class="group-picture-column" style="width: 50%;"><img src="http://oapjp6spr.bkt.clouddn.com/196232.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/224147.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/199301.jpg" alt=""></div><div class="group-picture-column" style="width: 33.333333333333336%;"><img src="http://oapjp6spr.bkt.clouddn.com/213318.jpg" alt=""></div></div></div></div></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;不急，先上一首歌曲，然后慢慢记录~&lt;/blockquote&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=281275&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;h3 id=&quot;动机&quot;&gt;&lt;a href=&quot;#动机&quot; class=&quot;headerlink&quot; title=&quot;动机&quot;&gt;&lt;/a&gt;动机&lt;/h3&gt;&lt;p&gt;这几天一直在利用Hexo搭建自己的博客，对于hexo的强大能力感到赞叹，中途谷歌百度了很多教程，一路经历各种坎坷艰辛，而且别人的教程版本都很旧，在自己摸索下终于完成了现在这个博客，博客刚建立，文章少的可怜，就用来暖暖场吧~，也为了不使自己忘记，也因为一直有记录的习惯，算是个人笔记写一下这个博客的搭建记录吧~&lt;/p&gt;
&lt;p&gt;&lt;code style=&quot;color:#E9967A&quot;&gt;这个记录流程只适用于windows&lt;/code&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="多说" scheme="http://yoursite.com/tags/%E5%A4%9A%E8%AF%B4/"/>
    
      <category term="搜索" scheme="http://yoursite.com/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/01/12/hello-world/"/>
    <id>http://yoursite.com/2017/01/12/hello-world/</id>
    <published>2017-01-12T12:01:56.000Z</published>
    <updated>2017-01-14T07:43:20.741Z</updated>
    
    <content type="html"><![CDATA[<p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=431357712&auto=0&height=66"></iframe><strong>Welcome to my new blog! </strong><br>下面附录一大堆文字测试效果；</p>
<p><blockquote class="blockquote-center">我望着长城，常常不能自语。</blockquote><br>之前一直在学习html+css，偶尔查找资料发现了基于Hexo的博客，我一下子被这么美观的设计吸引了，原来有人可以把网页设计的这么棒，整个篇幅下来没有广告，很整洁，很清晰，主题明朗，阅读体验超级棒，于是想着搜索这个网站到底是怎么建立的，那么就找到了，原来这是一个台湾大学生tommy351用node.js开发的Hexo，Hexo是一个开源的静态博客生成器。对于建立个人网站来说，没有什么比博客更合适了，既然是开源的，那么我就疯狂谷歌百度查找资料，最终基于Hexo 3.2.2版本，使用Next主题写成了这个博客<a id="more"></a></p>
<p>谷歌百度查到的资料层出不穷，版本新旧都有，而且很简单的东西，有人非要写的那么复杂，让人看不懂，在综合了很多很多教程之后，遇到过很多很多问题，都是一个个的慢慢解决，比如头像旋转啊，添加facebook，微博啊之类的，最后的最后发现最基本的开发文档才是最靠谱的！！</p>
<p>随便写下这个首篇博客暖暖场，下面附录一些基本插入代码的格式，加入标题的格式，方便以后查看~~</p>
<h2 id="格式标语"><a href="#格式标语" class="headerlink" title="格式标语"></a>格式标语</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=431357712&amp;auto=0&amp;height=66&quot;&gt;&lt;/iframe&gt;&lt;strong&gt;Welcome to my new blog! &lt;/strong&gt;&lt;br&gt;下面附录一大堆文字测试效果；&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;我望着长城，常常不能自语。&lt;/blockquote&gt;&lt;br&gt;之前一直在学习html+css，偶尔查找资料发现了基于Hexo的博客，我一下子被这么美观的设计吸引了，原来有人可以把网页设计的这么棒，整个篇幅下来没有广告，很整洁，很清晰，主题明朗，阅读体验超级棒，于是想着搜索这个网站到底是怎么建立的，那么就找到了，原来这是一个台湾大学生tommy351用node.js开发的Hexo，Hexo是一个开源的静态博客生成器。对于建立个人网站来说，没有什么比博客更合适了，既然是开源的，那么我就疯狂谷歌百度查找资料，最终基于Hexo 3.2.2版本，使用Next主题写成了这个博客
    
    </summary>
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="文章" scheme="http://yoursite.com/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
